#!/usr/bin/env wolframscript

Get[Directory[] <> "/CRNSimulator.m"];
Get[Directory[] <> "/utils.m"];

MNIST[x0SposInitial_,x0SnegInitial_,x1SposInitial_,x1SnegInitial_,x2SposInitial_,x2SnegInitial_,x3SposInitial_,x3SnegInitial_,x4SposInitial_,x4SnegInitial_,x5SposInitial_,x5SnegInitial_,x6SposInitial_,x6SnegInitial_,x7SposInitial_,x7SnegInitial_,x8SposInitial_,x8SnegInitial_,x9SposInitial_,x9SnegInitial_,x10SposInitial_,x10SnegInitial_,x11SposInitial_,x11SnegInitial_,x12SposInitial_,x12SnegInitial_,x13SposInitial_,x13SnegInitial_,x14SposInitial_,x14SnegInitial_,x15SposInitial_,x15SnegInitial_,x16SposInitial_,x16SnegInitial_,x17SposInitial_,x17SnegInitial_,x18SposInitial_,x18SnegInitial_,x19SposInitial_,x19SnegInitial_,x20SposInitial_,x20SnegInitial_,x21SposInitial_,x21SnegInitial_,x22SposInitial_,x22SnegInitial_,x23SposInitial_,x23SnegInitial_,x24SposInitial_,x24SnegInitial_,x25SposInitial_,x25SnegInitial_,x26SposInitial_,x26SnegInitial_,x27SposInitial_,x27SnegInitial_,x28SposInitial_,x28SnegInitial_,x29SposInitial_,x29SnegInitial_,x30SposInitial_,x30SnegInitial_,x31SposInitial_,x31SnegInitial_,x32SposInitial_,x32SnegInitial_,x33SposInitial_,x33SnegInitial_,x34SposInitial_,x34SnegInitial_,x35SposInitial_,x35SnegInitial_,x36SposInitial_,x36SnegInitial_,x37SposInitial_,x37SnegInitial_,x38SposInitial_,x38SnegInitial_,x39SposInitial_,x39SnegInitial_,x40SposInitial_,x40SnegInitial_,x41SposInitial_,x41SnegInitial_,x42SposInitial_,x42SnegInitial_,x43SposInitial_,x43SnegInitial_,x44SposInitial_,x44SnegInitial_,x45SposInitial_,x45SnegInitial_,x46SposInitial_,x46SnegInitial_,x47SposInitial_,x47SnegInitial_,x48SposInitial_,x48SnegInitial_,x49SposInitial_,x49SnegInitial_,x50SposInitial_,x50SnegInitial_,x51SposInitial_,x51SnegInitial_,x52SposInitial_,x52SnegInitial_,x53SposInitial_,x53SnegInitial_,x54SposInitial_,x54SnegInitial_,x55SposInitial_,x55SnegInitial_,x56SposInitial_,x56SnegInitial_,x57SposInitial_,x57SnegInitial_,x58SposInitial_,x58SnegInitial_,x59SposInitial_,x59SnegInitial_,x60SposInitial_,x60SnegInitial_,x61SposInitial_,x61SnegInitial_,x62SposInitial_,x62SnegInitial_,x63SposInitial_,x63SnegInitial_,x64SposInitial_,x64SnegInitial_,x65SposInitial_,x65SnegInitial_,x66SposInitial_,x66SnegInitial_,x67SposInitial_,x67SnegInitial_,x68SposInitial_,x68SnegInitial_,x69SposInitial_,x69SnegInitial_,x70SposInitial_,x70SnegInitial_,x71SposInitial_,x71SnegInitial_,x72SposInitial_,x72SnegInitial_,x73SposInitial_,x73SnegInitial_,x74SposInitial_,x74SnegInitial_,x75SposInitial_,x75SnegInitial_,x76SposInitial_,x76SnegInitial_,x77SposInitial_,x77SnegInitial_,x78SposInitial_,x78SnegInitial_,x79SposInitial_,x79SnegInitial_,x80SposInitial_,x80SnegInitial_,x81SposInitial_,x81SnegInitial_,x82SposInitial_,x82SnegInitial_,x83SposInitial_,x83SnegInitial_,x84SposInitial_,x84SnegInitial_,x85SposInitial_,x85SnegInitial_,x86SposInitial_,x86SnegInitial_,x87SposInitial_,x87SnegInitial_,x88SposInitial_,x88SnegInitial_,x89SposInitial_,x89SnegInitial_,x90SposInitial_,x90SnegInitial_,x91SposInitial_,x91SnegInitial_,x92SposInitial_,x92SnegInitial_,x93SposInitial_,x93SnegInitial_,x94SposInitial_,x94SnegInitial_,x95SposInitial_,x95SnegInitial_,x96SposInitial_,x96SnegInitial_,x97SposInitial_,x97SnegInitial_,x98SposInitial_,x98SnegInitial_,x99SposInitial_,x99SnegInitial_,x100SposInitial_,x100SnegInitial_,x101SposInitial_,x101SnegInitial_,x102SposInitial_,x102SnegInitial_,x103SposInitial_,x103SnegInitial_,x104SposInitial_,x104SnegInitial_,x105SposInitial_,x105SnegInitial_,x106SposInitial_,x106SnegInitial_,x107SposInitial_,x107SnegInitial_,x108SposInitial_,x108SnegInitial_,x109SposInitial_,x109SnegInitial_,x110SposInitial_,x110SnegInitial_,x111SposInitial_,x111SnegInitial_,x112SposInitial_,x112SnegInitial_,x113SposInitial_,x113SnegInitial_,x114SposInitial_,x114SnegInitial_,x115SposInitial_,x115SnegInitial_,x116SposInitial_,x116SnegInitial_,x117SposInitial_,x117SnegInitial_,x118SposInitial_,x118SnegInitial_,x119SposInitial_,x119SnegInitial_,x120SposInitial_,x120SnegInitial_,x121SposInitial_,x121SnegInitial_,x122SposInitial_,x122SnegInitial_,x123SposInitial_,x123SnegInitial_,x124SposInitial_,x124SnegInitial_,x125SposInitial_,x125SnegInitial_,x126SposInitial_,x126SnegInitial_,x127SposInitial_,x127SnegInitial_,x128SposInitial_,x128SnegInitial_,x129SposInitial_,x129SnegInitial_,x130SposInitial_,x130SnegInitial_,x131SposInitial_,x131SnegInitial_,x132SposInitial_,x132SnegInitial_,x133SposInitial_,x133SnegInitial_,x134SposInitial_,x134SnegInitial_,x135SposInitial_,x135SnegInitial_,x136SposInitial_,x136SnegInitial_,x137SposInitial_,x137SnegInitial_,x138SposInitial_,x138SnegInitial_,x139SposInitial_,x139SnegInitial_,x140SposInitial_,x140SnegInitial_,x141SposInitial_,x141SnegInitial_,x142SposInitial_,x142SnegInitial_,x143SposInitial_,x143SnegInitial_,x144SposInitial_,x144SnegInitial_,x145SposInitial_,x145SnegInitial_,x146SposInitial_,x146SnegInitial_,x147SposInitial_,x147SnegInitial_,x148SposInitial_,x148SnegInitial_,x149SposInitial_,x149SnegInitial_,x150SposInitial_,x150SnegInitial_,x151SposInitial_,x151SnegInitial_,x152SposInitial_,x152SnegInitial_,x153SposInitial_,x153SnegInitial_,x154SposInitial_,x154SnegInitial_,x155SposInitial_,x155SnegInitial_,x156SposInitial_,x156SnegInitial_,x157SposInitial_,x157SnegInitial_,x158SposInitial_,x158SnegInitial_,x159SposInitial_,x159SnegInitial_,x160SposInitial_,x160SnegInitial_,x161SposInitial_,x161SnegInitial_,x162SposInitial_,x162SnegInitial_,x163SposInitial_,x163SnegInitial_,x164SposInitial_,x164SnegInitial_,x165SposInitial_,x165SnegInitial_,x166SposInitial_,x166SnegInitial_,x167SposInitial_,x167SnegInitial_,x168SposInitial_,x168SnegInitial_,x169SposInitial_,x169SnegInitial_,x170SposInitial_,x170SnegInitial_,x171SposInitial_,x171SnegInitial_,x172SposInitial_,x172SnegInitial_,x173SposInitial_,x173SnegInitial_,x174SposInitial_,x174SnegInitial_,x175SposInitial_,x175SnegInitial_,x176SposInitial_,x176SnegInitial_,x177SposInitial_,x177SnegInitial_,x178SposInitial_,x178SnegInitial_,x179SposInitial_,x179SnegInitial_,x180SposInitial_,x180SnegInitial_,x181SposInitial_,x181SnegInitial_,x182SposInitial_,x182SnegInitial_,x183SposInitial_,x183SnegInitial_,x184SposInitial_,x184SnegInitial_,x185SposInitial_,x185SnegInitial_,x186SposInitial_,x186SnegInitial_,x187SposInitial_,x187SnegInitial_,x188SposInitial_,x188SnegInitial_,x189SposInitial_,x189SnegInitial_,x190SposInitial_,x190SnegInitial_,x191SposInitial_,x191SnegInitial_,x192SposInitial_,x192SnegInitial_,x193SposInitial_,x193SnegInitial_,x194SposInitial_,x194SnegInitial_,x195SposInitial_,x195SnegInitial_] :=
{
conc[x0Spos, x0SposInitial],
conc[x0Sneg, x0SnegInitial],
conc[x1Spos, x1SposInitial],
conc[x1Sneg, x1SnegInitial],
conc[x2Spos, x2SposInitial],
conc[x2Sneg, x2SnegInitial],
conc[x3Spos, x3SposInitial],
conc[x3Sneg, x3SnegInitial],
conc[x4Spos, x4SposInitial],
conc[x4Sneg, x4SnegInitial],
conc[x5Spos, x5SposInitial],
conc[x5Sneg, x5SnegInitial],
conc[x6Spos, x6SposInitial],
conc[x6Sneg, x6SnegInitial],
conc[x7Spos, x7SposInitial],
conc[x7Sneg, x7SnegInitial],
conc[x8Spos, x8SposInitial],
conc[x8Sneg, x8SnegInitial],
conc[x9Spos, x9SposInitial],
conc[x9Sneg, x9SnegInitial],
conc[x10Spos, x10SposInitial],
conc[x10Sneg, x10SnegInitial],
conc[x11Spos, x11SposInitial],
conc[x11Sneg, x11SnegInitial],
conc[x12Spos, x12SposInitial],
conc[x12Sneg, x12SnegInitial],
conc[x13Spos, x13SposInitial],
conc[x13Sneg, x13SnegInitial],
conc[x14Spos, x14SposInitial],
conc[x14Sneg, x14SnegInitial],
conc[x15Spos, x15SposInitial],
conc[x15Sneg, x15SnegInitial],
conc[x16Spos, x16SposInitial],
conc[x16Sneg, x16SnegInitial],
conc[x17Spos, x17SposInitial],
conc[x17Sneg, x17SnegInitial],
conc[x18Spos, x18SposInitial],
conc[x18Sneg, x18SnegInitial],
conc[x19Spos, x19SposInitial],
conc[x19Sneg, x19SnegInitial],
conc[x20Spos, x20SposInitial],
conc[x20Sneg, x20SnegInitial],
conc[x21Spos, x21SposInitial],
conc[x21Sneg, x21SnegInitial],
conc[x22Spos, x22SposInitial],
conc[x22Sneg, x22SnegInitial],
conc[x23Spos, x23SposInitial],
conc[x23Sneg, x23SnegInitial],
conc[x24Spos, x24SposInitial],
conc[x24Sneg, x24SnegInitial],
conc[x25Spos, x25SposInitial],
conc[x25Sneg, x25SnegInitial],
conc[x26Spos, x26SposInitial],
conc[x26Sneg, x26SnegInitial],
conc[x27Spos, x27SposInitial],
conc[x27Sneg, x27SnegInitial],
conc[x28Spos, x28SposInitial],
conc[x28Sneg, x28SnegInitial],
conc[x29Spos, x29SposInitial],
conc[x29Sneg, x29SnegInitial],
conc[x30Spos, x30SposInitial],
conc[x30Sneg, x30SnegInitial],
conc[x31Spos, x31SposInitial],
conc[x31Sneg, x31SnegInitial],
conc[x32Spos, x32SposInitial],
conc[x32Sneg, x32SnegInitial],
conc[x33Spos, x33SposInitial],
conc[x33Sneg, x33SnegInitial],
conc[x34Spos, x34SposInitial],
conc[x34Sneg, x34SnegInitial],
conc[x35Spos, x35SposInitial],
conc[x35Sneg, x35SnegInitial],
conc[x36Spos, x36SposInitial],
conc[x36Sneg, x36SnegInitial],
conc[x37Spos, x37SposInitial],
conc[x37Sneg, x37SnegInitial],
conc[x38Spos, x38SposInitial],
conc[x38Sneg, x38SnegInitial],
conc[x39Spos, x39SposInitial],
conc[x39Sneg, x39SnegInitial],
conc[x40Spos, x40SposInitial],
conc[x40Sneg, x40SnegInitial],
conc[x41Spos, x41SposInitial],
conc[x41Sneg, x41SnegInitial],
conc[x42Spos, x42SposInitial],
conc[x42Sneg, x42SnegInitial],
conc[x43Spos, x43SposInitial],
conc[x43Sneg, x43SnegInitial],
conc[x44Spos, x44SposInitial],
conc[x44Sneg, x44SnegInitial],
conc[x45Spos, x45SposInitial],
conc[x45Sneg, x45SnegInitial],
conc[x46Spos, x46SposInitial],
conc[x46Sneg, x46SnegInitial],
conc[x47Spos, x47SposInitial],
conc[x47Sneg, x47SnegInitial],
conc[x48Spos, x48SposInitial],
conc[x48Sneg, x48SnegInitial],
conc[x49Spos, x49SposInitial],
conc[x49Sneg, x49SnegInitial],
conc[x50Spos, x50SposInitial],
conc[x50Sneg, x50SnegInitial],
conc[x51Spos, x51SposInitial],
conc[x51Sneg, x51SnegInitial],
conc[x52Spos, x52SposInitial],
conc[x52Sneg, x52SnegInitial],
conc[x53Spos, x53SposInitial],
conc[x53Sneg, x53SnegInitial],
conc[x54Spos, x54SposInitial],
conc[x54Sneg, x54SnegInitial],
conc[x55Spos, x55SposInitial],
conc[x55Sneg, x55SnegInitial],
conc[x56Spos, x56SposInitial],
conc[x56Sneg, x56SnegInitial],
conc[x57Spos, x57SposInitial],
conc[x57Sneg, x57SnegInitial],
conc[x58Spos, x58SposInitial],
conc[x58Sneg, x58SnegInitial],
conc[x59Spos, x59SposInitial],
conc[x59Sneg, x59SnegInitial],
conc[x60Spos, x60SposInitial],
conc[x60Sneg, x60SnegInitial],
conc[x61Spos, x61SposInitial],
conc[x61Sneg, x61SnegInitial],
conc[x62Spos, x62SposInitial],
conc[x62Sneg, x62SnegInitial],
conc[x63Spos, x63SposInitial],
conc[x63Sneg, x63SnegInitial],
conc[x64Spos, x64SposInitial],
conc[x64Sneg, x64SnegInitial],
conc[x65Spos, x65SposInitial],
conc[x65Sneg, x65SnegInitial],
conc[x66Spos, x66SposInitial],
conc[x66Sneg, x66SnegInitial],
conc[x67Spos, x67SposInitial],
conc[x67Sneg, x67SnegInitial],
conc[x68Spos, x68SposInitial],
conc[x68Sneg, x68SnegInitial],
conc[x69Spos, x69SposInitial],
conc[x69Sneg, x69SnegInitial],
conc[x70Spos, x70SposInitial],
conc[x70Sneg, x70SnegInitial],
conc[x71Spos, x71SposInitial],
conc[x71Sneg, x71SnegInitial],
conc[x72Spos, x72SposInitial],
conc[x72Sneg, x72SnegInitial],
conc[x73Spos, x73SposInitial],
conc[x73Sneg, x73SnegInitial],
conc[x74Spos, x74SposInitial],
conc[x74Sneg, x74SnegInitial],
conc[x75Spos, x75SposInitial],
conc[x75Sneg, x75SnegInitial],
conc[x76Spos, x76SposInitial],
conc[x76Sneg, x76SnegInitial],
conc[x77Spos, x77SposInitial],
conc[x77Sneg, x77SnegInitial],
conc[x78Spos, x78SposInitial],
conc[x78Sneg, x78SnegInitial],
conc[x79Spos, x79SposInitial],
conc[x79Sneg, x79SnegInitial],
conc[x80Spos, x80SposInitial],
conc[x80Sneg, x80SnegInitial],
conc[x81Spos, x81SposInitial],
conc[x81Sneg, x81SnegInitial],
conc[x82Spos, x82SposInitial],
conc[x82Sneg, x82SnegInitial],
conc[x83Spos, x83SposInitial],
conc[x83Sneg, x83SnegInitial],
conc[x84Spos, x84SposInitial],
conc[x84Sneg, x84SnegInitial],
conc[x85Spos, x85SposInitial],
conc[x85Sneg, x85SnegInitial],
conc[x86Spos, x86SposInitial],
conc[x86Sneg, x86SnegInitial],
conc[x87Spos, x87SposInitial],
conc[x87Sneg, x87SnegInitial],
conc[x88Spos, x88SposInitial],
conc[x88Sneg, x88SnegInitial],
conc[x89Spos, x89SposInitial],
conc[x89Sneg, x89SnegInitial],
conc[x90Spos, x90SposInitial],
conc[x90Sneg, x90SnegInitial],
conc[x91Spos, x91SposInitial],
conc[x91Sneg, x91SnegInitial],
conc[x92Spos, x92SposInitial],
conc[x92Sneg, x92SnegInitial],
conc[x93Spos, x93SposInitial],
conc[x93Sneg, x93SnegInitial],
conc[x94Spos, x94SposInitial],
conc[x94Sneg, x94SnegInitial],
conc[x95Spos, x95SposInitial],
conc[x95Sneg, x95SnegInitial],
conc[x96Spos, x96SposInitial],
conc[x96Sneg, x96SnegInitial],
conc[x97Spos, x97SposInitial],
conc[x97Sneg, x97SnegInitial],
conc[x98Spos, x98SposInitial],
conc[x98Sneg, x98SnegInitial],
conc[x99Spos, x99SposInitial],
conc[x99Sneg, x99SnegInitial],
conc[x100Spos, x100SposInitial],
conc[x100Sneg, x100SnegInitial],
conc[x101Spos, x101SposInitial],
conc[x101Sneg, x101SnegInitial],
conc[x102Spos, x102SposInitial],
conc[x102Sneg, x102SnegInitial],
conc[x103Spos, x103SposInitial],
conc[x103Sneg, x103SnegInitial],
conc[x104Spos, x104SposInitial],
conc[x104Sneg, x104SnegInitial],
conc[x105Spos, x105SposInitial],
conc[x105Sneg, x105SnegInitial],
conc[x106Spos, x106SposInitial],
conc[x106Sneg, x106SnegInitial],
conc[x107Spos, x107SposInitial],
conc[x107Sneg, x107SnegInitial],
conc[x108Spos, x108SposInitial],
conc[x108Sneg, x108SnegInitial],
conc[x109Spos, x109SposInitial],
conc[x109Sneg, x109SnegInitial],
conc[x110Spos, x110SposInitial],
conc[x110Sneg, x110SnegInitial],
conc[x111Spos, x111SposInitial],
conc[x111Sneg, x111SnegInitial],
conc[x112Spos, x112SposInitial],
conc[x112Sneg, x112SnegInitial],
conc[x113Spos, x113SposInitial],
conc[x113Sneg, x113SnegInitial],
conc[x114Spos, x114SposInitial],
conc[x114Sneg, x114SnegInitial],
conc[x115Spos, x115SposInitial],
conc[x115Sneg, x115SnegInitial],
conc[x116Spos, x116SposInitial],
conc[x116Sneg, x116SnegInitial],
conc[x117Spos, x117SposInitial],
conc[x117Sneg, x117SnegInitial],
conc[x118Spos, x118SposInitial],
conc[x118Sneg, x118SnegInitial],
conc[x119Spos, x119SposInitial],
conc[x119Sneg, x119SnegInitial],
conc[x120Spos, x120SposInitial],
conc[x120Sneg, x120SnegInitial],
conc[x121Spos, x121SposInitial],
conc[x121Sneg, x121SnegInitial],
conc[x122Spos, x122SposInitial],
conc[x122Sneg, x122SnegInitial],
conc[x123Spos, x123SposInitial],
conc[x123Sneg, x123SnegInitial],
conc[x124Spos, x124SposInitial],
conc[x124Sneg, x124SnegInitial],
conc[x125Spos, x125SposInitial],
conc[x125Sneg, x125SnegInitial],
conc[x126Spos, x126SposInitial],
conc[x126Sneg, x126SnegInitial],
conc[x127Spos, x127SposInitial],
conc[x127Sneg, x127SnegInitial],
conc[x128Spos, x128SposInitial],
conc[x128Sneg, x128SnegInitial],
conc[x129Spos, x129SposInitial],
conc[x129Sneg, x129SnegInitial],
conc[x130Spos, x130SposInitial],
conc[x130Sneg, x130SnegInitial],
conc[x131Spos, x131SposInitial],
conc[x131Sneg, x131SnegInitial],
conc[x132Spos, x132SposInitial],
conc[x132Sneg, x132SnegInitial],
conc[x133Spos, x133SposInitial],
conc[x133Sneg, x133SnegInitial],
conc[x134Spos, x134SposInitial],
conc[x134Sneg, x134SnegInitial],
conc[x135Spos, x135SposInitial],
conc[x135Sneg, x135SnegInitial],
conc[x136Spos, x136SposInitial],
conc[x136Sneg, x136SnegInitial],
conc[x137Spos, x137SposInitial],
conc[x137Sneg, x137SnegInitial],
conc[x138Spos, x138SposInitial],
conc[x138Sneg, x138SnegInitial],
conc[x139Spos, x139SposInitial],
conc[x139Sneg, x139SnegInitial],
conc[x140Spos, x140SposInitial],
conc[x140Sneg, x140SnegInitial],
conc[x141Spos, x141SposInitial],
conc[x141Sneg, x141SnegInitial],
conc[x142Spos, x142SposInitial],
conc[x142Sneg, x142SnegInitial],
conc[x143Spos, x143SposInitial],
conc[x143Sneg, x143SnegInitial],
conc[x144Spos, x144SposInitial],
conc[x144Sneg, x144SnegInitial],
conc[x145Spos, x145SposInitial],
conc[x145Sneg, x145SnegInitial],
conc[x146Spos, x146SposInitial],
conc[x146Sneg, x146SnegInitial],
conc[x147Spos, x147SposInitial],
conc[x147Sneg, x147SnegInitial],
conc[x148Spos, x148SposInitial],
conc[x148Sneg, x148SnegInitial],
conc[x149Spos, x149SposInitial],
conc[x149Sneg, x149SnegInitial],
conc[x150Spos, x150SposInitial],
conc[x150Sneg, x150SnegInitial],
conc[x151Spos, x151SposInitial],
conc[x151Sneg, x151SnegInitial],
conc[x152Spos, x152SposInitial],
conc[x152Sneg, x152SnegInitial],
conc[x153Spos, x153SposInitial],
conc[x153Sneg, x153SnegInitial],
conc[x154Spos, x154SposInitial],
conc[x154Sneg, x154SnegInitial],
conc[x155Spos, x155SposInitial],
conc[x155Sneg, x155SnegInitial],
conc[x156Spos, x156SposInitial],
conc[x156Sneg, x156SnegInitial],
conc[x157Spos, x157SposInitial],
conc[x157Sneg, x157SnegInitial],
conc[x158Spos, x158SposInitial],
conc[x158Sneg, x158SnegInitial],
conc[x159Spos, x159SposInitial],
conc[x159Sneg, x159SnegInitial],
conc[x160Spos, x160SposInitial],
conc[x160Sneg, x160SnegInitial],
conc[x161Spos, x161SposInitial],
conc[x161Sneg, x161SnegInitial],
conc[x162Spos, x162SposInitial],
conc[x162Sneg, x162SnegInitial],
conc[x163Spos, x163SposInitial],
conc[x163Sneg, x163SnegInitial],
conc[x164Spos, x164SposInitial],
conc[x164Sneg, x164SnegInitial],
conc[x165Spos, x165SposInitial],
conc[x165Sneg, x165SnegInitial],
conc[x166Spos, x166SposInitial],
conc[x166Sneg, x166SnegInitial],
conc[x167Spos, x167SposInitial],
conc[x167Sneg, x167SnegInitial],
conc[x168Spos, x168SposInitial],
conc[x168Sneg, x168SnegInitial],
conc[x169Spos, x169SposInitial],
conc[x169Sneg, x169SnegInitial],
conc[x170Spos, x170SposInitial],
conc[x170Sneg, x170SnegInitial],
conc[x171Spos, x171SposInitial],
conc[x171Sneg, x171SnegInitial],
conc[x172Spos, x172SposInitial],
conc[x172Sneg, x172SnegInitial],
conc[x173Spos, x173SposInitial],
conc[x173Sneg, x173SnegInitial],
conc[x174Spos, x174SposInitial],
conc[x174Sneg, x174SnegInitial],
conc[x175Spos, x175SposInitial],
conc[x175Sneg, x175SnegInitial],
conc[x176Spos, x176SposInitial],
conc[x176Sneg, x176SnegInitial],
conc[x177Spos, x177SposInitial],
conc[x177Sneg, x177SnegInitial],
conc[x178Spos, x178SposInitial],
conc[x178Sneg, x178SnegInitial],
conc[x179Spos, x179SposInitial],
conc[x179Sneg, x179SnegInitial],
conc[x180Spos, x180SposInitial],
conc[x180Sneg, x180SnegInitial],
conc[x181Spos, x181SposInitial],
conc[x181Sneg, x181SnegInitial],
conc[x182Spos, x182SposInitial],
conc[x182Sneg, x182SnegInitial],
conc[x183Spos, x183SposInitial],
conc[x183Sneg, x183SnegInitial],
conc[x184Spos, x184SposInitial],
conc[x184Sneg, x184SnegInitial],
conc[x185Spos, x185SposInitial],
conc[x185Sneg, x185SnegInitial],
conc[x186Spos, x186SposInitial],
conc[x186Sneg, x186SnegInitial],
conc[x187Spos, x187SposInitial],
conc[x187Sneg, x187SnegInitial],
conc[x188Spos, x188SposInitial],
conc[x188Sneg, x188SnegInitial],
conc[x189Spos, x189SposInitial],
conc[x189Sneg, x189SnegInitial],
conc[x190Spos, x190SposInitial],
conc[x190Sneg, x190SnegInitial],
conc[x191Spos, x191SposInitial],
conc[x191Sneg, x191SnegInitial],
conc[x192Spos, x192SposInitial],
conc[x192Sneg, x192SnegInitial],
conc[x193Spos, x193SposInitial],
conc[x193Sneg, x193SnegInitial],
conc[x194Spos, x194SposInitial],
conc[x194Sneg, x194SnegInitial],
conc[x195Spos, x195SposInitial],
conc[x195Sneg, x195SnegInitial],
rxn[x0Spos,iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N11Spos+iL0N12Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N21Sneg+iL0N23Spos+iL0N26Spos+iL0N27Sneg+iL0N29Spos+iL0N31Spos+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N45Sneg+iL0N49Sneg+iL0N52Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N62Sneg,1],
rxn[x0Sneg,iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N11Sneg+iL0N12Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N21Spos+iL0N23Sneg+iL0N26Sneg+iL0N27Spos+iL0N29Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N45Spos+iL0N49Spos+iL0N52Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N62Spos,1],
rxn[x1Spos,iL0N0Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Spos+iL0N13Sneg+iL0N14Sneg+iL0N17Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N25Sneg+iL0N28Spos+iL0N32Spos+iL0N33Sneg+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N43Sneg+iL0N44Spos+iL0N46Sneg+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N59Sneg+iL0N60Sneg+iL0N63Sneg,1],
rxn[x1Sneg,iL0N0Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N8Spos+iL0N9Spos+iL0N10Sneg+iL0N13Spos+iL0N14Spos+iL0N17Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N25Spos+iL0N28Sneg+iL0N32Sneg+iL0N33Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N43Spos+iL0N44Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N59Spos+iL0N60Spos+iL0N63Spos,1],
rxn[x2Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x2Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x3Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x3Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x4Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x4Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x5Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x5Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x6Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x6Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x7Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x7Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x8Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x8Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x9Spos,iL0N0Spos+iL0N2Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x9Sneg,iL0N0Sneg+iL0N2Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x10Spos,iL0N0Spos+iL0N2Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x10Sneg,iL0N0Sneg+iL0N2Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x11Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x11Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x12Spos,iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N11Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x12Sneg,iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N11Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x13Spos,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N5Spos+iL0N6Sneg+iL0N17Spos+iL0N20Sneg+iL0N21Spos+iL0N22Sneg+iL0N24Spos+iL0N25Spos+iL0N27Sneg+iL0N28Spos+iL0N30Spos+iL0N33Spos+iL0N34Spos+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N41Spos+iL0N45Spos+iL0N46Sneg+iL0N48Spos+iL0N49Spos+iL0N51Sneg+iL0N53Spos+iL0N57Sneg+iL0N58Spos+iL0N60Spos+iL0N61Spos+iL0N63Spos,1],
rxn[x13Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N5Sneg+iL0N6Spos+iL0N17Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Spos+iL0N24Sneg+iL0N25Sneg+iL0N27Spos+iL0N28Sneg+iL0N30Sneg+iL0N33Sneg+iL0N34Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N41Sneg+iL0N45Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Sneg+iL0N51Spos+iL0N53Sneg+iL0N57Spos+iL0N58Sneg+iL0N60Sneg+iL0N61Sneg+iL0N63Sneg,1],
rxn[x14Spos,iL0N0Spos+iL0N3Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N9Sneg+iL0N10Spos+iL0N12Sneg+iL0N15Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N24Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N58Spos+iL0N60Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x14Sneg,iL0N0Sneg+iL0N3Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N9Spos+iL0N10Sneg+iL0N12Spos+iL0N15Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N24Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N58Sneg+iL0N60Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x15Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x15Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x16Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Sneg+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x16Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x17Spos,iL0N0Spos+iL0N1Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N12Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x17Sneg,iL0N0Sneg+iL0N1Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N12Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x18Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N27Sneg+iL0N29Spos+iL0N31Spos+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x18Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N27Spos+iL0N29Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x19Spos,iL0N0Sneg+iL0N1Spos+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N35Spos+iL0N36Sneg+iL0N38Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg,1],
rxn[x19Sneg,iL0N0Spos+iL0N1Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N35Sneg+iL0N36Spos+iL0N38Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos,1],
rxn[x20Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N42Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x20Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N42Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x21Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N38Sneg+iL0N40Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos,1],
rxn[x21Sneg,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N38Spos+iL0N40Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg,1],
rxn[x22Spos,iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N7Sneg+iL0N8Sneg+iL0N11Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N43Sneg+iL0N45Sneg+iL0N47Spos+iL0N48Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x22Sneg,iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N7Spos+iL0N8Spos+iL0N11Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N43Spos+iL0N45Spos+iL0N47Sneg+iL0N48Spos+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x23Spos,iL0N0Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N6Sneg+iL0N9Spos+iL0N11Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg,1],
rxn[x23Sneg,iL0N0Sneg+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N6Spos+iL0N9Sneg+iL0N11Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos,1],
rxn[x24Spos,iL0N0Spos+iL0N1Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N54Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x24Sneg,iL0N0Sneg+iL0N1Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N54Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x25Spos,iL0N0Sneg+iL0N2Sneg+iL0N4Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x25Sneg,iL0N0Spos+iL0N2Spos+iL0N4Sneg+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x26Spos,iL0N0Spos+iL0N1Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N21Spos+iL0N22Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x26Sneg,iL0N0Sneg+iL0N1Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N21Sneg+iL0N22Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x27Spos,iL0N0Spos+iL0N1Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x27Sneg,iL0N0Sneg+iL0N1Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x28Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x28Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x29Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x29Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x30Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Sneg+iL0N24Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x30Sneg,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Spos+iL0N24Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x31Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Sneg+iL0N14Sneg+iL0N18Spos+iL0N20Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x31Sneg,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N9Sneg+iL0N11Spos+iL0N12Spos+iL0N14Spos+iL0N18Sneg+iL0N20Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N32Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x32Spos,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N4Spos+iL0N5Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N31Sneg+iL0N32Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Sneg,1],
rxn[x32Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N4Sneg+iL0N5Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N23Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N31Spos+iL0N32Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Spos,1],
rxn[x33Spos,iL0N1Spos+iL0N3Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N9Sneg+iL0N13Sneg+iL0N15Sneg+iL0N16Spos+iL0N19Sneg+iL0N23Sneg+iL0N24Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N34Sneg+iL0N35Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N41Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N63Sneg,1],
rxn[x33Sneg,iL0N1Sneg+iL0N3Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N9Spos+iL0N13Spos+iL0N15Spos+iL0N16Sneg+iL0N19Spos+iL0N23Spos+iL0N24Sneg+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N34Spos+iL0N35Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N41Spos+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N63Spos,1],
rxn[x34Spos,iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N15Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N24Spos+iL0N26Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N43Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N52Spos+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x34Sneg,iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N15Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N24Sneg+iL0N26Spos+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N43Spos+iL0N46Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N52Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x35Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N8Sneg+iL0N9Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N24Spos+iL0N27Spos+iL0N28Sneg+iL0N30Sneg+iL0N31Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N44Sneg+iL0N48Sneg+iL0N50Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N60Sneg+iL0N62Sneg,1],
rxn[x35Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N8Spos+iL0N9Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N24Sneg+iL0N27Sneg+iL0N28Spos+iL0N30Spos+iL0N31Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N44Spos+iL0N48Spos+iL0N50Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N60Spos+iL0N62Spos,1],
rxn[x36Spos,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N19Spos+iL0N20Spos+iL0N23Spos+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N32Sneg+iL0N34Sneg+iL0N36Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Spos+iL0N47Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N57Spos+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x36Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N19Sneg+iL0N20Sneg+iL0N23Sneg+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N32Spos+iL0N34Spos+iL0N36Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N43Spos+iL0N44Spos+iL0N45Sneg+iL0N47Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N57Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x37Spos,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N12Sneg+iL0N13Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N23Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N43Sneg+iL0N47Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N57Spos+iL0N58Sneg+iL0N60Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x37Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N12Spos+iL0N13Sneg+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N23Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N43Spos+iL0N47Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N57Sneg+iL0N58Spos+iL0N60Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x38Spos,iL0N0Spos+iL0N1Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N18Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N27Sneg+iL0N30Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N58Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x38Sneg,iL0N0Sneg+iL0N1Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N18Spos+iL0N20Spos+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N27Spos+iL0N30Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N58Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x39Spos,iL0N0Spos+iL0N1Sneg+iL0N3Sneg+iL0N4Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N12Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N47Sneg+iL0N48Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x39Sneg,iL0N0Sneg+iL0N1Spos+iL0N3Spos+iL0N4Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N12Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Sneg+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N47Spos+iL0N48Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x40Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N15Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Sneg+iL0N24Spos+iL0N26Spos+iL0N28Spos+iL0N29Spos+iL0N31Sneg+iL0N32Spos+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x40Sneg,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N15Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N21Spos+iL0N22Sneg+iL0N23Spos+iL0N24Sneg+iL0N26Sneg+iL0N28Sneg+iL0N29Sneg+iL0N31Spos+iL0N32Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x41Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x41Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x42Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x42Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x43Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N22Spos+iL0N23Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N62Sneg,1],
rxn[x43Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N22Sneg+iL0N23Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N62Spos,1],
rxn[x44Spos,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N14Sneg+iL0N15Sneg+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N50Sneg+iL0N51Sneg+iL0N53Spos+iL0N55Spos+iL0N57Spos+iL0N58Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x44Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N14Spos+iL0N15Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N50Spos+iL0N51Spos+iL0N53Sneg+iL0N55Sneg+iL0N57Sneg+iL0N58Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x45Spos,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Sneg+iL0N16Spos+iL0N17Spos+iL0N20Spos+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N41Sneg+iL0N42Sneg+iL0N44Spos+iL0N47Sneg+iL0N49Sneg+iL0N54Sneg+iL0N55Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N61Sneg+iL0N62Sneg,1],
rxn[x45Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N14Spos+iL0N16Sneg+iL0N17Sneg+iL0N20Sneg+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N41Spos+iL0N42Spos+iL0N44Sneg+iL0N47Spos+iL0N49Spos+iL0N54Spos+iL0N55Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N61Spos+iL0N62Spos,1],
rxn[x46Spos,iL0N2Sneg+iL0N3Sneg+iL0N7Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N15Sneg+iL0N17Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N32Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N50Sneg+iL0N51Spos+iL0N53Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N63Spos,1],
rxn[x46Sneg,iL0N2Spos+iL0N3Spos+iL0N7Spos+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N15Spos+iL0N17Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N32Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N50Spos+iL0N51Sneg+iL0N53Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N63Sneg,1],
rxn[x47Spos,iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N29Spos+iL0N34Spos+iL0N37Sneg+iL0N38Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N48Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N62Sneg,1],
rxn[x47Sneg,iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N29Sneg+iL0N34Sneg+iL0N37Spos+iL0N38Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N48Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N62Spos,1],
rxn[x48Spos,iL0N1Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N20Sneg+iL0N22Spos+iL0N23Sneg+iL0N24Spos+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N62Spos,1],
rxn[x48Sneg,iL0N1Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N20Spos+iL0N22Sneg+iL0N23Spos+iL0N24Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N62Sneg,1],
rxn[x49Spos,iL0N0Sneg+iL0N1Sneg+iL0N3Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Spos+iL0N34Sneg+iL0N35Sneg+iL0N37Sneg+iL0N38Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N44Sneg+iL0N45Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N61Spos,1],
rxn[x49Sneg,iL0N0Spos+iL0N1Spos+iL0N3Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N32Sneg+iL0N34Spos+iL0N35Spos+iL0N37Spos+iL0N38Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N44Spos+iL0N45Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N61Sneg,1],
rxn[x50Spos,iL0N1Sneg+iL0N4Sneg+iL0N5Spos+iL0N7Spos+iL0N9Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N24Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N32Spos+iL0N34Spos+iL0N35Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N46Sneg+iL0N48Sneg+iL0N50Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N58Sneg+iL0N59Sneg,1],
rxn[x50Sneg,iL0N1Spos+iL0N4Spos+iL0N5Sneg+iL0N7Sneg+iL0N9Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N24Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N32Sneg+iL0N34Sneg+iL0N35Spos+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N46Spos+iL0N48Spos+iL0N50Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N58Spos+iL0N59Spos,1],
rxn[x51Spos,iL0N0Sneg+iL0N2Spos+iL0N5Sneg+iL0N8Spos+iL0N9Sneg+iL0N14Sneg+iL0N15Sneg+iL0N17Spos+iL0N19Sneg+iL0N23Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N32Sneg+iL0N34Spos+iL0N35Sneg+iL0N37Spos+iL0N38Sneg+iL0N40Sneg+iL0N42Spos+iL0N43Sneg+iL0N47Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N57Spos+iL0N60Sneg+iL0N63Sneg,1],
rxn[x51Sneg,iL0N0Spos+iL0N2Sneg+iL0N5Spos+iL0N8Sneg+iL0N9Spos+iL0N14Spos+iL0N15Spos+iL0N17Sneg+iL0N19Spos+iL0N23Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N32Spos+iL0N34Sneg+iL0N35Spos+iL0N37Sneg+iL0N38Spos+iL0N40Spos+iL0N42Sneg+iL0N43Spos+iL0N47Spos+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N57Sneg+iL0N60Spos+iL0N63Spos,1],
rxn[x52Spos,iL0N0Sneg+iL0N1Spos+iL0N3Spos+iL0N4Spos+iL0N6Sneg+iL0N11Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N30Spos+iL0N33Sneg+iL0N34Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N47Sneg+iL0N48Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N63Spos,1],
rxn[x52Sneg,iL0N0Spos+iL0N1Sneg+iL0N3Sneg+iL0N4Sneg+iL0N6Spos+iL0N11Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N30Sneg+iL0N33Spos+iL0N34Spos+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N47Spos+iL0N48Spos+iL0N51Spos+iL0N52Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N63Sneg,1],
rxn[x53Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N6Sneg+iL0N7Sneg+iL0N9Sneg+iL0N11Sneg+iL0N13Spos+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N48Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x53Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N6Spos+iL0N7Spos+iL0N9Spos+iL0N11Spos+iL0N13Sneg+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N48Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x54Spos,iL0N0Sneg+iL0N1Sneg+iL0N3Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N25Sneg+iL0N26Spos+iL0N28Sneg+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x54Sneg,iL0N0Spos+iL0N1Spos+iL0N3Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N25Spos+iL0N26Sneg+iL0N28Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x55Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N4Sneg+iL0N5Spos+iL0N7Spos+iL0N8Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos,1],
rxn[x55Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N4Spos+iL0N5Sneg+iL0N7Sneg+iL0N8Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg,1],
rxn[x56Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos,1],
rxn[x56Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg,1],
rxn[x57Spos,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N15Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Sneg+iL0N25Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x57Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N15Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x58Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N22Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N34Sneg+iL0N35Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N43Spos+iL0N45Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N54Spos+iL0N55Sneg+iL0N57Sneg+iL0N59Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x58Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N22Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N34Spos+iL0N35Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N43Sneg+iL0N45Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N54Sneg+iL0N55Spos+iL0N57Spos+iL0N59Spos+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x59Spos,iL0N0Sneg+iL0N1Sneg+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N17Spos+iL0N18Spos+iL0N20Sneg+iL0N22Sneg+iL0N23Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N40Sneg+iL0N41Spos+iL0N43Spos+iL0N47Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x59Sneg,iL0N0Spos+iL0N1Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N17Sneg+iL0N18Sneg+iL0N20Spos+iL0N22Spos+iL0N23Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N40Spos+iL0N41Sneg+iL0N43Sneg+iL0N47Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x60Spos,iL0N0Sneg+iL0N1Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N12Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N23Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N32Spos+iL0N33Spos+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N41Sneg+iL0N42Sneg+iL0N44Sneg+iL0N47Sneg+iL0N48Sneg+iL0N53Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N60Spos+iL0N61Spos,1],
rxn[x60Sneg,iL0N0Spos+iL0N1Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N12Sneg+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N23Spos+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N32Sneg+iL0N33Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N41Spos+iL0N42Spos+iL0N44Spos+iL0N47Spos+iL0N48Spos+iL0N53Spos+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N60Sneg+iL0N61Sneg,1],
rxn[x61Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N8Spos+iL0N9Spos+iL0N11Sneg+iL0N13Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N20Sneg+iL0N23Sneg+iL0N24Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N48Spos+iL0N50Spos+iL0N51Spos+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x61Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N8Sneg+iL0N9Sneg+iL0N11Spos+iL0N13Spos+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N20Spos+iL0N23Spos+iL0N24Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N48Sneg+iL0N50Sneg+iL0N51Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x62Spos,iL0N0Spos+iL0N2Spos+iL0N4Spos+iL0N8Sneg+iL0N12Spos+iL0N13Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N20Sneg+iL0N24Sneg+iL0N29Spos+iL0N30Spos+iL0N31Sneg+iL0N35Spos+iL0N36Sneg+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg,1],
rxn[x62Sneg,iL0N0Sneg+iL0N2Sneg+iL0N4Sneg+iL0N8Spos+iL0N12Sneg+iL0N13Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N20Spos+iL0N24Spos+iL0N29Sneg+iL0N30Sneg+iL0N31Spos+iL0N35Sneg+iL0N36Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos,1],
rxn[x63Spos,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N5Sneg+iL0N8Sneg+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N16Spos+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N25Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N34Spos+iL0N36Sneg+iL0N37Spos+iL0N39Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N60Sneg+iL0N63Spos,1],
rxn[x63Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N5Spos+iL0N8Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N16Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N25Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N34Sneg+iL0N36Spos+iL0N37Sneg+iL0N39Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N60Spos+iL0N63Sneg,1],
rxn[x64Spos,iL0N0Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N8Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N29Sneg+iL0N30Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x64Sneg,iL0N0Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N8Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N29Spos+iL0N30Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x65Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N8Sneg+iL0N12Spos+iL0N14Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N40Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N57Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos,1],
rxn[x65Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N8Spos+iL0N12Sneg+iL0N14Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N40Sneg+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N57Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg,1],
rxn[x66Spos,iL0N0Sneg+iL0N1Spos+iL0N3Sneg+iL0N5Spos+iL0N8Sneg+iL0N9Sneg+iL0N13Sneg+iL0N16Sneg+iL0N17Spos+iL0N19Sneg+iL0N20Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N29Sneg+iL0N33Sneg+iL0N35Spos+iL0N37Spos+iL0N39Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N47Spos+iL0N50Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x66Sneg,iL0N0Spos+iL0N1Sneg+iL0N3Spos+iL0N5Sneg+iL0N8Spos+iL0N9Spos+iL0N13Spos+iL0N16Spos+iL0N17Sneg+iL0N19Spos+iL0N20Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N29Spos+iL0N33Spos+iL0N35Sneg+iL0N37Sneg+iL0N39Sneg+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N47Sneg+iL0N50Spos+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x67Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N13Sneg+iL0N14Sneg+iL0N16Spos+iL0N18Sneg+iL0N19Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N29Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N42Sneg+iL0N43Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x67Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N13Spos+iL0N14Spos+iL0N16Sneg+iL0N18Spos+iL0N19Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N29Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N42Spos+iL0N43Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x68Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N20Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N28Sneg+iL0N29Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N41Sneg+iL0N42Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x68Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N20Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N28Spos+iL0N29Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N41Spos+iL0N42Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x69Spos,iL0N0Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N55Spos+iL0N56Spos+iL0N58Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x69Sneg,iL0N0Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N55Sneg+iL0N56Sneg+iL0N58Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x70Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos,1],
rxn[x70Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg,1],
rxn[x71Spos,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N31Spos+iL0N32Sneg+iL0N33Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N50Spos+iL0N51Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x71Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N31Sneg+iL0N32Spos+iL0N33Spos+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N50Sneg+iL0N51Spos+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x72Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N20Spos+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N55Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x72Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N55Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x73Spos,iL0N0Sneg+iL0N1Sneg+iL0N3Spos+iL0N6Sneg+iL0N9Sneg+iL0N13Sneg+iL0N15Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N40Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N47Sneg+iL0N49Sneg+iL0N51Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Sneg,1],
rxn[x73Sneg,iL0N0Spos+iL0N1Spos+iL0N3Sneg+iL0N6Spos+iL0N9Spos+iL0N13Spos+iL0N15Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N33Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N40Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N47Spos+iL0N49Spos+iL0N51Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Spos,1],
rxn[x74Spos,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N13Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N36Sneg+iL0N37Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N50Spos+iL0N51Sneg+iL0N53Spos+iL0N55Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg,1],
rxn[x74Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N13Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N36Spos+iL0N37Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N50Sneg+iL0N51Spos+iL0N53Sneg+iL0N55Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos,1],
rxn[x75Spos,iL0N1Sneg+iL0N2Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N20Spos+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N27Sneg+iL0N30Spos+iL0N33Sneg+iL0N34Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N53Spos+iL0N54Spos+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N63Sneg,1],
rxn[x75Sneg,iL0N1Spos+iL0N2Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N20Sneg+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N27Spos+iL0N30Sneg+iL0N33Spos+iL0N34Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N53Sneg+iL0N54Sneg+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N63Spos,1],
rxn[x76Spos,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N24Sneg+iL0N26Spos+iL0N28Spos+iL0N29Spos+iL0N31Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N47Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N61Sneg+iL0N63Sneg,1],
rxn[x76Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N24Spos+iL0N26Sneg+iL0N28Sneg+iL0N29Sneg+iL0N31Spos+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N47Sneg+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N61Spos+iL0N63Spos,1],
rxn[x77Spos,iL0N0Sneg+iL0N2Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N63Sneg,1],
rxn[x77Sneg,iL0N0Spos+iL0N2Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N11Spos+iL0N12Spos+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N63Spos,1],
rxn[x78Spos,iL0N2Sneg+iL0N5Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Spos+iL0N23Sneg+iL0N24Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N38Sneg+iL0N39Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Spos+iL0N49Spos+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x78Sneg,iL0N2Spos+iL0N5Sneg+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Sneg+iL0N23Spos+iL0N24Sneg+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N38Spos+iL0N39Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Sneg+iL0N49Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x79Spos,iL0N0Sneg+iL0N1Sneg+iL0N4Spos+iL0N5Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N23Sneg+iL0N24Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N32Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N44Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N50Spos+iL0N51Spos+iL0N53Sneg+iL0N55Sneg+iL0N58Spos+iL0N60Sneg+iL0N62Sneg,1],
rxn[x79Sneg,iL0N0Spos+iL0N1Spos+iL0N4Sneg+iL0N5Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N23Spos+iL0N24Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N32Sneg+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N44Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N50Sneg+iL0N51Sneg+iL0N53Spos+iL0N55Spos+iL0N58Sneg+iL0N60Spos+iL0N62Spos,1],
rxn[x80Spos,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N5Spos+iL0N6Sneg+iL0N8Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N19Sneg+iL0N20Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N30Sneg+iL0N32Spos+iL0N35Sneg+iL0N36Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N50Spos+iL0N52Spos+iL0N54Sneg+iL0N55Sneg+iL0N57Sneg+iL0N58Spos+iL0N62Sneg,1],
rxn[x80Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N5Sneg+iL0N6Spos+iL0N8Spos+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N19Spos+iL0N20Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N30Spos+iL0N32Sneg+iL0N35Spos+iL0N36Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N50Sneg+iL0N52Sneg+iL0N54Spos+iL0N55Spos+iL0N57Spos+iL0N58Sneg+iL0N62Spos,1],
rxn[x81Spos,iL0N0Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N25Sneg+iL0N26Sneg+iL0N28Spos+iL0N30Sneg+iL0N33Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N41Spos+iL0N42Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N60Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x81Sneg,iL0N0Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N25Spos+iL0N26Spos+iL0N28Sneg+iL0N30Spos+iL0N33Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N41Sneg+iL0N42Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N60Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x82Spos,iL0N1Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N34Sneg+iL0N35Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N58Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x82Sneg,iL0N1Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N34Spos+iL0N35Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N58Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x83Spos,iL0N0Sneg+iL0N1Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Spos+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x83Sneg,iL0N0Spos+iL0N1Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N12Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x84Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x84Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x85Spos,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N12Sneg+iL0N13Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x85Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N12Spos+iL0N13Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x86Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N17Sneg+iL0N18Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N54Sneg+iL0N55Sneg+iL0N58Spos+iL0N59Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x86Sneg,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N17Spos+iL0N18Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N54Spos+iL0N55Spos+iL0N58Sneg+iL0N59Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x87Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N10Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N20Spos+iL0N23Spos+iL0N26Sneg+iL0N29Sneg+iL0N35Spos+iL0N36Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Sneg+iL0N45Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Sneg+iL0N51Sneg+iL0N53Spos+iL0N54Spos+iL0N56Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N63Sneg,1],
rxn[x87Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N10Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N20Sneg+iL0N23Sneg+iL0N26Spos+iL0N29Spos+iL0N35Sneg+iL0N36Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Spos+iL0N45Spos+iL0N46Sneg+iL0N48Spos+iL0N49Spos+iL0N51Spos+iL0N53Sneg+iL0N54Sneg+iL0N56Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N63Spos,1],
rxn[x88Spos,iL0N0Sneg+iL0N1Sneg+iL0N3Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N11Sneg+iL0N13Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N26Sneg+iL0N27Spos+iL0N29Sneg+iL0N32Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N40Sneg+iL0N41Sneg+iL0N43Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N51Sneg+iL0N52Spos+iL0N54Spos+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N63Sneg,1],
rxn[x88Sneg,iL0N0Spos+iL0N1Spos+iL0N3Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N11Spos+iL0N13Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N26Spos+iL0N27Sneg+iL0N29Spos+iL0N32Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N40Spos+iL0N41Spos+iL0N43Spos+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N51Spos+iL0N52Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N63Spos,1],
rxn[x89Spos,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N23Spos+iL0N25Spos+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N45Sneg+iL0N47Sneg+iL0N49Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Spos+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x89Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N23Sneg+iL0N25Sneg+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N45Spos+iL0N47Spos+iL0N49Spos+iL0N51Spos+iL0N52Spos+iL0N54Sneg+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x90Spos,iL0N1Sneg+iL0N3Sneg+iL0N4Sneg+iL0N6Sneg+iL0N7Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Spos+iL0N26Spos+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x90Sneg,iL0N1Spos+iL0N3Spos+iL0N4Spos+iL0N6Spos+iL0N7Spos+iL0N9Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N21Spos+iL0N23Spos+iL0N24Sneg+iL0N26Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x91Spos,iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N18Spos+iL0N21Sneg+iL0N23Sneg+iL0N25Spos+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N47Spos+iL0N48Sneg+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x91Sneg,iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N18Sneg+iL0N21Spos+iL0N23Spos+iL0N25Sneg+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N47Sneg+iL0N48Spos+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x92Spos,iL0N1Sneg+iL0N2Sneg+iL0N5Spos+iL0N8Sneg+iL0N11Sneg+iL0N13Spos+iL0N15Sneg+iL0N17Sneg+iL0N18Spos+iL0N20Spos+iL0N21Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N33Sneg+iL0N35Sneg+iL0N39Sneg+iL0N41Sneg+iL0N42Sneg+iL0N45Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x92Sneg,iL0N1Spos+iL0N2Spos+iL0N5Sneg+iL0N8Spos+iL0N11Spos+iL0N13Sneg+iL0N15Spos+iL0N17Spos+iL0N18Sneg+iL0N20Sneg+iL0N21Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N33Spos+iL0N35Spos+iL0N39Spos+iL0N41Spos+iL0N42Spos+iL0N45Spos+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x93Spos,iL0N0Sneg+iL0N1Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N9Spos+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N26Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N39Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N47Sneg+iL0N49Sneg+iL0N53Spos+iL0N56Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg,1],
rxn[x93Sneg,iL0N0Spos+iL0N1Spos+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N26Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N39Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N47Spos+iL0N49Spos+iL0N53Sneg+iL0N56Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos,1],
rxn[x94Spos,iL0N1Sneg+iL0N3Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N12Sneg+iL0N13Sneg+iL0N15Sneg+iL0N16Sneg+iL0N18Sneg+iL0N19Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N29Spos+iL0N30Spos+iL0N33Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N42Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N60Sneg+iL0N62Sneg,1],
rxn[x94Sneg,iL0N1Spos+iL0N3Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N12Spos+iL0N13Spos+iL0N15Spos+iL0N16Spos+iL0N18Spos+iL0N19Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N29Sneg+iL0N30Sneg+iL0N33Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N42Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N60Spos+iL0N62Spos,1],
rxn[x95Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N5Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N23Spos+iL0N24Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N45Sneg+iL0N46Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x95Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N5Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N23Sneg+iL0N24Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N45Spos+iL0N46Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x96Spos,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N10Sneg+iL0N11Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x96Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N10Spos+iL0N11Spos+iL0N13Spos+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x97Spos,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N5Spos+iL0N7Spos+iL0N8Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Spos+iL0N58Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x97Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N5Sneg+iL0N7Sneg+iL0N8Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Spos+iL0N55Spos+iL0N56Sneg+iL0N58Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x98Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos,1],
rxn[x98Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg,1],
rxn[x99Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Sneg+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N31Spos+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x99Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x100Spos,iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N16Spos+iL0N18Sneg+iL0N20Spos+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N33Sneg+iL0N35Sneg+iL0N37Sneg+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N55Spos+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x100Sneg,iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N16Sneg+iL0N18Spos+iL0N20Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N33Spos+iL0N35Spos+iL0N37Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N55Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x101Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N9Sneg+iL0N12Spos+iL0N16Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N36Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N51Spos+iL0N55Sneg+iL0N57Spos+iL0N59Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x101Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N9Spos+iL0N12Sneg+iL0N16Spos+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Sneg+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N36Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N51Sneg+iL0N55Spos+iL0N57Sneg+iL0N59Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x102Spos,iL0N0Sneg+iL0N3Sneg+iL0N5Sneg+iL0N7Spos+iL0N9Spos+iL0N11Spos+iL0N12Sneg+iL0N14Sneg+iL0N17Sneg+iL0N19Spos+iL0N20Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N33Sneg+iL0N34Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N46Sneg+iL0N48Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N55Sneg+iL0N57Spos+iL0N58Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x102Sneg,iL0N0Spos+iL0N3Spos+iL0N5Spos+iL0N7Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Spos+iL0N14Spos+iL0N17Spos+iL0N19Sneg+iL0N20Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N33Spos+iL0N34Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N46Spos+iL0N48Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N55Spos+iL0N57Sneg+iL0N58Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x103Spos,iL0N0Sneg+iL0N2Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N41Sneg+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N51Spos+iL0N52Sneg+iL0N55Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x103Sneg,iL0N0Spos+iL0N2Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N41Spos+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N51Sneg+iL0N52Spos+iL0N55Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x104Spos,iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N21Sneg+iL0N23Sneg+iL0N25Spos+iL0N28Sneg+iL0N29Spos+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N39Spos+iL0N41Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N53Spos+iL0N55Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x104Sneg,iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N14Spos+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N21Spos+iL0N23Spos+iL0N25Sneg+iL0N28Spos+iL0N29Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N39Sneg+iL0N41Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N53Sneg+iL0N55Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x105Spos,iL0N0Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N33Sneg+iL0N34Sneg+iL0N36Sneg+iL0N38Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N46Spos+iL0N47Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N57Spos+iL0N58Sneg+iL0N60Spos+iL0N61Sneg+iL0N63Spos,1],
rxn[x105Sneg,iL0N0Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N33Spos+iL0N34Spos+iL0N36Spos+iL0N38Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N46Sneg+iL0N47Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N57Sneg+iL0N58Spos+iL0N60Sneg+iL0N61Spos+iL0N63Sneg,1],
rxn[x106Spos,iL0N1Sneg+iL0N2Sneg+iL0N4Spos+iL0N5Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N33Sneg+iL0N38Spos+iL0N39Sneg+iL0N43Sneg+iL0N45Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N54Spos+iL0N58Sneg+iL0N59Sneg+iL0N61Sneg+iL0N63Sneg,1],
rxn[x106Sneg,iL0N1Spos+iL0N2Spos+iL0N4Sneg+iL0N5Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N33Spos+iL0N38Sneg+iL0N39Spos+iL0N43Spos+iL0N45Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Sneg+iL0N58Spos+iL0N59Spos+iL0N61Spos+iL0N63Spos,1],
rxn[x107Spos,iL0N1Spos+iL0N4Sneg+iL0N6Sneg+iL0N9Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N27Sneg+iL0N29Sneg+iL0N30Spos+iL0N33Sneg+iL0N35Sneg+iL0N38Spos+iL0N39Sneg+iL0N41Sneg+iL0N43Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Spos+iL0N56Sneg+iL0N58Spos+iL0N61Sneg+iL0N63Sneg,1],
rxn[x107Sneg,iL0N1Sneg+iL0N4Spos+iL0N6Spos+iL0N9Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N27Spos+iL0N29Spos+iL0N30Sneg+iL0N33Spos+iL0N35Spos+iL0N38Sneg+iL0N39Spos+iL0N41Spos+iL0N43Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Sneg+iL0N56Spos+iL0N58Sneg+iL0N61Spos+iL0N63Spos,1],
rxn[x108Spos,iL0N0Spos+iL0N1Sneg+iL0N4Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N43Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x108Sneg,iL0N0Sneg+iL0N1Spos+iL0N4Spos+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N43Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x109Spos,iL0N1Spos+iL0N2Spos+iL0N4Sneg+iL0N6Spos+iL0N7Sneg+iL0N9Sneg+iL0N11Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N18Sneg+iL0N19Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N33Sneg+iL0N35Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N52Spos+iL0N53Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x109Sneg,iL0N1Sneg+iL0N2Sneg+iL0N4Spos+iL0N6Sneg+iL0N7Spos+iL0N9Spos+iL0N11Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N18Spos+iL0N19Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N33Spos+iL0N35Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N52Sneg+iL0N53Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x110Spos,iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N51Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg,1],
rxn[x110Sneg,iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N51Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos,1],
rxn[x111Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N7Spos+iL0N8Sneg+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x111Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N7Sneg+iL0N8Spos+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x112Spos,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x112Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x113Spos,iL0N0Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x113Sneg,iL0N0Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N8Spos+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N43Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x114Spos,iL0N0Spos+iL0N1Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N14Sneg+iL0N18Spos+iL0N20Sneg+iL0N21Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N29Sneg+iL0N31Sneg+iL0N32Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N48Sneg+iL0N50Spos+iL0N51Spos+iL0N54Sneg+iL0N57Spos+iL0N59Sneg+iL0N60Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x114Sneg,iL0N0Sneg+iL0N1Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Spos+iL0N18Sneg+iL0N20Spos+iL0N21Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N29Spos+iL0N31Spos+iL0N32Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N48Spos+iL0N50Sneg+iL0N51Sneg+iL0N54Spos+iL0N57Sneg+iL0N59Spos+iL0N60Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x115Spos,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N5Sneg+iL0N6Spos+iL0N8Sneg+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N20Spos+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N49Sneg+iL0N51Spos+iL0N52Spos+iL0N55Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N63Sneg,1],
rxn[x115Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N5Spos+iL0N6Sneg+iL0N8Spos+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N20Sneg+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N49Spos+iL0N51Sneg+iL0N52Sneg+iL0N55Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N63Spos,1],
rxn[x116Spos,iL0N0Sneg+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N12Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N38Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N54Spos+iL0N55Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N63Spos,1],
rxn[x116Sneg,iL0N0Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N12Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N38Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N54Sneg+iL0N55Spos+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N63Sneg,1],
rxn[x117Spos,iL0N0Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N18Sneg+iL0N19Spos+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N41Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N55Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N62Sneg,1],
rxn[x117Sneg,iL0N0Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N18Spos+iL0N19Sneg+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N41Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N55Spos+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N62Spos,1],
rxn[x118Spos,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Sneg+iL0N15Sneg+iL0N19Spos+iL0N21Sneg+iL0N24Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N41Spos+iL0N43Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N55Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x118Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Spos+iL0N15Spos+iL0N19Sneg+iL0N21Spos+iL0N24Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N41Sneg+iL0N43Spos+iL0N46Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N55Spos+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x119Spos,iL0N0Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N6Spos+iL0N11Sneg+iL0N17Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N24Sneg+iL0N25Spos+iL0N27Spos+iL0N28Sneg+iL0N32Sneg+iL0N33Spos+iL0N35Sneg+iL0N36Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N51Spos+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N62Sneg,1],
rxn[x119Sneg,iL0N0Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N6Sneg+iL0N11Spos+iL0N17Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N24Spos+iL0N25Sneg+iL0N27Sneg+iL0N28Spos+iL0N32Spos+iL0N33Sneg+iL0N35Spos+iL0N36Spos+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N51Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N62Spos,1],
rxn[x120Spos,iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N5Sneg+iL0N6Sneg+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N17Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N24Spos+iL0N25Sneg+iL0N27Spos+iL0N30Spos+iL0N33Sneg+iL0N35Sneg+iL0N37Spos+iL0N39Sneg+iL0N41Spos+iL0N43Spos+iL0N44Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N51Spos+iL0N52Sneg+iL0N54Spos+iL0N56Sneg+iL0N61Sneg+iL0N62Spos,1],
rxn[x120Sneg,iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N5Spos+iL0N6Spos+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N17Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N24Sneg+iL0N25Spos+iL0N27Sneg+iL0N30Sneg+iL0N33Spos+iL0N35Spos+iL0N37Sneg+iL0N39Spos+iL0N41Sneg+iL0N43Sneg+iL0N44Sneg+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N51Sneg+iL0N52Spos+iL0N54Sneg+iL0N56Spos+iL0N61Spos+iL0N62Sneg,1],
rxn[x121Spos,iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N12Sneg+iL0N13Sneg+iL0N15Sneg+iL0N16Sneg+iL0N18Spos+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N34Spos+iL0N36Sneg+iL0N37Spos+iL0N39Sneg+iL0N45Spos+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N53Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x121Sneg,iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N12Spos+iL0N13Spos+iL0N15Spos+iL0N16Spos+iL0N18Sneg+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N34Sneg+iL0N36Spos+iL0N37Sneg+iL0N39Spos+iL0N45Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N53Sneg+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x122Spos,iL0N9Sneg+iL0N12Sneg+iL0N14Spos+iL0N15Sneg+iL0N19Sneg+iL0N23Spos+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N29Sneg+iL0N30Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N38Sneg+iL0N40Spos+iL0N43Spos+iL0N46Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N55Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x122Sneg,iL0N9Spos+iL0N12Spos+iL0N14Sneg+iL0N15Spos+iL0N19Spos+iL0N23Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N29Spos+iL0N30Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N38Spos+iL0N40Sneg+iL0N43Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N55Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x123Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N4Sneg+iL0N6Spos+iL0N9Spos+iL0N12Sneg+iL0N13Spos+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N24Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N32Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N47Sneg+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Sneg,1],
rxn[x123Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N4Spos+iL0N6Sneg+iL0N9Sneg+iL0N12Spos+iL0N13Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N24Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N32Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N47Spos+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Spos,1],
rxn[x124Spos,iL0N0Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N7Sneg+iL0N8Spos+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N14Sneg+iL0N15Spos+iL0N17Sneg+iL0N18Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Spos+iL0N24Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x124Sneg,iL0N0Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N7Spos+iL0N8Sneg+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N14Spos+iL0N15Sneg+iL0N17Spos+iL0N18Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Sneg+iL0N24Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x125Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Sneg,1],
rxn[x125Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N60Spos+iL0N61Sneg+iL0N62Spos,1],
rxn[x126Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x126Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x127Spos,iL0N0Spos+iL0N1Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N8Spos+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x127Sneg,iL0N0Sneg+iL0N1Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N8Sneg+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x128Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N16Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N32Sneg+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg,1],
rxn[x128Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N16Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N32Spos+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos,1],
rxn[x129Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N53Sneg+iL0N55Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x129Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N53Spos+iL0N55Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x130Spos,iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N11Spos+iL0N13Sneg+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Spos+iL0N24Sneg+iL0N25Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N35Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x130Sneg,iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N11Sneg+iL0N13Spos+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N20Spos+iL0N21Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Spos+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N35Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x131Spos,iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N7Spos+iL0N8Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N39Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N60Spos+iL0N61Spos+iL0N63Sneg,1],
rxn[x131Sneg,iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N7Sneg+iL0N8Spos+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N39Spos+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N60Sneg+iL0N61Sneg+iL0N63Spos,1],
rxn[x132Spos,iL0N2Sneg+iL0N3Spos+iL0N5Sneg+iL0N6Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N18Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N37Sneg+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N53Sneg+iL0N54Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x132Sneg,iL0N2Spos+iL0N3Sneg+iL0N5Spos+iL0N6Spos+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N18Spos+iL0N20Spos+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N37Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N53Spos+iL0N54Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x133Spos,iL0N2Spos+iL0N5Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N15Spos+iL0N17Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N33Sneg+iL0N37Spos+iL0N39Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x133Sneg,iL0N2Sneg+iL0N5Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N15Sneg+iL0N17Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N33Spos+iL0N37Sneg+iL0N39Spos+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x134Spos,iL0N3Spos+iL0N4Sneg+iL0N6Spos+iL0N8Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N24Spos+iL0N26Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N35Spos+iL0N37Sneg+iL0N39Spos+iL0N41Sneg+iL0N43Sneg+iL0N45Spos+iL0N46Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N54Sneg+iL0N56Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x134Sneg,iL0N3Sneg+iL0N4Spos+iL0N6Sneg+iL0N8Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N24Sneg+iL0N26Sneg+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N35Sneg+iL0N37Spos+iL0N39Sneg+iL0N41Spos+iL0N43Spos+iL0N45Sneg+iL0N46Sneg+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N54Spos+iL0N56Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x135Spos,iL0N1Sneg+iL0N3Spos+iL0N7Spos+iL0N9Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Spos+iL0N25Sneg+iL0N26Sneg+iL0N28Spos+iL0N30Sneg+iL0N33Spos+iL0N35Spos+iL0N37Sneg+iL0N38Sneg+iL0N42Spos+iL0N44Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N63Spos,1],
rxn[x135Sneg,iL0N1Spos+iL0N3Sneg+iL0N7Sneg+iL0N9Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N20Spos+iL0N21Sneg+iL0N23Sneg+iL0N25Spos+iL0N26Spos+iL0N28Sneg+iL0N30Spos+iL0N33Sneg+iL0N35Sneg+iL0N37Spos+iL0N38Spos+iL0N42Sneg+iL0N44Sneg+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N63Sneg,1],
rxn[x136Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N8Spos+iL0N9Spos+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N20Sneg+iL0N26Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N35Sneg+iL0N36Spos+iL0N38Spos+iL0N40Sneg+iL0N41Sneg+iL0N43Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N49Spos+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N61Sneg+iL0N63Sneg,1],
rxn[x136Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N8Sneg+iL0N9Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N20Spos+iL0N26Sneg+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N35Spos+iL0N36Sneg+iL0N38Sneg+iL0N40Spos+iL0N41Spos+iL0N43Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N49Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N61Spos+iL0N63Spos,1],
rxn[x137Spos,iL0N0Sneg+iL0N1Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N11Sneg+iL0N13Spos+iL0N17Sneg+iL0N18Sneg+iL0N20Sneg+iL0N21Spos+iL0N24Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N40Sneg+iL0N41Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x137Sneg,iL0N0Spos+iL0N1Spos+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N11Spos+iL0N13Sneg+iL0N17Spos+iL0N18Spos+iL0N20Spos+iL0N21Sneg+iL0N24Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N40Spos+iL0N41Spos+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x138Spos,iL0N0Sneg+iL0N1Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N23Spos+iL0N24Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N41Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x138Sneg,iL0N0Spos+iL0N1Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N23Sneg+iL0N24Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N41Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x139Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N22Spos+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N63Spos,1],
rxn[x139Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N22Sneg+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N63Sneg,1],
rxn[x140Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x140Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x141Spos,iL0N1Spos+iL0N2Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N13Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Sneg+iL0N24Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N33Spos+iL0N35Sneg+iL0N36Spos+iL0N39Sneg+iL0N41Spos+iL0N42Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x141Sneg,iL0N1Sneg+iL0N2Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N13Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N33Sneg+iL0N35Spos+iL0N36Sneg+iL0N39Spos+iL0N41Sneg+iL0N42Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x142Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Spos+iL0N24Sneg+iL0N25Sneg+iL0N27Spos+iL0N29Sneg+iL0N30Sneg+iL0N33Sneg+iL0N34Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x142Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N15Spos+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Sneg+iL0N24Spos+iL0N25Spos+iL0N27Sneg+iL0N29Spos+iL0N30Spos+iL0N33Spos+iL0N34Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x143Spos,iL0N0Sneg+iL0N1Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N11Sneg+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N20Sneg+iL0N23Sneg+iL0N24Sneg+iL0N27Sneg+iL0N30Sneg+iL0N33Sneg+iL0N34Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N50Sneg+iL0N51Spos+iL0N53Sneg+iL0N54Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x143Sneg,iL0N0Spos+iL0N1Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N11Spos+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N20Spos+iL0N23Spos+iL0N24Spos+iL0N27Spos+iL0N30Spos+iL0N33Spos+iL0N34Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N50Spos+iL0N51Sneg+iL0N53Spos+iL0N54Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x144Spos,iL0N0Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N7Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N17Sneg+iL0N18Spos+iL0N20Sneg+iL0N24Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N51Spos+iL0N53Sneg+iL0N54Sneg+iL0N56Sneg+iL0N59Spos+iL0N60Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x144Sneg,iL0N0Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N7Spos+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N17Spos+iL0N18Sneg+iL0N20Spos+iL0N24Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N51Sneg+iL0N53Spos+iL0N54Spos+iL0N56Spos+iL0N59Sneg+iL0N60Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x145Spos,iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N23Spos+iL0N25Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N36Sneg+iL0N39Sneg+iL0N41Spos+iL0N42Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N57Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x145Sneg,iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N23Sneg+iL0N25Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N36Spos+iL0N39Spos+iL0N41Sneg+iL0N42Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N57Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x146Spos,iL0N0Spos+iL0N1Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N7Sneg+iL0N9Sneg+iL0N11Spos+iL0N13Sneg+iL0N14Spos+iL0N16Sneg+iL0N17Sneg+iL0N19Spos+iL0N20Sneg+iL0N22Sneg+iL0N23Sneg+iL0N25Spos+iL0N27Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N41Sneg+iL0N43Sneg+iL0N45Sneg+iL0N47Spos+iL0N51Sneg+iL0N52Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N63Sneg,1],
rxn[x146Sneg,iL0N0Sneg+iL0N1Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N7Spos+iL0N9Spos+iL0N11Sneg+iL0N13Spos+iL0N14Sneg+iL0N16Spos+iL0N17Spos+iL0N19Sneg+iL0N20Spos+iL0N22Spos+iL0N23Spos+iL0N25Sneg+iL0N27Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N41Spos+iL0N43Spos+iL0N45Spos+iL0N47Sneg+iL0N51Spos+iL0N52Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N63Spos,1],
rxn[x147Spos,iL0N0Sneg+iL0N2Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N25Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N38Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N56Sneg+iL0N58Sneg+iL0N59Sneg+iL0N63Sneg,1],
rxn[x147Sneg,iL0N0Spos+iL0N2Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N25Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N38Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N56Spos+iL0N58Spos+iL0N59Spos+iL0N63Spos,1],
rxn[x148Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N6Sneg+iL0N11Sneg+iL0N12Sneg+iL0N15Spos+iL0N16Sneg+iL0N29Sneg+iL0N30Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N63Spos,1],
rxn[x148Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N6Spos+iL0N11Spos+iL0N12Spos+iL0N15Sneg+iL0N16Spos+iL0N29Spos+iL0N30Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N63Sneg,1],
rxn[x149Spos,iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Spos+iL0N15Spos+iL0N17Sneg+iL0N19Sneg+iL0N21Sneg+iL0N22Sneg+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N32Sneg+iL0N34Sneg+iL0N37Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N54Sneg+iL0N57Sneg+iL0N60Sneg+iL0N63Spos,1],
rxn[x149Sneg,iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N11Spos+iL0N12Spos+iL0N14Sneg+iL0N15Sneg+iL0N17Spos+iL0N19Spos+iL0N21Spos+iL0N22Spos+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N32Spos+iL0N34Spos+iL0N37Spos+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N54Spos+iL0N57Spos+iL0N60Spos+iL0N63Sneg,1],
rxn[x150Spos,iL0N1Spos+iL0N2Sneg+iL0N4Sneg+iL0N5Sneg+iL0N7Sneg+iL0N9Sneg+iL0N10Sneg+iL0N12Sneg+iL0N16Sneg+iL0N17Sneg+iL0N21Sneg+iL0N24Sneg+iL0N25Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N44Spos+iL0N46Sneg+iL0N48Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N62Sneg,1],
rxn[x150Sneg,iL0N1Sneg+iL0N2Spos+iL0N4Spos+iL0N5Spos+iL0N7Spos+iL0N9Spos+iL0N10Spos+iL0N12Spos+iL0N16Spos+iL0N17Spos+iL0N21Spos+iL0N24Spos+iL0N25Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N44Sneg+iL0N46Spos+iL0N48Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N62Spos,1],
rxn[x151Spos,iL0N0Sneg+iL0N2Sneg+iL0N3Spos+iL0N5Sneg+iL0N7Spos+iL0N8Spos+iL0N11Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N55Spos+iL0N56Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x151Sneg,iL0N0Spos+iL0N2Spos+iL0N3Sneg+iL0N5Spos+iL0N7Sneg+iL0N8Sneg+iL0N11Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N55Sneg+iL0N56Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x152Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N31Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x152Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N31Spos+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x153Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Spos+iL0N11Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N60Spos+iL0N61Spos+iL0N63Spos,1],
rxn[x153Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Sneg+iL0N11Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N60Sneg+iL0N61Sneg+iL0N63Sneg,1],
rxn[x154Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x154Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x155Spos,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N9Spos+iL0N10Spos+iL0N12Sneg+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Sneg+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x155Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N9Sneg+iL0N10Sneg+iL0N12Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x156Spos,iL0N2Sneg+iL0N3Spos+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N63Spos,1],
rxn[x156Sneg,iL0N2Spos+iL0N3Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N22Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N63Sneg,1],
rxn[x157Spos,iL0N1Sneg+iL0N2Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N18Spos+iL0N20Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N38Spos+iL0N39Sneg+iL0N41Spos+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N63Spos,1],
rxn[x157Sneg,iL0N1Spos+iL0N2Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Sneg+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N18Sneg+iL0N20Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N38Sneg+iL0N39Spos+iL0N41Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N63Sneg,1],
rxn[x158Spos,iL0N2Spos+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N9Spos+iL0N11Spos+iL0N13Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N23Sneg+iL0N25Spos+iL0N28Sneg+iL0N29Spos+iL0N33Spos+iL0N35Spos+iL0N36Spos+iL0N38Sneg+iL0N39Spos+iL0N41Spos+iL0N44Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N51Sneg+iL0N53Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N60Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x158Sneg,iL0N2Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N9Sneg+iL0N11Sneg+iL0N13Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N23Spos+iL0N25Sneg+iL0N28Spos+iL0N29Sneg+iL0N33Sneg+iL0N35Sneg+iL0N36Sneg+iL0N38Spos+iL0N39Sneg+iL0N41Sneg+iL0N44Spos+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N51Spos+iL0N53Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N60Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x159Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N6Sneg+iL0N7Sneg+iL0N15Sneg+iL0N16Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N27Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N33Spos+iL0N35Spos+iL0N36Spos+iL0N39Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N52Sneg+iL0N53Sneg+iL0N59Spos+iL0N63Spos,1],
rxn[x159Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N6Spos+iL0N7Spos+iL0N15Spos+iL0N16Spos+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N27Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N33Sneg+iL0N35Sneg+iL0N36Sneg+iL0N39Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N52Spos+iL0N53Spos+iL0N59Sneg+iL0N63Sneg,1],
rxn[x160Spos,iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N5Spos+iL0N6Sneg+iL0N9Sneg+iL0N13Sneg+iL0N15Spos+iL0N16Sneg+iL0N19Spos+iL0N21Spos+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N29Spos+iL0N33Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N61Spos+iL0N62Sneg,1],
rxn[x160Sneg,iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N5Sneg+iL0N6Spos+iL0N9Spos+iL0N13Spos+iL0N15Sneg+iL0N16Spos+iL0N19Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N29Sneg+iL0N33Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N46Sneg+iL0N48Spos+iL0N49Spos+iL0N51Spos+iL0N52Spos+iL0N54Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N61Sneg+iL0N62Spos,1],
rxn[x161Spos,iL0N0Spos+iL0N2Spos+iL0N3Sneg+iL0N6Sneg+iL0N9Sneg+iL0N12Sneg+iL0N13Spos+iL0N16Sneg+iL0N17Sneg+iL0N19Spos+iL0N20Sneg+iL0N23Sneg+iL0N25Sneg+iL0N27Spos+iL0N32Sneg+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N43Sneg+iL0N45Sneg+iL0N46Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N57Sneg+iL0N59Sneg+iL0N61Spos+iL0N62Sneg,1],
rxn[x161Sneg,iL0N0Sneg+iL0N2Sneg+iL0N3Spos+iL0N6Spos+iL0N9Spos+iL0N12Spos+iL0N13Sneg+iL0N16Spos+iL0N17Spos+iL0N19Sneg+iL0N20Spos+iL0N23Spos+iL0N25Spos+iL0N27Sneg+iL0N32Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N43Spos+iL0N45Spos+iL0N46Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N57Spos+iL0N59Spos+iL0N61Sneg+iL0N62Spos,1],
rxn[x162Spos,iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N6Sneg+iL0N7Sneg+iL0N9Sneg+iL0N10Sneg+iL0N12Sneg+iL0N16Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N31Sneg+iL0N33Sneg+iL0N37Sneg+iL0N40Sneg+iL0N44Sneg+iL0N48Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Sneg,1],
rxn[x162Sneg,iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N6Spos+iL0N7Spos+iL0N9Spos+iL0N10Spos+iL0N12Spos+iL0N16Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N31Spos+iL0N33Spos+iL0N37Spos+iL0N40Spos+iL0N44Spos+iL0N48Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Spos,1],
rxn[x163Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Spos+iL0N37Sneg+iL0N38Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Sneg,1],
rxn[x163Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Sneg+iL0N37Spos+iL0N38Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Spos,1],
rxn[x164Spos,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Sneg+iL0N15Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N29Sneg+iL0N30Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N37Sneg+iL0N39Sneg+iL0N40Sneg+iL0N45Sneg+iL0N46Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x164Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N14Spos+iL0N15Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N29Spos+iL0N30Sneg+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N37Spos+iL0N39Spos+iL0N40Spos+iL0N45Spos+iL0N46Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x165Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N13Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N22Sneg+iL0N23Sneg+iL0N25Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N44Sneg+iL0N45Sneg+iL0N47Sneg+iL0N48Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x165Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N13Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N22Spos+iL0N23Spos+iL0N25Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N44Spos+iL0N45Spos+iL0N47Spos+iL0N48Spos+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x166Spos,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Spos+iL0N10Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N45Sneg+iL0N46Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg,1],
rxn[x166Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Sneg+iL0N10Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Spos+iL0N21Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N45Spos+iL0N46Spos+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos,1],
rxn[x167Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x167Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x168Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N6Spos+iL0N7Sneg+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N34Spos+iL0N35Sneg+iL0N37Spos+iL0N39Spos+iL0N41Sneg+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N51Spos+iL0N52Spos+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N63Spos,1],
rxn[x168Sneg,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N6Sneg+iL0N7Spos+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N34Sneg+iL0N35Spos+iL0N37Sneg+iL0N39Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N51Sneg+iL0N52Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N63Sneg,1],
rxn[x169Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x169Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x170Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N48Sneg+iL0N49Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Spos,1],
rxn[x170Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N48Spos+iL0N49Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Sneg,1],
rxn[x171Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Spos+iL0N21Spos+iL0N24Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N30Sneg+iL0N31Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x171Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N17Spos+iL0N18Sneg+iL0N19Sneg+iL0N21Sneg+iL0N24Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N30Spos+iL0N31Spos+iL0N34Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x172Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N17Sneg+iL0N19Spos+iL0N21Spos+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N28Spos+iL0N30Sneg+iL0N33Sneg+iL0N34Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x172Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N17Spos+iL0N19Sneg+iL0N21Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N28Sneg+iL0N30Spos+iL0N33Spos+iL0N34Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x173Spos,iL0N1Sneg+iL0N3Sneg+iL0N5Sneg+iL0N6Sneg+iL0N9Sneg+iL0N11Sneg+iL0N13Sneg+iL0N17Sneg+iL0N19Sneg+iL0N20Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Sneg+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N34Sneg+iL0N36Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N51Sneg+iL0N53Sneg+iL0N54Sneg+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x173Sneg,iL0N1Spos+iL0N3Spos+iL0N5Spos+iL0N6Spos+iL0N9Spos+iL0N11Spos+iL0N13Spos+iL0N17Spos+iL0N19Spos+iL0N20Spos+iL0N22Spos+iL0N23Spos+iL0N24Sneg+iL0N25Spos+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N34Spos+iL0N36Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N51Spos+iL0N53Spos+iL0N54Spos+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x174Spos,iL0N0Spos+iL0N2Sneg+iL0N3Sneg+iL0N5Sneg+iL0N8Spos+iL0N10Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N20Sneg+iL0N21Spos+iL0N22Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N29Spos+iL0N30Sneg+iL0N35Spos+iL0N37Sneg+iL0N38Sneg+iL0N41Sneg+iL0N42Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N55Sneg+iL0N56Sneg+iL0N58Spos+iL0N59Sneg+iL0N63Spos,1],
rxn[x174Sneg,iL0N0Sneg+iL0N2Spos+iL0N3Spos+iL0N5Spos+iL0N8Sneg+iL0N10Spos+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N20Spos+iL0N21Sneg+iL0N22Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N29Sneg+iL0N30Spos+iL0N35Sneg+iL0N37Spos+iL0N38Spos+iL0N41Spos+iL0N42Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N55Spos+iL0N56Spos+iL0N58Sneg+iL0N59Spos+iL0N63Sneg,1],
rxn[x175Spos,iL0N0Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N6Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N17Spos+iL0N19Sneg+iL0N20Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N33Spos+iL0N34Sneg+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N40Sneg+iL0N41Sneg+iL0N43Spos+iL0N44Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg,1],
rxn[x175Sneg,iL0N0Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N6Spos+iL0N9Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N17Sneg+iL0N19Spos+iL0N20Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N33Sneg+iL0N34Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N40Spos+iL0N41Spos+iL0N43Sneg+iL0N44Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N51Spos+iL0N52Spos+iL0N54Spos+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos,1],
rxn[x176Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N9Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N29Spos+iL0N33Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N43Sneg+iL0N47Sneg+iL0N48Sneg+iL0N50Spos+iL0N51Sneg+iL0N52Sneg+iL0N58Spos+iL0N59Sneg+iL0N61Spos+iL0N62Sneg,1],
rxn[x176Sneg,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N9Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N29Sneg+iL0N33Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N43Spos+iL0N47Spos+iL0N48Spos+iL0N50Sneg+iL0N51Spos+iL0N52Spos+iL0N58Sneg+iL0N59Spos+iL0N61Sneg+iL0N62Spos,1],
rxn[x177Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Spos+iL0N29Sneg+iL0N30Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N37Spos+iL0N38Spos+iL0N40Sneg+iL0N43Sneg+iL0N44Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N61Spos+iL0N62Sneg,1],
rxn[x177Sneg,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Sneg+iL0N29Spos+iL0N30Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N37Sneg+iL0N38Sneg+iL0N40Spos+iL0N43Spos+iL0N44Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N54Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N61Sneg+iL0N62Spos,1],
rxn[x178Spos,iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Sneg+iL0N24Spos+iL0N26Spos+iL0N28Sneg+iL0N29Sneg+iL0N31Spos+iL0N32Sneg+iL0N33Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N40Sneg+iL0N42Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Sneg,1],
rxn[x178Sneg,iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Spos+iL0N24Sneg+iL0N26Sneg+iL0N28Spos+iL0N29Spos+iL0N31Sneg+iL0N32Spos+iL0N33Spos+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N40Spos+iL0N42Sneg+iL0N43Spos+iL0N44Spos+iL0N45Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Sneg+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Spos,1],
rxn[x179Spos,iL0N0Spos+iL0N1Spos+iL0N4Sneg+iL0N5Sneg+iL0N7Spos+iL0N9Spos+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N23Sneg+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x179Sneg,iL0N0Sneg+iL0N1Sneg+iL0N4Spos+iL0N5Spos+iL0N7Sneg+iL0N9Sneg+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N23Spos+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N52Sneg+iL0N53Spos+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
rxn[x180Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Sneg+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N49Spos+iL0N50Sneg+iL0N51Sneg+iL0N53Sneg+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos,1],
rxn[x180Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Spos+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N49Sneg+iL0N50Spos+iL0N51Spos+iL0N53Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg,1],
rxn[x181Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos,1],
rxn[x181Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg,1],
rxn[x182Spos,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N19Spos+iL0N20Spos+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N32Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N42Sneg+iL0N43Sneg+iL0N45Spos+iL0N46Sneg+iL0N49Sneg+iL0N52Spos+iL0N53Sneg+iL0N55Sneg+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N63Spos,1],
rxn[x182Sneg,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N19Sneg+iL0N20Sneg+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N32Spos+iL0N35Spos+iL0N36Sneg+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N42Spos+iL0N43Spos+iL0N45Sneg+iL0N46Spos+iL0N49Spos+iL0N52Sneg+iL0N53Spos+iL0N55Spos+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N63Sneg,1],
rxn[x183Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x183Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x184Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N47Spos+iL0N49Spos+iL0N50Spos+iL0N51Sneg+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Sneg+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x184Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N47Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Spos+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Spos+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x185Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N5Spos+iL0N6Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Sneg+iL0N63Sneg,1],
rxn[x185Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N5Sneg+iL0N6Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Spos+iL0N63Spos,1],
rxn[x186Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x186Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x187Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Sneg+iL0N6Spos+iL0N7Sneg+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N42Spos+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N63Spos,1],
rxn[x187Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Spos+iL0N6Sneg+iL0N7Spos+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N42Sneg+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N63Sneg,1],
rxn[x188Spos,iL0N0Sneg+iL0N1Spos+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Sneg+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N29Sneg+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N50Spos+iL0N51Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N63Spos,1],
rxn[x188Sneg,iL0N0Spos+iL0N1Sneg+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Spos+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N29Spos+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N50Sneg+iL0N51Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N63Sneg,1],
rxn[x189Spos,iL0N0Spos+iL0N2Sneg+iL0N4Sneg+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Spos+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N37Sneg+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N50Spos+iL0N51Spos+iL0N52Sneg+iL0N53Spos+iL0N54Sneg+iL0N55Sneg+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Sneg+iL0N62Spos,1],
rxn[x189Sneg,iL0N0Sneg+iL0N2Spos+iL0N4Spos+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N37Spos+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N50Sneg+iL0N51Sneg+iL0N52Spos+iL0N53Sneg+iL0N54Spos+iL0N55Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Spos+iL0N62Sneg,1],
rxn[x190Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Sneg+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Spos+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Spos+iL0N41Sneg+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N56Spos+iL0N57Spos+iL0N59Spos+iL0N60Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x190Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Spos+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Sneg+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Sneg+iL0N41Spos+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N56Sneg+iL0N57Sneg+iL0N59Sneg+iL0N60Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x191Spos,iL0N0Spos+iL0N1Spos+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Spos+iL0N15Sneg+iL0N16Spos+iL0N17Sneg+iL0N18Sneg+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N32Spos+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Spos+iL0N37Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x191Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Sneg+iL0N15Spos+iL0N16Sneg+iL0N17Spos+iL0N18Spos+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N32Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Sneg+iL0N37Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x192Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N10Spos+iL0N11Sneg+iL0N13Spos+iL0N14Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Sneg+iL0N32Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Sneg+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N52Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x192Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N10Sneg+iL0N11Spos+iL0N13Sneg+iL0N14Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Spos+iL0N32Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Spos+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N52Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x193Spos,iL0N0Spos+iL0N1Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Sneg+iL0N9Spos+iL0N11Sneg+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Sneg+iL0N21Sneg+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Sneg+iL0N26Spos+iL0N27Sneg+iL0N28Spos+iL0N29Spos+iL0N30Sneg+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Sneg+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Sneg+iL0N51Spos+iL0N53Spos+iL0N54Sneg+iL0N55Spos+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x193Sneg,iL0N0Sneg+iL0N1Spos+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Spos+iL0N9Sneg+iL0N11Spos+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Spos+iL0N21Spos+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Spos+iL0N26Sneg+iL0N27Spos+iL0N28Sneg+iL0N29Sneg+iL0N30Spos+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Spos+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Spos+iL0N51Sneg+iL0N53Sneg+iL0N54Spos+iL0N55Sneg+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x194Spos,iL0N0Spos+iL0N1Spos+iL0N2Spos+iL0N3Spos+iL0N5Spos+iL0N6Spos+iL0N7Spos+iL0N8Spos+iL0N9Spos+iL0N10Spos+iL0N11Spos+iL0N12Spos+iL0N13Spos+iL0N14Spos+iL0N15Spos+iL0N16Spos+iL0N17Spos+iL0N18Spos+iL0N19Spos+iL0N20Spos+iL0N21Spos+iL0N22Spos+iL0N23Spos+iL0N24Spos+iL0N25Spos+iL0N26Spos+iL0N27Spos+iL0N28Spos+iL0N29Spos+iL0N30Spos+iL0N31Spos+iL0N32Spos+iL0N33Spos+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Spos+iL0N38Spos+iL0N39Spos+iL0N40Spos+iL0N41Spos+iL0N42Spos+iL0N43Spos+iL0N44Spos+iL0N45Spos+iL0N46Spos+iL0N47Spos+iL0N48Spos+iL0N49Spos+iL0N50Spos+iL0N51Spos+iL0N53Spos+iL0N54Spos+iL0N55Spos+iL0N56Spos+iL0N57Spos+iL0N58Spos+iL0N59Spos+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Spos,1],
rxn[x194Sneg,iL0N0Sneg+iL0N1Sneg+iL0N2Sneg+iL0N3Sneg+iL0N5Sneg+iL0N6Sneg+iL0N7Sneg+iL0N8Sneg+iL0N9Sneg+iL0N10Sneg+iL0N11Sneg+iL0N12Sneg+iL0N13Sneg+iL0N14Sneg+iL0N15Sneg+iL0N16Sneg+iL0N17Sneg+iL0N18Sneg+iL0N19Sneg+iL0N20Sneg+iL0N21Sneg+iL0N22Sneg+iL0N23Sneg+iL0N24Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Sneg+iL0N28Sneg+iL0N29Sneg+iL0N30Sneg+iL0N31Sneg+iL0N32Sneg+iL0N33Sneg+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Sneg+iL0N38Sneg+iL0N39Sneg+iL0N40Sneg+iL0N41Sneg+iL0N42Sneg+iL0N43Sneg+iL0N44Sneg+iL0N45Sneg+iL0N46Sneg+iL0N47Sneg+iL0N48Sneg+iL0N49Sneg+iL0N50Sneg+iL0N51Sneg+iL0N53Sneg+iL0N54Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Sneg+iL0N58Sneg+iL0N59Sneg+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Sneg,1],
rxn[x195Spos,iL0N0Spos+iL0N2Spos+iL0N3Sneg+iL0N4Sneg+iL0N5Sneg+iL0N6Spos+iL0N9Sneg+iL0N10Sneg+iL0N12Sneg+iL0N14Spos+iL0N15Sneg+iL0N17Sneg+iL0N19Spos+iL0N22Spos+iL0N23Spos+iL0N25Spos+iL0N26Spos+iL0N27Sneg+iL0N28Sneg+iL0N29Spos+iL0N30Sneg+iL0N33Spos+iL0N34Sneg+iL0N35Sneg+iL0N36Sneg+iL0N37Spos+iL0N40Spos+iL0N41Sneg+iL0N42Sneg+iL0N43Spos+iL0N44Sneg+iL0N45Spos+iL0N46Spos+iL0N47Sneg+iL0N48Spos+iL0N49Sneg+iL0N50Sneg+iL0N52Spos+iL0N53Sneg+iL0N55Sneg+iL0N56Sneg+iL0N57Spos+iL0N58Spos+iL0N59Sneg+iL0N60Spos+iL0N61Spos+iL0N62Spos+iL0N63Sneg,1],
rxn[x195Sneg,iL0N0Sneg+iL0N2Sneg+iL0N3Spos+iL0N4Spos+iL0N5Spos+iL0N6Sneg+iL0N9Spos+iL0N10Spos+iL0N12Spos+iL0N14Sneg+iL0N15Spos+iL0N17Spos+iL0N19Sneg+iL0N22Sneg+iL0N23Sneg+iL0N25Sneg+iL0N26Sneg+iL0N27Spos+iL0N28Spos+iL0N29Sneg+iL0N30Spos+iL0N33Sneg+iL0N34Spos+iL0N35Spos+iL0N36Spos+iL0N37Sneg+iL0N40Sneg+iL0N41Spos+iL0N42Spos+iL0N43Sneg+iL0N44Spos+iL0N45Sneg+iL0N46Sneg+iL0N47Spos+iL0N48Sneg+iL0N49Spos+iL0N50Spos+iL0N52Sneg+iL0N53Spos+iL0N55Spos+iL0N56Spos+iL0N57Sneg+iL0N58Sneg+iL0N59Spos+iL0N60Sneg+iL0N61Sneg+iL0N62Sneg+iL0N63Spos,1],
conc[iL0N0Sneg,5.9783124924],
conc[iL0N1Sneg,5.5047187805],
conc[iL0N2Sneg,6.7216186523],
conc[iL0N3Sneg,5.2869439125],
conc[iL0N4Sneg,5.8008694649],
conc[iL0N5Sneg,5.4424643517],
conc[iL0N6Sneg,6.0766301155],
conc[iL0N7Sneg,5.8484125137],
conc[iL0N8Sneg,6.2900323868],
conc[iL0N9Sneg,5.2693004608],
conc[iL0N10Sneg,3.1325645447],
conc[iL0N11Sneg,5.1818494797],
conc[iL0N12Sneg,5.6558036804],
conc[iL0N13Sneg,7.4941449165],
conc[iL0N14Sneg,5.7613177299],
conc[iL0N15Sneg,6.3271679878],
conc[iL0N16Sneg,5.8807110786],
conc[iL0N17Sneg,6.1764016151],
conc[iL0N18Sneg,5.2994432449],
conc[iL0N19Sneg,6.1215696335],
conc[iL0N20Sneg,5.6560015678],
conc[iL0N21Sneg,5.8128867149],
conc[iL0N22Sneg,3.5776746273],
conc[iL0N23Sneg,5.7123847008],
conc[iL0N24Sneg,5.6187448502],
conc[iL0N25Sneg,5.6780867577],
conc[iL0N26Sneg,6.1072335243],
conc[iL0N27Sneg,5.4695024490],
conc[iL0N28Sneg,5.8705387115],
conc[iL0N29Sneg,5.2541236877],
conc[iL0N30Sneg,6.0491003990],
conc[iL0N31Sneg,3.0733742714],
conc[iL0N32Sneg,5.0270280838],
conc[iL0N33Sneg,6.1177282333],
conc[iL0N34Sneg,5.7820267677],
conc[iL0N35Sneg,5.5985021591],
conc[iL0N36Sneg,5.9618086815],
conc[iL0N37Sneg,5.7508807182],
conc[iL0N38Sneg,5.8842258453],
conc[iL0N39Sneg,5.6336455345],
conc[iL0N40Sneg,5.5340828896],
conc[iL0N41Sneg,5.5820112228],
conc[iL0N42Sneg,5.2536849976],
conc[iL0N43Sneg,6.2698087692],
conc[iL0N44Sneg,6.0466895103],
conc[iL0N45Sneg,5.7405161858],
conc[iL0N46Sneg,4.8348407745],
conc[iL0N47Sneg,6.0645871162],
conc[iL0N48Sneg,6.1150236130],
conc[iL0N49Sneg,6.4871549606],
conc[iL0N50Sneg,5.4826970100],
conc[iL0N51Sneg,5.5964522362],
conc[iL0N52Sneg,6.6797385216],
conc[iL0N53Sneg,5.8620071411],
conc[iL0N54Sneg,5.3410477638],
conc[iL0N55Sneg,6.9445066452],
conc[iL0N56Sneg,6.8088917732],
conc[iL0N57Sneg,6.1989827156],
conc[iL0N58Sneg,6.6616868973],
conc[iL0N59Sneg,5.4737005234],
conc[iL0N60Sneg,5.8595566750],
conc[iL0N61Sneg,6.6761326790],
conc[iL0N62Sneg,5.3083968163],
conc[iL0N63Sneg,5.2966489792],
rxn[iL0N0Spos,mL0N0+hL0N0Spos,1],
rxn[mL0N0+iL0N0Sneg,hL0N0Sneg,1],
rxn[iL0N1Spos,mL0N1+hL0N1Spos,1],
rxn[mL0N1+iL0N1Sneg,hL0N1Sneg,1],
rxn[iL0N2Spos,mL0N2+hL0N2Spos,1],
rxn[mL0N2+iL0N2Sneg,hL0N2Sneg,1],
rxn[iL0N3Spos,mL0N3+hL0N3Spos,1],
rxn[mL0N3+iL0N3Sneg,hL0N3Sneg,1],
rxn[iL0N4Spos,mL0N4+hL0N4Spos,1],
rxn[mL0N4+iL0N4Sneg,hL0N4Sneg,1],
rxn[iL0N5Spos,mL0N5+hL0N5Spos,1],
rxn[mL0N5+iL0N5Sneg,hL0N5Sneg,1],
rxn[iL0N6Spos,mL0N6+hL0N6Spos,1],
rxn[mL0N6+iL0N6Sneg,hL0N6Sneg,1],
rxn[iL0N7Spos,mL0N7+hL0N7Spos,1],
rxn[mL0N7+iL0N7Sneg,hL0N7Sneg,1],
rxn[iL0N8Spos,mL0N8+hL0N8Spos,1],
rxn[mL0N8+iL0N8Sneg,hL0N8Sneg,1],
rxn[iL0N9Spos,mL0N9+hL0N9Spos,1],
rxn[mL0N9+iL0N9Sneg,hL0N9Sneg,1],
rxn[iL0N10Spos,mL0N10+hL0N10Spos,1],
rxn[mL0N10+iL0N10Sneg,hL0N10Sneg,1],
rxn[iL0N11Spos,mL0N11+hL0N11Spos,1],
rxn[mL0N11+iL0N11Sneg,hL0N11Sneg,1],
rxn[iL0N12Spos,mL0N12+hL0N12Spos,1],
rxn[mL0N12+iL0N12Sneg,hL0N12Sneg,1],
rxn[iL0N13Spos,mL0N13+hL0N13Spos,1],
rxn[mL0N13+iL0N13Sneg,hL0N13Sneg,1],
rxn[iL0N14Spos,mL0N14+hL0N14Spos,1],
rxn[mL0N14+iL0N14Sneg,hL0N14Sneg,1],
rxn[iL0N15Spos,mL0N15+hL0N15Spos,1],
rxn[mL0N15+iL0N15Sneg,hL0N15Sneg,1],
rxn[iL0N16Spos,mL0N16+hL0N16Spos,1],
rxn[mL0N16+iL0N16Sneg,hL0N16Sneg,1],
rxn[iL0N17Spos,mL0N17+hL0N17Spos,1],
rxn[mL0N17+iL0N17Sneg,hL0N17Sneg,1],
rxn[iL0N18Spos,mL0N18+hL0N18Spos,1],
rxn[mL0N18+iL0N18Sneg,hL0N18Sneg,1],
rxn[iL0N19Spos,mL0N19+hL0N19Spos,1],
rxn[mL0N19+iL0N19Sneg,hL0N19Sneg,1],
rxn[iL0N20Spos,mL0N20+hL0N20Spos,1],
rxn[mL0N20+iL0N20Sneg,hL0N20Sneg,1],
rxn[iL0N21Spos,mL0N21+hL0N21Spos,1],
rxn[mL0N21+iL0N21Sneg,hL0N21Sneg,1],
rxn[iL0N22Spos,mL0N22+hL0N22Spos,1],
rxn[mL0N22+iL0N22Sneg,hL0N22Sneg,1],
rxn[iL0N23Spos,mL0N23+hL0N23Spos,1],
rxn[mL0N23+iL0N23Sneg,hL0N23Sneg,1],
rxn[iL0N24Spos,mL0N24+hL0N24Spos,1],
rxn[mL0N24+iL0N24Sneg,hL0N24Sneg,1],
rxn[iL0N25Spos,mL0N25+hL0N25Spos,1],
rxn[mL0N25+iL0N25Sneg,hL0N25Sneg,1],
rxn[iL0N26Spos,mL0N26+hL0N26Spos,1],
rxn[mL0N26+iL0N26Sneg,hL0N26Sneg,1],
rxn[iL0N27Spos,mL0N27+hL0N27Spos,1],
rxn[mL0N27+iL0N27Sneg,hL0N27Sneg,1],
rxn[iL0N28Spos,mL0N28+hL0N28Spos,1],
rxn[mL0N28+iL0N28Sneg,hL0N28Sneg,1],
rxn[iL0N29Spos,mL0N29+hL0N29Spos,1],
rxn[mL0N29+iL0N29Sneg,hL0N29Sneg,1],
rxn[iL0N30Spos,mL0N30+hL0N30Spos,1],
rxn[mL0N30+iL0N30Sneg,hL0N30Sneg,1],
rxn[iL0N31Spos,mL0N31+hL0N31Spos,1],
rxn[mL0N31+iL0N31Sneg,hL0N31Sneg,1],
rxn[iL0N32Spos,mL0N32+hL0N32Spos,1],
rxn[mL0N32+iL0N32Sneg,hL0N32Sneg,1],
rxn[iL0N33Spos,mL0N33+hL0N33Spos,1],
rxn[mL0N33+iL0N33Sneg,hL0N33Sneg,1],
rxn[iL0N34Spos,mL0N34+hL0N34Spos,1],
rxn[mL0N34+iL0N34Sneg,hL0N34Sneg,1],
rxn[iL0N35Spos,mL0N35+hL0N35Spos,1],
rxn[mL0N35+iL0N35Sneg,hL0N35Sneg,1],
rxn[iL0N36Spos,mL0N36+hL0N36Spos,1],
rxn[mL0N36+iL0N36Sneg,hL0N36Sneg,1],
rxn[iL0N37Spos,mL0N37+hL0N37Spos,1],
rxn[mL0N37+iL0N37Sneg,hL0N37Sneg,1],
rxn[iL0N38Spos,mL0N38+hL0N38Spos,1],
rxn[mL0N38+iL0N38Sneg,hL0N38Sneg,1],
rxn[iL0N39Spos,mL0N39+hL0N39Spos,1],
rxn[mL0N39+iL0N39Sneg,hL0N39Sneg,1],
rxn[iL0N40Spos,mL0N40+hL0N40Spos,1],
rxn[mL0N40+iL0N40Sneg,hL0N40Sneg,1],
rxn[iL0N41Spos,mL0N41+hL0N41Spos,1],
rxn[mL0N41+iL0N41Sneg,hL0N41Sneg,1],
rxn[iL0N42Spos,mL0N42+hL0N42Spos,1],
rxn[mL0N42+iL0N42Sneg,hL0N42Sneg,1],
rxn[iL0N43Spos,mL0N43+hL0N43Spos,1],
rxn[mL0N43+iL0N43Sneg,hL0N43Sneg,1],
rxn[iL0N44Spos,mL0N44+hL0N44Spos,1],
rxn[mL0N44+iL0N44Sneg,hL0N44Sneg,1],
rxn[iL0N45Spos,mL0N45+hL0N45Spos,1],
rxn[mL0N45+iL0N45Sneg,hL0N45Sneg,1],
rxn[iL0N46Spos,mL0N46+hL0N46Spos,1],
rxn[mL0N46+iL0N46Sneg,hL0N46Sneg,1],
rxn[iL0N47Spos,mL0N47+hL0N47Spos,1],
rxn[mL0N47+iL0N47Sneg,hL0N47Sneg,1],
rxn[iL0N48Spos,mL0N48+hL0N48Spos,1],
rxn[mL0N48+iL0N48Sneg,hL0N48Sneg,1],
rxn[iL0N49Spos,mL0N49+hL0N49Spos,1],
rxn[mL0N49+iL0N49Sneg,hL0N49Sneg,1],
rxn[iL0N50Spos,mL0N50+hL0N50Spos,1],
rxn[mL0N50+iL0N50Sneg,hL0N50Sneg,1],
rxn[iL0N51Spos,mL0N51+hL0N51Spos,1],
rxn[mL0N51+iL0N51Sneg,hL0N51Sneg,1],
rxn[iL0N52Spos,mL0N52+hL0N52Spos,1],
rxn[mL0N52+iL0N52Sneg,hL0N52Sneg,1],
rxn[iL0N53Spos,mL0N53+hL0N53Spos,1],
rxn[mL0N53+iL0N53Sneg,hL0N53Sneg,1],
rxn[iL0N54Spos,mL0N54+hL0N54Spos,1],
rxn[mL0N54+iL0N54Sneg,hL0N54Sneg,1],
rxn[iL0N55Spos,mL0N55+hL0N55Spos,1],
rxn[mL0N55+iL0N55Sneg,hL0N55Sneg,1],
rxn[iL0N56Spos,mL0N56+hL0N56Spos,1],
rxn[mL0N56+iL0N56Sneg,hL0N56Sneg,1],
rxn[iL0N57Spos,mL0N57+hL0N57Spos,1],
rxn[mL0N57+iL0N57Sneg,hL0N57Sneg,1],
rxn[iL0N58Spos,mL0N58+hL0N58Spos,1],
rxn[mL0N58+iL0N58Sneg,hL0N58Sneg,1],
rxn[iL0N59Spos,mL0N59+hL0N59Spos,1],
rxn[mL0N59+iL0N59Sneg,hL0N59Sneg,1],
rxn[iL0N60Spos,mL0N60+hL0N60Spos,1],
rxn[mL0N60+iL0N60Sneg,hL0N60Sneg,1],
rxn[iL0N61Spos,mL0N61+hL0N61Spos,1],
rxn[mL0N61+iL0N61Sneg,hL0N61Sneg,1],
rxn[iL0N62Spos,mL0N62+hL0N62Spos,1],
rxn[mL0N62+iL0N62Sneg,hL0N62Sneg,1],
rxn[iL0N63Spos,mL0N63+hL0N63Spos,1],
rxn[mL0N63+iL0N63Sneg,hL0N63Sneg,1],
rxn[hL0N0Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Spos+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N0Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Sneg+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N1Spos,hL1N1Sneg+hL1N2Spos+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N1Sneg,hL1N1Spos+hL1N2Sneg+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N2Spos,hL1N0Spos+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N2Sneg,hL1N0Sneg+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N3Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Spos+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N3Sneg,hL1N0Spos+hL1N1Spos+hL1N2Sneg+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N4Spos,hL1N0Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Spos+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N4Sneg,hL1N0Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Sneg+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N5Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Spos+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N5Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Sneg+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N6Spos,hL1N1Sneg+hL1N2Spos+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N6Sneg,hL1N1Spos+hL1N2Sneg+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N7Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N7Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N8Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Spos+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N8Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Sneg+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N9Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N9Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N10Spos,hL1N0Sneg+hL1N3Sneg+hL1N6Sneg+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N10Sneg,hL1N0Spos+hL1N3Spos+hL1N6Spos+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N11Spos,hL1N0Spos+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N11Sneg,hL1N0Sneg+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N12Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Spos+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N12Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N5Spos+hL1N6Spos+hL1N7Sneg+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N13Spos,hL1N0Sneg+hL1N1Spos+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N13Sneg,hL1N0Spos+hL1N1Sneg+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N14Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N6Spos+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N14Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N6Sneg+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N15Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Spos+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N15Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Sneg+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N16Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N16Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N7Spos+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N17Spos,hL1N0Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Spos+hL1N8Sneg,1],
rxn[hL0N17Sneg,hL1N0Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Sneg+hL1N8Spos,1],
rxn[hL0N18Spos,hL1N0Sneg+hL1N2Sneg+hL1N3Spos+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N18Sneg,hL1N0Spos+hL1N2Spos+hL1N3Sneg+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N19Spos,hL1N1Sneg+hL1N2Sneg+hL1N5Sneg+hL1N6Spos+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N19Sneg,hL1N1Spos+hL1N2Spos+hL1N5Spos+hL1N6Sneg+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N20Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Spos+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N20Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Sneg+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N21Spos,hL1N0Spos+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N21Sneg,hL1N0Sneg+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N22Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N6Sneg+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N22Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N6Spos+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N23Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N5Sneg+hL1N6Spos+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N23Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N5Spos+hL1N6Sneg+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N24Spos,hL1N0Sneg+hL1N1Sneg+hL1N3Spos+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N24Sneg,hL1N0Spos+hL1N1Spos+hL1N3Sneg+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N25Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Spos+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N25Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Sneg+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N26Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Spos+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N26Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Sneg+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N27Spos,hL1N1Sneg+hL1N3Sneg+hL1N4Spos+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N27Sneg,hL1N1Spos+hL1N3Spos+hL1N4Sneg+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N28Spos,hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Spos+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N28Sneg,hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N5Spos+hL1N6Spos+hL1N7Sneg+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N29Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N29Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N30Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Spos+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N30Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Sneg+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N31Spos,hL1N1Spos+hL1N2Sneg+hL1N5Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N31Sneg,hL1N1Sneg+hL1N2Spos+hL1N5Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N32Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N32Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N33Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Spos+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N33Sneg,hL1N0Spos+hL1N1Spos+hL1N2Sneg+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N34Spos,hL1N0Sneg+hL1N1Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Spos+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N34Sneg,hL1N0Spos+hL1N1Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Sneg+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N35Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Spos+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N35Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Sneg+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N36Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Spos+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N36Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Sneg+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N37Spos,hL1N0Sneg+hL1N1Sneg+hL1N3Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Spos+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N37Sneg,hL1N0Spos+hL1N1Spos+hL1N3Spos+hL1N5Spos+hL1N6Spos+hL1N7Sneg+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N38Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N38Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N39Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Spos+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N39Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Sneg+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N40Spos,hL1N0Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Spos+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N40Sneg,hL1N0Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Sneg+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N41Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Spos+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N41Sneg,hL1N0Spos+hL1N1Spos+hL1N2Sneg+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N42Spos,hL1N1Sneg+hL1N2Sneg+hL1N4Sneg+hL1N5Spos+hL1N6Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N42Sneg,hL1N1Spos+hL1N2Spos+hL1N4Spos+hL1N5Sneg+hL1N6Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N43Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Spos+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N43Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Sneg+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N44Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Spos+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N44Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Sneg+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N45Spos,hL1N0Sneg+hL1N2Sneg+hL1N3Spos+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N45Sneg,hL1N0Spos+hL1N2Spos+hL1N3Sneg+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N46Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N46Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N47Spos,hL1N0Sneg+hL1N1Spos+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N47Sneg,hL1N0Spos+hL1N1Sneg+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N48Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Spos+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N48Sneg,hL1N0Spos+hL1N1Spos+hL1N2Sneg+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N49Spos,hL1N0Sneg+hL1N2Spos+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N49Sneg,hL1N0Spos+hL1N2Sneg+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N50Spos,hL1N0Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N50Sneg,hL1N0Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N51Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Spos+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N51Sneg,hL1N0Spos+hL1N1Spos+hL1N2Sneg+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N52Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Spos+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N52Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Sneg+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N53Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Spos,1],
rxn[hL0N53Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Sneg,1],
rxn[hL0N54Spos,hL1N0Sneg+hL1N1Sneg+hL1N3Sneg+hL1N4Spos+hL1N5Sneg+hL1N6Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N54Sneg,hL1N0Spos+hL1N1Spos+hL1N3Spos+hL1N4Sneg+hL1N5Spos+hL1N6Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N55Spos,hL1N2Sneg+hL1N3Spos+hL1N4Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N55Sneg,hL1N2Spos+hL1N3Sneg+hL1N4Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N56Spos,hL1N0Sneg+hL1N1Spos+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N56Sneg,hL1N0Spos+hL1N1Sneg+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N57Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Spos+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N57Sneg,hL1N0Spos+hL1N1Spos+hL1N2Sneg+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N58Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Sneg+hL1N7Spos+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N58Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Spos+hL1N7Sneg+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N59Spos,hL1N0Sneg+hL1N2Spos+hL1N3Sneg+hL1N4Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N59Sneg,hL1N0Spos+hL1N2Sneg+hL1N3Spos+hL1N4Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N60Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Sneg+hL1N6Spos+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N60Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Spos+hL1N6Sneg+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N61Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Spos+hL1N4Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N61Sneg,hL1N0Spos+hL1N1Spos+hL1N2Sneg+hL1N4Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N62Spos,hL1N0Sneg+hL1N1Sneg+hL1N2Sneg+hL1N3Sneg+hL1N4Sneg+hL1N5Spos+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N62Sneg,hL1N0Spos+hL1N1Spos+hL1N2Spos+hL1N3Spos+hL1N4Spos+hL1N5Sneg+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
rxn[hL0N63Spos,hL1N0Sneg+hL1N1Sneg+hL1N3Spos+hL1N4Sneg+hL1N6Sneg+hL1N7Sneg+hL1N8Sneg+hL1N9Sneg,1],
rxn[hL0N63Sneg,hL1N0Spos+hL1N1Spos+hL1N3Sneg+hL1N4Spos+hL1N6Spos+hL1N7Spos+hL1N8Spos+hL1N9Spos,1],
conc[hL1N0Sneg,0.7784898281],
conc[hL1N1Sneg,0.8327438831],
conc[hL1N2Sneg,0.8320480585],
conc[hL1N3Sneg,0.7043256760],
conc[hL1N4Sneg,0.7233291268],
conc[hL1N5Sneg,0.7309997082],
conc[hL1N6Sneg,0.8313242197],
conc[hL1N7Sneg,0.8250226378],
conc[hL1N8Spos,0.0291514862],
conc[hL1N9Sneg,0.5725241303]
}

MNISTReduced[x0SposInitial_,x0SnegInitial_,x1SposInitial_,x1SnegInitial_,x2SposInitial_,x2SnegInitial_,x3SposInitial_,x3SnegInitial_,x4SposInitial_,x4SnegInitial_,x5SposInitial_,x5SnegInitial_,x6SposInitial_,x6SnegInitial_,x7SposInitial_,x7SnegInitial_,x8SposInitial_,x8SnegInitial_,x9SposInitial_,x9SnegInitial_,x10SposInitial_,x10SnegInitial_,x11SposInitial_,x11SnegInitial_,x12SposInitial_,x12SnegInitial_,x13SposInitial_,x13SnegInitial_,x14SposInitial_,x14SnegInitial_,x15SposInitial_,x15SnegInitial_,x16SposInitial_,x16SnegInitial_,x17SposInitial_,x17SnegInitial_,x18SposInitial_,x18SnegInitial_,x19SposInitial_,x19SnegInitial_,x20SposInitial_,x20SnegInitial_,x21SposInitial_,x21SnegInitial_,x22SposInitial_,x22SnegInitial_,x23SposInitial_,x23SnegInitial_,x24SposInitial_,x24SnegInitial_,x25SposInitial_,x25SnegInitial_,x26SposInitial_,x26SnegInitial_,x27SposInitial_,x27SnegInitial_,x28SposInitial_,x28SnegInitial_,x29SposInitial_,x29SnegInitial_,x30SposInitial_,x30SnegInitial_,x31SposInitial_,x31SnegInitial_,x32SposInitial_,x32SnegInitial_,x33SposInitial_,x33SnegInitial_,x34SposInitial_,x34SnegInitial_,x35SposInitial_,x35SnegInitial_,x36SposInitial_,x36SnegInitial_,x37SposInitial_,x37SnegInitial_,x38SposInitial_,x38SnegInitial_,x39SposInitial_,x39SnegInitial_,x40SposInitial_,x40SnegInitial_,x41SposInitial_,x41SnegInitial_,x42SposInitial_,x42SnegInitial_,x43SposInitial_,x43SnegInitial_,x44SposInitial_,x44SnegInitial_,x45SposInitial_,x45SnegInitial_,x46SposInitial_,x46SnegInitial_,x47SposInitial_,x47SnegInitial_,x48SposInitial_,x48SnegInitial_,x49SposInitial_,x49SnegInitial_,x50SposInitial_,x50SnegInitial_,x51SposInitial_,x51SnegInitial_,x52SposInitial_,x52SnegInitial_,x53SposInitial_,x53SnegInitial_,x54SposInitial_,x54SnegInitial_,x55SposInitial_,x55SnegInitial_,x56SposInitial_,x56SnegInitial_,x57SposInitial_,x57SnegInitial_,x58SposInitial_,x58SnegInitial_,x59SposInitial_,x59SnegInitial_,x60SposInitial_,x60SnegInitial_,x61SposInitial_,x61SnegInitial_,x62SposInitial_,x62SnegInitial_,x63SposInitial_,x63SnegInitial_,x64SposInitial_,x64SnegInitial_,x65SposInitial_,x65SnegInitial_,x66SposInitial_,x66SnegInitial_,x67SposInitial_,x67SnegInitial_,x68SposInitial_,x68SnegInitial_,x69SposInitial_,x69SnegInitial_,x70SposInitial_,x70SnegInitial_,x71SposInitial_,x71SnegInitial_,x72SposInitial_,x72SnegInitial_,x73SposInitial_,x73SnegInitial_,x74SposInitial_,x74SnegInitial_,x75SposInitial_,x75SnegInitial_,x76SposInitial_,x76SnegInitial_,x77SposInitial_,x77SnegInitial_,x78SposInitial_,x78SnegInitial_,x79SposInitial_,x79SnegInitial_,x80SposInitial_,x80SnegInitial_,x81SposInitial_,x81SnegInitial_,x82SposInitial_,x82SnegInitial_,x83SposInitial_,x83SnegInitial_,x84SposInitial_,x84SnegInitial_,x85SposInitial_,x85SnegInitial_,x86SposInitial_,x86SnegInitial_,x87SposInitial_,x87SnegInitial_,x88SposInitial_,x88SnegInitial_,x89SposInitial_,x89SnegInitial_,x90SposInitial_,x90SnegInitial_,x91SposInitial_,x91SnegInitial_,x92SposInitial_,x92SnegInitial_,x93SposInitial_,x93SnegInitial_,x94SposInitial_,x94SnegInitial_,x95SposInitial_,x95SnegInitial_,x96SposInitial_,x96SnegInitial_,x97SposInitial_,x97SnegInitial_,x98SposInitial_,x98SnegInitial_,x99SposInitial_,x99SnegInitial_,x100SposInitial_,x100SnegInitial_,x101SposInitial_,x101SnegInitial_,x102SposInitial_,x102SnegInitial_,x103SposInitial_,x103SnegInitial_,x104SposInitial_,x104SnegInitial_,x105SposInitial_,x105SnegInitial_,x106SposInitial_,x106SnegInitial_,x107SposInitial_,x107SnegInitial_,x108SposInitial_,x108SnegInitial_,x109SposInitial_,x109SnegInitial_,x110SposInitial_,x110SnegInitial_,x111SposInitial_,x111SnegInitial_,x112SposInitial_,x112SnegInitial_,x113SposInitial_,x113SnegInitial_,x114SposInitial_,x114SnegInitial_,x115SposInitial_,x115SnegInitial_,x116SposInitial_,x116SnegInitial_,x117SposInitial_,x117SnegInitial_,x118SposInitial_,x118SnegInitial_,x119SposInitial_,x119SnegInitial_,x120SposInitial_,x120SnegInitial_,x121SposInitial_,x121SnegInitial_,x122SposInitial_,x122SnegInitial_,x123SposInitial_,x123SnegInitial_,x124SposInitial_,x124SnegInitial_,x125SposInitial_,x125SnegInitial_,x126SposInitial_,x126SnegInitial_,x127SposInitial_,x127SnegInitial_,x128SposInitial_,x128SnegInitial_,x129SposInitial_,x129SnegInitial_,x130SposInitial_,x130SnegInitial_,x131SposInitial_,x131SnegInitial_,x132SposInitial_,x132SnegInitial_,x133SposInitial_,x133SnegInitial_,x134SposInitial_,x134SnegInitial_,x135SposInitial_,x135SnegInitial_,x136SposInitial_,x136SnegInitial_,x137SposInitial_,x137SnegInitial_,x138SposInitial_,x138SnegInitial_,x139SposInitial_,x139SnegInitial_,x140SposInitial_,x140SnegInitial_,x141SposInitial_,x141SnegInitial_,x142SposInitial_,x142SnegInitial_,x143SposInitial_,x143SnegInitial_,x144SposInitial_,x144SnegInitial_,x145SposInitial_,x145SnegInitial_,x146SposInitial_,x146SnegInitial_,x147SposInitial_,x147SnegInitial_,x148SposInitial_,x148SnegInitial_,x149SposInitial_,x149SnegInitial_,x150SposInitial_,x150SnegInitial_,x151SposInitial_,x151SnegInitial_,x152SposInitial_,x152SnegInitial_,x153SposInitial_,x153SnegInitial_,x154SposInitial_,x154SnegInitial_,x155SposInitial_,x155SnegInitial_,x156SposInitial_,x156SnegInitial_,x157SposInitial_,x157SnegInitial_,x158SposInitial_,x158SnegInitial_,x159SposInitial_,x159SnegInitial_,x160SposInitial_,x160SnegInitial_,x161SposInitial_,x161SnegInitial_,x162SposInitial_,x162SnegInitial_,x163SposInitial_,x163SnegInitial_,x164SposInitial_,x164SnegInitial_,x165SposInitial_,x165SnegInitial_,x166SposInitial_,x166SnegInitial_,x167SposInitial_,x167SnegInitial_,x168SposInitial_,x168SnegInitial_,x169SposInitial_,x169SnegInitial_,x170SposInitial_,x170SnegInitial_,x171SposInitial_,x171SnegInitial_,x172SposInitial_,x172SnegInitial_,x173SposInitial_,x173SnegInitial_,x174SposInitial_,x174SnegInitial_,x175SposInitial_,x175SnegInitial_,x176SposInitial_,x176SnegInitial_,x177SposInitial_,x177SnegInitial_,x178SposInitial_,x178SnegInitial_,x179SposInitial_,x179SnegInitial_,x180SposInitial_,x180SnegInitial_,x181SposInitial_,x181SnegInitial_,x182SposInitial_,x182SnegInitial_,x183SposInitial_,x183SnegInitial_,x184SposInitial_,x184SnegInitial_,x185SposInitial_,x185SnegInitial_,x186SposInitial_,x186SnegInitial_,x187SposInitial_,x187SnegInitial_,x188SposInitial_,x188SnegInitial_,x189SposInitial_,x189SnegInitial_,x190SposInitial_,x190SnegInitial_,x191SposInitial_,x191SnegInitial_,x192SposInitial_,x192SnegInitial_,x193SposInitial_,x193SnegInitial_,x194SposInitial_,x194SnegInitial_,x195SposInitial_,x195SnegInitial_] =
  reduceFFNCCrn[MNIST[x0SposInitial,x0SnegInitial,x1SposInitial,x1SnegInitial,x2SposInitial,x2SnegInitial,x3SposInitial,x3SnegInitial,x4SposInitial,x4SnegInitial,x5SposInitial,x5SnegInitial,x6SposInitial,x6SnegInitial,x7SposInitial,x7SnegInitial,x8SposInitial,x8SnegInitial,x9SposInitial,x9SnegInitial,x10SposInitial,x10SnegInitial,x11SposInitial,x11SnegInitial,x12SposInitial,x12SnegInitial,x13SposInitial,x13SnegInitial,x14SposInitial,x14SnegInitial,x15SposInitial,x15SnegInitial,x16SposInitial,x16SnegInitial,x17SposInitial,x17SnegInitial,x18SposInitial,x18SnegInitial,x19SposInitial,x19SnegInitial,x20SposInitial,x20SnegInitial,x21SposInitial,x21SnegInitial,x22SposInitial,x22SnegInitial,x23SposInitial,x23SnegInitial,x24SposInitial,x24SnegInitial,x25SposInitial,x25SnegInitial,x26SposInitial,x26SnegInitial,x27SposInitial,x27SnegInitial,x28SposInitial,x28SnegInitial,x29SposInitial,x29SnegInitial,x30SposInitial,x30SnegInitial,x31SposInitial,x31SnegInitial,x32SposInitial,x32SnegInitial,x33SposInitial,x33SnegInitial,x34SposInitial,x34SnegInitial,x35SposInitial,x35SnegInitial,x36SposInitial,x36SnegInitial,x37SposInitial,x37SnegInitial,x38SposInitial,x38SnegInitial,x39SposInitial,x39SnegInitial,x40SposInitial,x40SnegInitial,x41SposInitial,x41SnegInitial,x42SposInitial,x42SnegInitial,x43SposInitial,x43SnegInitial,x44SposInitial,x44SnegInitial,x45SposInitial,x45SnegInitial,x46SposInitial,x46SnegInitial,x47SposInitial,x47SnegInitial,x48SposInitial,x48SnegInitial,x49SposInitial,x49SnegInitial,x50SposInitial,x50SnegInitial,x51SposInitial,x51SnegInitial,x52SposInitial,x52SnegInitial,x53SposInitial,x53SnegInitial,x54SposInitial,x54SnegInitial,x55SposInitial,x55SnegInitial,x56SposInitial,x56SnegInitial,x57SposInitial,x57SnegInitial,x58SposInitial,x58SnegInitial,x59SposInitial,x59SnegInitial,x60SposInitial,x60SnegInitial,x61SposInitial,x61SnegInitial,x62SposInitial,x62SnegInitial,x63SposInitial,x63SnegInitial,x64SposInitial,x64SnegInitial,x65SposInitial,x65SnegInitial,x66SposInitial,x66SnegInitial,x67SposInitial,x67SnegInitial,x68SposInitial,x68SnegInitial,x69SposInitial,x69SnegInitial,x70SposInitial,x70SnegInitial,x71SposInitial,x71SnegInitial,x72SposInitial,x72SnegInitial,x73SposInitial,x73SnegInitial,x74SposInitial,x74SnegInitial,x75SposInitial,x75SnegInitial,x76SposInitial,x76SnegInitial,x77SposInitial,x77SnegInitial,x78SposInitial,x78SnegInitial,x79SposInitial,x79SnegInitial,x80SposInitial,x80SnegInitial,x81SposInitial,x81SnegInitial,x82SposInitial,x82SnegInitial,x83SposInitial,x83SnegInitial,x84SposInitial,x84SnegInitial,x85SposInitial,x85SnegInitial,x86SposInitial,x86SnegInitial,x87SposInitial,x87SnegInitial,x88SposInitial,x88SnegInitial,x89SposInitial,x89SnegInitial,x90SposInitial,x90SnegInitial,x91SposInitial,x91SnegInitial,x92SposInitial,x92SnegInitial,x93SposInitial,x93SnegInitial,x94SposInitial,x94SnegInitial,x95SposInitial,x95SnegInitial,x96SposInitial,x96SnegInitial,x97SposInitial,x97SnegInitial,x98SposInitial,x98SnegInitial,x99SposInitial,x99SnegInitial,x100SposInitial,x100SnegInitial,x101SposInitial,x101SnegInitial,x102SposInitial,x102SnegInitial,x103SposInitial,x103SnegInitial,x104SposInitial,x104SnegInitial,x105SposInitial,x105SnegInitial,x106SposInitial,x106SnegInitial,x107SposInitial,x107SnegInitial,x108SposInitial,x108SnegInitial,x109SposInitial,x109SnegInitial,x110SposInitial,x110SnegInitial,x111SposInitial,x111SnegInitial,x112SposInitial,x112SnegInitial,x113SposInitial,x113SnegInitial,x114SposInitial,x114SnegInitial,x115SposInitial,x115SnegInitial,x116SposInitial,x116SnegInitial,x117SposInitial,x117SnegInitial,x118SposInitial,x118SnegInitial,x119SposInitial,x119SnegInitial,x120SposInitial,x120SnegInitial,x121SposInitial,x121SnegInitial,x122SposInitial,x122SnegInitial,x123SposInitial,x123SnegInitial,x124SposInitial,x124SnegInitial,x125SposInitial,x125SnegInitial,x126SposInitial,x126SnegInitial,x127SposInitial,x127SnegInitial,x128SposInitial,x128SnegInitial,x129SposInitial,x129SnegInitial,x130SposInitial,x130SnegInitial,x131SposInitial,x131SnegInitial,x132SposInitial,x132SnegInitial,x133SposInitial,x133SnegInitial,x134SposInitial,x134SnegInitial,x135SposInitial,x135SnegInitial,x136SposInitial,x136SnegInitial,x137SposInitial,x137SnegInitial,x138SposInitial,x138SnegInitial,x139SposInitial,x139SnegInitial,x140SposInitial,x140SnegInitial,x141SposInitial,x141SnegInitial,x142SposInitial,x142SnegInitial,x143SposInitial,x143SnegInitial,x144SposInitial,x144SnegInitial,x145SposInitial,x145SnegInitial,x146SposInitial,x146SnegInitial,x147SposInitial,x147SnegInitial,x148SposInitial,x148SnegInitial,x149SposInitial,x149SnegInitial,x150SposInitial,x150SnegInitial,x151SposInitial,x151SnegInitial,x152SposInitial,x152SnegInitial,x153SposInitial,x153SnegInitial,x154SposInitial,x154SnegInitial,x155SposInitial,x155SnegInitial,x156SposInitial,x156SnegInitial,x157SposInitial,x157SnegInitial,x158SposInitial,x158SnegInitial,x159SposInitial,x159SnegInitial,x160SposInitial,x160SnegInitial,x161SposInitial,x161SnegInitial,x162SposInitial,x162SnegInitial,x163SposInitial,x163SnegInitial,x164SposInitial,x164SnegInitial,x165SposInitial,x165SnegInitial,x166SposInitial,x166SnegInitial,x167SposInitial,x167SnegInitial,x168SposInitial,x168SnegInitial,x169SposInitial,x169SnegInitial,x170SposInitial,x170SnegInitial,x171SposInitial,x171SnegInitial,x172SposInitial,x172SnegInitial,x173SposInitial,x173SnegInitial,x174SposInitial,x174SnegInitial,x175SposInitial,x175SnegInitial,x176SposInitial,x176SnegInitial,x177SposInitial,x177SnegInitial,x178SposInitial,x178SnegInitial,x179SposInitial,x179SnegInitial,x180SposInitial,x180SnegInitial,x181SposInitial,x181SnegInitial,x182SposInitial,x182SnegInitial,x183SposInitial,x183SnegInitial,x184SposInitial,x184SnegInitial,x185SposInitial,x185SnegInitial,x186SposInitial,x186SnegInitial,x187SposInitial,x187SnegInitial,x188SposInitial,x188SnegInitial,x189SposInitial,x189SnegInitial,x190SposInitial,x190SnegInitial,x191SposInitial,x191SnegInitial,x192SposInitial,x192SnegInitial,x193SposInitial,x193SnegInitial,x194SposInitial,x194SnegInitial,x195SposInitial,x195SnegInitial], keepInputLayer=True, inputPrefix="x"];

cnt = Count[MNIST[x0SposInitial,x0SnegInitial,x1SposInitial,x1SnegInitial,x2SposInitial,x2SnegInitial,x3SposInitial,x3SnegInitial,x4SposInitial,x4SnegInitial,x5SposInitial,x5SnegInitial,x6SposInitial,x6SnegInitial,x7SposInitial,x7SnegInitial,x8SposInitial,x8SnegInitial,x9SposInitial,x9SnegInitial,x10SposInitial,x10SnegInitial,x11SposInitial,x11SnegInitial,x12SposInitial,x12SnegInitial,x13SposInitial,x13SnegInitial,x14SposInitial,x14SnegInitial,x15SposInitial,x15SnegInitial,x16SposInitial,x16SnegInitial,x17SposInitial,x17SnegInitial,x18SposInitial,x18SnegInitial,x19SposInitial,x19SnegInitial,x20SposInitial,x20SnegInitial,x21SposInitial,x21SnegInitial,x22SposInitial,x22SnegInitial,x23SposInitial,x23SnegInitial,x24SposInitial,x24SnegInitial,x25SposInitial,x25SnegInitial,x26SposInitial,x26SnegInitial,x27SposInitial,x27SnegInitial,x28SposInitial,x28SnegInitial,x29SposInitial,x29SnegInitial,x30SposInitial,x30SnegInitial,x31SposInitial,x31SnegInitial,x32SposInitial,x32SnegInitial,x33SposInitial,x33SnegInitial,x34SposInitial,x34SnegInitial,x35SposInitial,x35SnegInitial,x36SposInitial,x36SnegInitial,x37SposInitial,x37SnegInitial,x38SposInitial,x38SnegInitial,x39SposInitial,x39SnegInitial,x40SposInitial,x40SnegInitial,x41SposInitial,x41SnegInitial,x42SposInitial,x42SnegInitial,x43SposInitial,x43SnegInitial,x44SposInitial,x44SnegInitial,x45SposInitial,x45SnegInitial,x46SposInitial,x46SnegInitial,x47SposInitial,x47SnegInitial,x48SposInitial,x48SnegInitial,x49SposInitial,x49SnegInitial,x50SposInitial,x50SnegInitial,x51SposInitial,x51SnegInitial,x52SposInitial,x52SnegInitial,x53SposInitial,x53SnegInitial,x54SposInitial,x54SnegInitial,x55SposInitial,x55SnegInitial,x56SposInitial,x56SnegInitial,x57SposInitial,x57SnegInitial,x58SposInitial,x58SnegInitial,x59SposInitial,x59SnegInitial,x60SposInitial,x60SnegInitial,x61SposInitial,x61SnegInitial,x62SposInitial,x62SnegInitial,x63SposInitial,x63SnegInitial,x64SposInitial,x64SnegInitial,x65SposInitial,x65SnegInitial,x66SposInitial,x66SnegInitial,x67SposInitial,x67SnegInitial,x68SposInitial,x68SnegInitial,x69SposInitial,x69SnegInitial,x70SposInitial,x70SnegInitial,x71SposInitial,x71SnegInitial,x72SposInitial,x72SnegInitial,x73SposInitial,x73SnegInitial,x74SposInitial,x74SnegInitial,x75SposInitial,x75SnegInitial,x76SposInitial,x76SnegInitial,x77SposInitial,x77SnegInitial,x78SposInitial,x78SnegInitial,x79SposInitial,x79SnegInitial,x80SposInitial,x80SnegInitial,x81SposInitial,x81SnegInitial,x82SposInitial,x82SnegInitial,x83SposInitial,x83SnegInitial,x84SposInitial,x84SnegInitial,x85SposInitial,x85SnegInitial,x86SposInitial,x86SnegInitial,x87SposInitial,x87SnegInitial,x88SposInitial,x88SnegInitial,x89SposInitial,x89SnegInitial,x90SposInitial,x90SnegInitial,x91SposInitial,x91SnegInitial,x92SposInitial,x92SnegInitial,x93SposInitial,x93SnegInitial,x94SposInitial,x94SnegInitial,x95SposInitial,x95SnegInitial,x96SposInitial,x96SnegInitial,x97SposInitial,x97SnegInitial,x98SposInitial,x98SnegInitial,x99SposInitial,x99SnegInitial,x100SposInitial,x100SnegInitial,x101SposInitial,x101SnegInitial,x102SposInitial,x102SnegInitial,x103SposInitial,x103SnegInitial,x104SposInitial,x104SnegInitial,x105SposInitial,x105SnegInitial,x106SposInitial,x106SnegInitial,x107SposInitial,x107SnegInitial,x108SposInitial,x108SnegInitial,x109SposInitial,x109SnegInitial,x110SposInitial,x110SnegInitial,x111SposInitial,x111SnegInitial,x112SposInitial,x112SnegInitial,x113SposInitial,x113SnegInitial,x114SposInitial,x114SnegInitial,x115SposInitial,x115SnegInitial,x116SposInitial,x116SnegInitial,x117SposInitial,x117SnegInitial,x118SposInitial,x118SnegInitial,x119SposInitial,x119SnegInitial,x120SposInitial,x120SnegInitial,x121SposInitial,x121SnegInitial,x122SposInitial,x122SnegInitial,x123SposInitial,x123SnegInitial,x124SposInitial,x124SnegInitial,x125SposInitial,x125SnegInitial,x126SposInitial,x126SnegInitial,x127SposInitial,x127SnegInitial,x128SposInitial,x128SnegInitial,x129SposInitial,x129SnegInitial,x130SposInitial,x130SnegInitial,x131SposInitial,x131SnegInitial,x132SposInitial,x132SnegInitial,x133SposInitial,x133SnegInitial,x134SposInitial,x134SnegInitial,x135SposInitial,x135SnegInitial,x136SposInitial,x136SnegInitial,x137SposInitial,x137SnegInitial,x138SposInitial,x138SnegInitial,x139SposInitial,x139SnegInitial,x140SposInitial,x140SnegInitial,x141SposInitial,x141SnegInitial,x142SposInitial,x142SnegInitial,x143SposInitial,x143SnegInitial,x144SposInitial,x144SnegInitial,x145SposInitial,x145SnegInitial,x146SposInitial,x146SnegInitial,x147SposInitial,x147SnegInitial,x148SposInitial,x148SnegInitial,x149SposInitial,x149SnegInitial,x150SposInitial,x150SnegInitial,x151SposInitial,x151SnegInitial,x152SposInitial,x152SnegInitial,x153SposInitial,x153SnegInitial,x154SposInitial,x154SnegInitial,x155SposInitial,x155SnegInitial,x156SposInitial,x156SnegInitial,x157SposInitial,x157SnegInitial,x158SposInitial,x158SnegInitial,x159SposInitial,x159SnegInitial,x160SposInitial,x160SnegInitial,x161SposInitial,x161SnegInitial,x162SposInitial,x162SnegInitial,x163SposInitial,x163SnegInitial,x164SposInitial,x164SnegInitial,x165SposInitial,x165SnegInitial,x166SposInitial,x166SnegInitial,x167SposInitial,x167SnegInitial,x168SposInitial,x168SnegInitial,x169SposInitial,x169SnegInitial,x170SposInitial,x170SnegInitial,x171SposInitial,x171SnegInitial,x172SposInitial,x172SnegInitial,x173SposInitial,x173SnegInitial,x174SposInitial,x174SnegInitial,x175SposInitial,x175SnegInitial,x176SposInitial,x176SnegInitial,x177SposInitial,x177SnegInitial,x178SposInitial,x178SnegInitial,x179SposInitial,x179SnegInitial,x180SposInitial,x180SnegInitial,x181SposInitial,x181SnegInitial,x182SposInitial,x182SnegInitial,x183SposInitial,x183SnegInitial,x184SposInitial,x184SnegInitial,x185SposInitial,x185SnegInitial,x186SposInitial,x186SnegInitial,x187SposInitial,x187SnegInitial,x188SposInitial,x188SnegInitial,x189SposInitial,x189SnegInitial,x190SposInitial,x190SnegInitial,x191SposInitial,x191SnegInitial,x192SposInitial,x192SnegInitial,x193SposInitial,x193SnegInitial,x194SposInitial,x194SnegInitial,x195SposInitial,x195SnegInitial], rxn[___]];
Print["Number of reactions: " <> ToString[cnt]];
cntReduced = Count[MNISTReduced[x0SposInitial,x0SnegInitial,x1SposInitial,x1SnegInitial,x2SposInitial,x2SnegInitial,x3SposInitial,x3SnegInitial,x4SposInitial,x4SnegInitial,x5SposInitial,x5SnegInitial,x6SposInitial,x6SnegInitial,x7SposInitial,x7SnegInitial,x8SposInitial,x8SnegInitial,x9SposInitial,x9SnegInitial,x10SposInitial,x10SnegInitial,x11SposInitial,x11SnegInitial,x12SposInitial,x12SnegInitial,x13SposInitial,x13SnegInitial,x14SposInitial,x14SnegInitial,x15SposInitial,x15SnegInitial,x16SposInitial,x16SnegInitial,x17SposInitial,x17SnegInitial,x18SposInitial,x18SnegInitial,x19SposInitial,x19SnegInitial,x20SposInitial,x20SnegInitial,x21SposInitial,x21SnegInitial,x22SposInitial,x22SnegInitial,x23SposInitial,x23SnegInitial,x24SposInitial,x24SnegInitial,x25SposInitial,x25SnegInitial,x26SposInitial,x26SnegInitial,x27SposInitial,x27SnegInitial,x28SposInitial,x28SnegInitial,x29SposInitial,x29SnegInitial,x30SposInitial,x30SnegInitial,x31SposInitial,x31SnegInitial,x32SposInitial,x32SnegInitial,x33SposInitial,x33SnegInitial,x34SposInitial,x34SnegInitial,x35SposInitial,x35SnegInitial,x36SposInitial,x36SnegInitial,x37SposInitial,x37SnegInitial,x38SposInitial,x38SnegInitial,x39SposInitial,x39SnegInitial,x40SposInitial,x40SnegInitial,x41SposInitial,x41SnegInitial,x42SposInitial,x42SnegInitial,x43SposInitial,x43SnegInitial,x44SposInitial,x44SnegInitial,x45SposInitial,x45SnegInitial,x46SposInitial,x46SnegInitial,x47SposInitial,x47SnegInitial,x48SposInitial,x48SnegInitial,x49SposInitial,x49SnegInitial,x50SposInitial,x50SnegInitial,x51SposInitial,x51SnegInitial,x52SposInitial,x52SnegInitial,x53SposInitial,x53SnegInitial,x54SposInitial,x54SnegInitial,x55SposInitial,x55SnegInitial,x56SposInitial,x56SnegInitial,x57SposInitial,x57SnegInitial,x58SposInitial,x58SnegInitial,x59SposInitial,x59SnegInitial,x60SposInitial,x60SnegInitial,x61SposInitial,x61SnegInitial,x62SposInitial,x62SnegInitial,x63SposInitial,x63SnegInitial,x64SposInitial,x64SnegInitial,x65SposInitial,x65SnegInitial,x66SposInitial,x66SnegInitial,x67SposInitial,x67SnegInitial,x68SposInitial,x68SnegInitial,x69SposInitial,x69SnegInitial,x70SposInitial,x70SnegInitial,x71SposInitial,x71SnegInitial,x72SposInitial,x72SnegInitial,x73SposInitial,x73SnegInitial,x74SposInitial,x74SnegInitial,x75SposInitial,x75SnegInitial,x76SposInitial,x76SnegInitial,x77SposInitial,x77SnegInitial,x78SposInitial,x78SnegInitial,x79SposInitial,x79SnegInitial,x80SposInitial,x80SnegInitial,x81SposInitial,x81SnegInitial,x82SposInitial,x82SnegInitial,x83SposInitial,x83SnegInitial,x84SposInitial,x84SnegInitial,x85SposInitial,x85SnegInitial,x86SposInitial,x86SnegInitial,x87SposInitial,x87SnegInitial,x88SposInitial,x88SnegInitial,x89SposInitial,x89SnegInitial,x90SposInitial,x90SnegInitial,x91SposInitial,x91SnegInitial,x92SposInitial,x92SnegInitial,x93SposInitial,x93SnegInitial,x94SposInitial,x94SnegInitial,x95SposInitial,x95SnegInitial,x96SposInitial,x96SnegInitial,x97SposInitial,x97SnegInitial,x98SposInitial,x98SnegInitial,x99SposInitial,x99SnegInitial,x100SposInitial,x100SnegInitial,x101SposInitial,x101SnegInitial,x102SposInitial,x102SnegInitial,x103SposInitial,x103SnegInitial,x104SposInitial,x104SnegInitial,x105SposInitial,x105SnegInitial,x106SposInitial,x106SnegInitial,x107SposInitial,x107SnegInitial,x108SposInitial,x108SnegInitial,x109SposInitial,x109SnegInitial,x110SposInitial,x110SnegInitial,x111SposInitial,x111SnegInitial,x112SposInitial,x112SnegInitial,x113SposInitial,x113SnegInitial,x114SposInitial,x114SnegInitial,x115SposInitial,x115SnegInitial,x116SposInitial,x116SnegInitial,x117SposInitial,x117SnegInitial,x118SposInitial,x118SnegInitial,x119SposInitial,x119SnegInitial,x120SposInitial,x120SnegInitial,x121SposInitial,x121SnegInitial,x122SposInitial,x122SnegInitial,x123SposInitial,x123SnegInitial,x124SposInitial,x124SnegInitial,x125SposInitial,x125SnegInitial,x126SposInitial,x126SnegInitial,x127SposInitial,x127SnegInitial,x128SposInitial,x128SnegInitial,x129SposInitial,x129SnegInitial,x130SposInitial,x130SnegInitial,x131SposInitial,x131SnegInitial,x132SposInitial,x132SnegInitial,x133SposInitial,x133SnegInitial,x134SposInitial,x134SnegInitial,x135SposInitial,x135SnegInitial,x136SposInitial,x136SnegInitial,x137SposInitial,x137SnegInitial,x138SposInitial,x138SnegInitial,x139SposInitial,x139SnegInitial,x140SposInitial,x140SnegInitial,x141SposInitial,x141SnegInitial,x142SposInitial,x142SnegInitial,x143SposInitial,x143SnegInitial,x144SposInitial,x144SnegInitial,x145SposInitial,x145SnegInitial,x146SposInitial,x146SnegInitial,x147SposInitial,x147SnegInitial,x148SposInitial,x148SnegInitial,x149SposInitial,x149SnegInitial,x150SposInitial,x150SnegInitial,x151SposInitial,x151SnegInitial,x152SposInitial,x152SnegInitial,x153SposInitial,x153SnegInitial,x154SposInitial,x154SnegInitial,x155SposInitial,x155SnegInitial,x156SposInitial,x156SnegInitial,x157SposInitial,x157SnegInitial,x158SposInitial,x158SnegInitial,x159SposInitial,x159SnegInitial,x160SposInitial,x160SnegInitial,x161SposInitial,x161SnegInitial,x162SposInitial,x162SnegInitial,x163SposInitial,x163SnegInitial,x164SposInitial,x164SnegInitial,x165SposInitial,x165SnegInitial,x166SposInitial,x166SnegInitial,x167SposInitial,x167SnegInitial,x168SposInitial,x168SnegInitial,x169SposInitial,x169SnegInitial,x170SposInitial,x170SnegInitial,x171SposInitial,x171SnegInitial,x172SposInitial,x172SnegInitial,x173SposInitial,x173SnegInitial,x174SposInitial,x174SnegInitial,x175SposInitial,x175SnegInitial,x176SposInitial,x176SnegInitial,x177SposInitial,x177SnegInitial,x178SposInitial,x178SnegInitial,x179SposInitial,x179SnegInitial,x180SposInitial,x180SnegInitial,x181SposInitial,x181SnegInitial,x182SposInitial,x182SnegInitial,x183SposInitial,x183SnegInitial,x184SposInitial,x184SnegInitial,x185SposInitial,x185SnegInitial,x186SposInitial,x186SnegInitial,x187SposInitial,x187SnegInitial,x188SposInitial,x188SnegInitial,x189SposInitial,x189SnegInitial,x190SposInitial,x190SnegInitial,x191SposInitial,x191SnegInitial,x192SposInitial,x192SnegInitial,x193SposInitial,x193SnegInitial,x194SposInitial,x194SnegInitial,x195SposInitial,x195SnegInitial], rxn[___]];
Print["Number of reactions (reduced form): " <> ToString[cntReduced]];

tmax = 200;
totalCount = 0;
correctCount = 0;
matchingCount = 0;

analyzeConvergenceTime = False;

Print["Example Index (i)"];
Print["Expected Output (E)"];
Print["CRN Output (C)"];
Print["NN Output (N)"];

Print["i: E C N"];
rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.222762,0,0.558887,0,0.617550,0,0.070270,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.235795,0,0.553801,0,0.174092,0,0.485687,0,0.506818,0,0,0.169733,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.098714,0,0.555599,0,0.012551,0,0,0.434992,0.021954,0,0.572579,0,0,0.219176,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.409155,0,0.470807,0,0,0.302480,0,0.320874,0,0.021440,0.601299,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.663413,0,0.105853,0,0,0.330223,0,0.426586,0,0.104222,0.617833,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.084736,0.677664,0,0,0.167970,0,0.434003,0,0.545643,0.073904,0,0.630260,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.001799,0,0.725093,0,0,0.245522,0,0.404199,0,0.430762,0.440149,0,0.393399,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.008828,0.711368,0,0,0.257254,0,0.350923,0.243399,0,0.535045,0,0.014370,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.660493,0,0.073600,0,0.238544,0,0.473690,0,0.148477,0,0,0.252437,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.201911,0,0.585530,0,0.513655,0,0.123671,0,0,0.248678,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["0: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 1.098553419113159,-2.709787130355835,-2.709091186523438,
 -2.581368923187256,-2.600372314453125,-2.60804295539856 ,
 -2.708367347717285,-2.702065944671631,-1.847891807556152,
 -2.449567317962646];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p0=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p0.pdf", p0];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.014493,0.464770,0,0.628334,0,0.078113,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.140676,0.477331,0,0,0.005320,0.312157,0,0.342112,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.053247,0.464423,0,0.283139,0,0,0.434992,0.277836,0,0.274540,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.340527,0,0.588454,0,0.343598,0,0.258538,0,0.584442,0,0.298358,0,0,0.180019,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.252629,0,0.622520,0,0.661934,0,0.567531,0,0.318327,0,0.526656,0,0.468368,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.183120,0.633011,0,0.499330,0,0,0.090741,0,0.513350,0,0.036407,0.461803,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.081956,0,0.636831,0,0,0.203218,0,0.478801,0,0.460831,0.330654,0,0.446498,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.395682,0,0.603530,0,0,0.363668,0,0.396797,0.019359,0,0.595742,0,0.195088,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.490885,0,0.535365,0,0.062074,0,0.398200,0,0.527889,0,0.137759,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.116616,0,0.516903,0,0.540125,0,0.199162,0,0,0.144757,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["1: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-0.778489828109741,-0.832743883132935,-0.832048058509827,
 -0.704325675964355,-0.723329126834869,-0.730999708175659,
 -0.831324219703674,-0.825022637844086, 0.029151486232877,
 -0.572524130344391];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p1=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p1.pdf", p1];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0.385506,0,0.119708,0,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.214269,0,0.882164,0,0,0.049119,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.392842,0,0.532702,0,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.579513,0,0.317342,0,0,0.426754,0,0.448233,0,0.434992,0,0.456477,0,0.265656,0.097491,0,0.067752,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.593540,0,0.024841,0,0,0.403703,0,0.314245,0,0.320874,0,0.225362,0.516005,0,0.760177,0,0.513454,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.698813,0,0.007531,0,0,0.369637,0,0.330223,0,0.426586,0.221268,0,0.293323,0,0.157583,0,0.633845,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.578009,0,0.140409,0,0,0.361107,0,0.434003,0,0.376035,0.465081,0,0,0.278564,0.080430,0,0.624284,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.397877,0,0.569211,0,0,0.321993,0,0.404199,0,0.137625,0.258777,0,0,0.259543,0.452380,0,0.259654,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.022554,0.629016,0,0.463334,0,0.025548,0,0.219869,0,0.357594,0,0.391821,0,0.450970,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.192448,0.130463,0,0.231681,0,0.187415,0,0.544556,0,0.034818,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0.086616,0,0.057367,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["2: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-7.034282684326172,-7.088536262512207,-7.087840557098389,
 -6.960118293762207,-6.178709030151367,-6.98679256439209 ,
  5.424468517303467,-7.080815315246582,-6.226641178131104,
 -6.828316688537598];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p2=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p2.pdf", p2];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0.153733,0,0.648920,0,0.417860,0,0.683397,0,0.413629,0,0.080074,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.146427,0,0.511285,0,0,0.061885,0,0.401399,0,0.313333,0.274465,0,0.049875,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.076370,0.537930,0,0,0.016950,0,0.448233,0,0.434992,0,0.456477,0,0.298009,0.541608,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.199422,0,0.651311,0,0,0.312526,0,0.314245,0,0.320874,0,0.403793,0,0.390858,0.496451,0,0.071297,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.245872,0,0.433021,0,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0,0.376285,0.535034,0,0.433845,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.426049,0,0.202174,0,0,0.361107,0,0.434003,0,0.545643,0,0.520213,0,0.361897,0.525528,0,0.522323,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.332191,0,0.002544,0,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.272288,0.652380,0,0.382203,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.124505,0,0.408427,0,0,0.310196,0,0.363668,0,0.449738,0,0.446328,0.311429,0,0.771559,0,0,0.001824,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.357552,0,0.013796,0,0,0.349691,0,0.151800,0.331811,0,0.682857,0,0.188279,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.185344,0.177687,0,0.484243,0,0.578573,0,0.459165,0,0.125014,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["3: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 3.454233884811401,-6.181535720825195,-6.180839538574219,
 -6.053117275238037,-6.072120666503906,-4.963723182678223,
 -6.180115699768066,-6.173814296722412,-5.319640159606934,
 -5.921315670013428];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p3=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p3.pdf", p3];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.448457,0,0.184901,0.047994,0,0,0.140321,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.339499,0.188041,0,0.471871,0,0.211170,0,0.284344,0,0.372000,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.223198,0.471788,0,0.213206,0,0,0.320874,0,0.230264,0.497378,0,0.136648,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.234982,0,0.212716,0,0,0.330223,0,0.297175,0.402641,0,0.366852,0,0,0.139475,0,0.011253,0.084184,0,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.235508,0,0.433991,0,0.279722,0,0.400436,0,0.019002,0,0,0.337387,0,0.192119,0.310558,0,0.121386,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.262162,0,0.096502,0.173252,0,0.329042,0,0,0.440243,0,0.352680,0,0.206443,0,0.067797,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.280784,0.421626,0,0,0.178170,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.056792,0.328740,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.111815,0.529648,0,0,0.187326,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.064623,0,0.797722,0,0.427840,0,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0.133759,0,0.424309,0,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["4: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-4.040984153747559,-4.095237731933594,-4.094542026519775,
 -3.966819763183594,-3.985823154449463,-3.993493795394897,
 -0.976611256599426,-4.087516784667969,-3.23334264755249 ,
  2.689970016479492];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p4=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p4.pdf", p4];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.482941,0.223485,0,0.161639,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.419891,0,0.252155,0,0.418325,0,0.291772,0.540226,0,0,0.156431,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.046840,0.580853,0,0,0.201266,0.113854,0,0.199338,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.134520,0.079100,0,0.583304,0,0,0.147870,0,0.409920,0.351660,0,0.064891,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.200558,0,0.679625,0,0.583991,0,0.486585,0,0.331808,0,0.468022,0,0,0.109936,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.037093,0,0.151564,0,0.014282,0,0,0.288513,0,0.156252,0.471522,0,0,0.328170,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.137517,0,0.277202,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.130553,0,0,0.008385,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.241318,0,0,0.182992,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.488229,0,0,0.034245,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["5: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-6.403069496154785,-7.281308174133301,-5.4064040184021  ,
 -7.152890205383301, 5.725235462188721,-6.355579376220703,
 -6.45590353012085 ,-6.223363876342773,-6.419413089752197,
 -7.021088600158691];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p5=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p5.pdf", p5];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.145034,0.751864,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.011202,0.515099,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0.253243,0,0.356268,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.188755,0.679126,0,0.221697,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.079243,0.573414,0,0,0.174810,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.128742,0,0.454357,0,0,0.331978,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.408546,0,0.458454,0,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.636332,0,0.113007,0,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0.525799,0,0,0.020428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.492086,0,0,0.034172,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["6: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-4.858356475830078, 2.252084493637085,-3.854581832885742,
 -3.789154052734375,-4.803195476531982,-4.810866355895996,
 -1.888656735420227,-2.914813041687012,-4.05071496963501 ,
 -4.652390480041504];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p6=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p6.pdf", p6];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.076175,0,0.217996,0,0.192657,0,0.057723,0,0,0.215124,0,0.423137,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.244677,0,0.892258,0,0.730087,0,0.565403,0,0.543923,0,0.557165,0,0.478817,0,0,0.257813,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.014464,0.335696,0,0.134645,0,0,0.296840,0,0.247578,0,0.132638,0.153070,0,0.557182,0,0,0.122176,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.426586,0,0.062065,0.615872,0,0,0.059083,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.539761,0.219983,0,0.452809,0,0,0.188197,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.172919,0.531326,0,0.063987,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.284575,0,0.449751,0,0,0.327787,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.331064,0.442317,0,0.013183,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.148949,0,0.468769,0,0,0.235933,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.848966,0,0.253915,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0.360185,0,0.007742,0,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["7: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-10.691804885864258, -8.546674728393555, -6.271096706390381,
 -10.400534629821777, -4.762297630310059,-10.698451995849609,
 -11.070019721984863,  8.871186256408691,-10.209543228149414,
  -8.620406150817871];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p7=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p7.pdf", p7];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.051564,0,0.337940,0,0.411133,0,0.588736,0,0.554782,0,0.409386,0,0.209216,0,0.289171,0,0.133208,0,0,0.059073,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.269187,0,0.741277,0,0.451655,0,0,0.116950,0,0.193332,0.026773,0,0.518032,0,0.570618,0,0.709255,0,0,0.012640,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.035696,0,0,0.263394,0,0.403703,0,0.061304,0.536969,0,0.579540,0,0.165025,0,0,0.121196,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.015715,0.582522,0,0.348904,0,0,0.333634,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.190963,0.452619,0,0.374820,0,0,0.393682,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.064123,0.663302,0,0.587958,0,0.477081,0,0.181326,0,0,0.286013,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.253333,0,0.258766,0,0.017385,0.504653,0,0.389860,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.490036,0.327889,0,0.606386,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.168524,0,0,0.202991,0,0.029176,0.296008,0,0.447201,0,0.724851,0,0.481877,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.677368,0,0.861448,0,0.656272,0,0.554848,0,0.315680,0,0.034382,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["8: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-10.860944747924805, -4.866731643676758, -6.880515098571777,
   9.378129005432129,-10.805784225463867, -6.77946662902832 ,
 -10.913779258728027,-10.907477378845215,-10.053302764892578,
 -10.65497875213623 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p8=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p8.pdf", p8];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.108923,0,0.176258,0,0.209740,0.027354,0,0.208505,0,0,0.068860,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.389716,0,0.555762,0,0.484876,0,0.428824,0,0.233289,0,0,0.150125,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.259521,0,0,0.249214,0,0.347737,0,0.438830,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.341395,0,0,0.255421,0,0.089501,0,0.068499,0,0.367328,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.264038,0.587226,0,0.398208,0,0.485178,0,0.370288,0,0.234499,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.189002,0.551638,0,0,0.019297,0,0.477015,0,0.512370,0.442024,0,0,0.167609,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.302385,0,0.404199,0,0.478801,0,0.407890,0.450261,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.420327,0.150731,0,0.266331,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.383262,0,0.383025,0.263886,0,0.330830,0,0,0.220084,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.430628,0,0.459733,0,0.217789,0,0,0.233972,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.199409,0,0.157789,0,0,0.113732,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["9: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-1.947182416915894,-6.01996898651123 ,-6.378451824188232,
 -1.630500793457031,-6.26973295211792 , 3.981838941574097,
 -6.37772798538208 ,-1.993715286254883,-5.517252445220947,
 -5.412672996520996];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p9=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p9.pdf", p9];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.447744,0,0.759173,0,0.159324,0,0,0.250120,0,0.331791,0,0.437843,0,0.362790,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.376571,0,0.730087,0,0.279129,0,0.349806,0,0.445400,0,0.395483,0,0.189246,0,0,0.101529,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.111187,0,0.677782,0,0,0.011546,0,0.314245,0,0.320874,0,0.158695,0.601299,0,0.159197,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.031579,0.659492,0,0.269579,0,0,0.330223,0,0.426586,0,0.242457,0.615872,0,0.189936,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.150422,0.053155,0,0.561442,0,0,0.288905,0,0.545643,0.014101,0,0.630260,0,0.000038,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.267064,0,0.188659,0,0.361062,0,0.445468,0.445051,0,0.527712,0,0,0.163306,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.183072,0.533084,0,0.207507,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.108984,0,0.551419,0,0.066190,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.451122,0,0.444459,0,0,0.109299,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.595092,0,0.679480,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["10: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-4.65101146697998 ,-7.204176902770996,-3.330959796905518,
 -7.075758934020996,-1.443741798400879,-7.102433204650879,
 -7.202757358551025, 5.54641056060791 ,-6.342281818389893,
 -6.943957328796387];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p10=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p10.pdf", p10];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0.006962,0,0.170597,0,0.389700,0,0.262532,0,0,0.013767,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.043038,0,0.409036,0,0.095162,0,0.590099,0,0.216349,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.129999,0.173485,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.434992,0.051366,0,0,0.092127,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.304207,0.387383,0,0,0.377132,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.040312,0,0.010104,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.334983,0.183769,0,0,0.504527,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.255326,0.418350,0,0,0.126840,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.086279,0.280976,0,0.586863,0,0.414763,0,0.330654,0,0.285045,0,0,0.020924,0,0.176481,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.383670,0,0.642846,0,0,0.146988,0,0.474201,0,0.516506,0,0.257405,0.336779,0,0.102985,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.145975,0,0,0.063776,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["11: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-2.936559438705444,-4.668292999267578, 3.003500938415527,
 -2.381804943084717,-4.558877944946289,-3.657365560531616,
 -4.666872978210449,-4.660571575164795,-3.806397438049316,
 -4.408072948455811];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p11=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p11.pdf", p11];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.195866,0,0.256799,0,0.012842,0.325172,0,0.368395,0,0,0.021333,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.086624,0,0.360304,0,0.521448,0,0.466249,0,0.471961,0,0.487210,0,0.797914,0,0,0.058093,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.134989,0,0.117364,0,0,0.151175,0,0.312443,0,0.456477,0.176501,0,0.432785,0,0,0.082248,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0,0.152813,0.572868,0,0.023902,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.245214,0.433033,0,0.211950,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.415376,0.171024,0,0.325865,0,0,0.245231,0,0.088197,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.143299,0,0.090593,0.106439,0,0.344821,0,0.513356,0,0.485247,0,0.535556,0,0.139635,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0.044287,0,0.387628,0,0.700976,0,0.732937,0,0.681961,0,0.603979,0,0.046340,0,0,0.177700,0,0.309160,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0.198466,0,0.739354,0,0.414062,0,0.011474,0,0.513796,0,0,0.121260,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.098969,0,0.485530,0,0,0.407914,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.110468,0,0.216076,0,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["12: 7 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-4.343310356140137,-4.397563934326172, 2.732772350311279,
 -1.183984279632568,-4.288149356842041,-4.295820236206055,
 -4.396144390106201,-4.389842987060547,-3.535668849945068,
 -4.137344360351562];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p12=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p12.pdf", p12];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.333397,0,0.584217,0,0.291839,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.326591,0.059386,0,0,0.398627,0.395053,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.429606,0,0.404600,0,0.010399,0,0.051931,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.230912,0.313440,0,0.477580,0,0,0.298701,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.165715,0.534483,0,0.302825,0,0.012445,0,0.004107,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.338893,0,0,0.004591,0,0.519172,0,0.085899,0.016534,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.083731,0,0.153365,0,0.404199,0,0.474880,0.285247,0,0,0.228170,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.181368,0,0.248623,0,0,0.289607,0,0.363668,0.014967,0,0.090927,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.392493,0,0,0.264997,0,0.398949,0.023838,0,0.190356,0,0,0.398581,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.417544,0,0.555832,0,0.368864,0,0,0.015757,0,0.394956,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["13: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-3.779485464096069,-1.90953803062439 ,-3.002427577972412,
  2.296669960021973,-3.724324703216553,-3.731995344161987,
 -3.832319736480713,-3.826018333435059,-2.97184419631958 ,
 -3.573519706726074];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p13=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p13.pdf", p13];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.257779,0,0.138332,0,0.049338,0,0.048272,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.344238,0.273111,0,0.507255,0,0.624465,0,0.587130,0,0.068378,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.051860,0.333028,0,0.461482,0,0.481178,0,0.217949,0,0,0.179026,0,0.021539,0.640628,0,0.676576,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.016908,0,0.625893,0,0.421900,0,0,0.256644,0,0.213265,0,0.249305,0,0.403793,0,0.390858,0,0.114333,0.756591,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.418809,0,0.660578,0,0,0.322861,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0,0.376285,0,0.006142,0.828943,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.808364,0,0.137813,0,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0,0.520213,0,0.361897,0.297097,0,0.832127,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.909626,0,0.021407,0,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.078170,0.661204,0,0.193968,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.624883,0,0.068623,0,0,0.259220,0,0.310196,0,0.363668,0,0.400719,0.057594,0,0.629076,0,0.329402,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.327589,0,0.712101,0,0.032062,0,0,0.085223,0.043446,0,0.383494,0,0.488673,0,0.107367,0,0,0.099956,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.016345,0.325387,0,0.493087,0,0.532589,0,0.400910,0,0,0.036133,0,0.200639,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["14: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 3.223716497421265,-4.83495044708252 ,-4.834254264831543,
 -4.706532001495361,-4.72553539276123 ,-4.733205795288086,
 -4.833530426025391,-4.827229022979736,-3.973054885864258,
 -4.574730396270752];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p14=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p14.pdf", p14];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.230872,0.407723,0,0.447621,0,0.505295,0,0.489171,0,0.027326,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.206166,0.201767,0,0,0.380090,0,0.206477,0.570618,0,0.058275,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.245317,0,0,0.004441,0,0.320874,0,0.009675,0.465025,0,0,0.178058,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.176783,0.289187,0,0,0.327282,0,0.363841,0.415386,0,0.080578,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.041390,0,0.063403,0,0,0.434003,0,0.108388,0.388610,0,0,0.318760,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.150397,0,0.304345,0,0.204199,0.469238,0,0,0.017694,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.252018,0,0.524771,0,0,0.289465,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0.494426,0,0,0.039055,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.171333,0.541106,0,0.058965,0,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.244507,0,0.698966,0,0.042151,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["15: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-1.905262231826782,-0.832743883132935,-1.958820462226868,
 -1.831098079681396,-1.850101470947266,-1.8577721118927  ,
 -1.958096623420715, 0.159245073795319,-1.097620964050293,
 -1.55679178237915 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p15=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p15.pdf", p15];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.024026,0.742925,0,0.606821,0,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.012809,0,0.744021,0,0.351643,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.342277,0.408405,0,0.352353,0,0,0.321613,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.400283,0.298825,0,0.507165,0,0,0.319223,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.117866,0,0.677912,0,0.156577,0,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.096390,0.601932,0,0.348208,0,0,0.403057,0,0.266967,0.181558,0,0.196799,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.281586,0,0.626148,0,0,0.176160,0.140632,0,0.464101,0,0.630260,0,0.759842,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.033495,0.629014,0,0.563302,0,0.350703,0,0.515317,0,0.231326,0,0.632614,0,0.641596,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.015681,0,0.731957,0,0.681961,0,0.628489,0,0.545360,0,0.524261,0,0.497703,0,0,0.065696,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.132062,0,0.566738,0,0.517956,0,0.412905,0,0.157301,0,0,0.153417,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["16: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-16.359706878662109,-16.624801635742188,-16.624105453491211,
 -16.285541534423828,-10.286486625671387,-11.831463813781738,
  14.960732460021973,-16.61707878112793 ,-15.762905120849609,
 -16.364582061767578];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p16=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p16.pdf", p16];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.142475,0.359571,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.464313,0.296034,0,0.775365,0,0,0.012014,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.412443,0.136660,0,0.512775,0,0.004353,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.289735,0.403636,0,0.577580,0,0,0.088897,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.345127,0.196247,0,0.553806,0,0,0.037555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.224187,0,0.562075,0,0,0.050545,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.107260,0.650557,0,0.205605,0,0,0.426840,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.592741,0,0.464314,0,0,0.348962,0,0.449738,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.098683,0.664415,0,0.018698,0,0,0.474201,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.194995,0,0.674460,0,0,0.338980,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.039132,0,0.339879,0,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["17: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-3.043201208114624, 1.23026442527771 ,-3.081420421600342,
 -2.969037055969238,-2.988040447235107,-2.995711088180542,
 -3.096035480499268,-3.089734077453613,-2.041526317596436,
 -2.837235450744629];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p17=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p17.pdf", p17];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0.501879,0,0.399231,0,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.536818,0,0.597851,0,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.497744,0,0.687604,0,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.455983,0,0.726165,0,0,0.426754,0,0.448233,0,0.434992,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.437657,0,0.553272,0,0,0.403703,0,0.314245,0,0.320874,0,0.157715,0,0.058505,0.067040,0,0,0.025762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.312539,0,0.434002,0,0,0.369637,0,0.330223,0,0.082469,0.488915,0,0.516852,0,0.803662,0,0.587767,0,0.013595,0,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.054480,0,0.673743,0,0,0.237577,0,0.359493,0.348475,0,0.152336,0,0,0.262878,0.030430,0,0.911538,0,0.219425,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.140358,0.523132,0,0.266243,0,0,0.109101,0.511395,0,0,0.229459,0,0.352680,0.210223,0,0.913576,0,0.219989,0,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0.377059,0,0.590253,0,0.543399,0,0.286025,0,0.124174,0,0.709794,0,0.704059,0,0.015757,0,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.351652,0,0.141016,0.229850,0,0.603445,0,0.248083,0,0.020485,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["18: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-7.479354858398438,-7.533608436584473,-7.532912731170654,
 -7.405190467834473,-4.026721000671387,-7.431864738464355,
  5.869540691375732,-7.525887489318848,-6.671713352203369,
 -7.273388862609863];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p18=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p18.pdf", p18];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.269187,0,0.339317,0,0.003616,0,0,0.160087,0,0.084508,0,0.106561,0,0.437850,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.632595,0,0.681775,0,0.428762,0,0.445317,0,0.499481,0,0.502656,0,0,0.023401,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.293949,0.132237,0,0,0.141477,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.421879,0,0.362200,0,0.202336,0,0.218495,0,0.229450,0,0.109578,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.214003,0.349630,0,0.349953,0,0.510065,0,0.621988,0,0.679262,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.154183,0,0,0.175739,0,0.266022,0,0.055892,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.094938,0.418085,0,0.310308,0,0,0.069564,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.301819,0,0.029070,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["19: 7 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-8.080297470092773,-8.134551048278809, 1.125545382499695,
 -6.48875617980957 ,-5.75636100769043 ,-8.032807350158691,
 -8.133131980895996,-2.031217575073242,-7.272655963897705,
 -7.874331474304199];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p19=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p19.pdf", p19];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.361368,0,0.386960,0,0.164075,0,0.014226,0,0,0.120708,0,0.025908,0.014118,0,0,0.204947,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.235853,0,0.692258,0,0.484008,0,0.139913,0,0.119414,0,0.124812,0,0.419013,0,0,0.000950,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.110206,0,0.303272,0,0,0.403703,0,0.314245,0,0.320874,0.449148,0,0,0.033995,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.175178,0,0,0.369637,0,0.330223,0,0.426586,0.316366,0,0,0.112560,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0.257238,0,0.026338,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0.394071,0,0.036536,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.427189,0.479163,0,0.020252,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.356702,0.553379,0,0,0.052437,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.194956,0.735635,0,0,0.013221,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.195092,0,0.816735,0,0,0.016504,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0.119506,0,0.386113,0,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["20: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-6.21306324005127 ,-5.73924732208252 ,-1.360117554664612,
 -6.023867607116699,-4.034225940704346,-6.108057022094727,
 -6.265897274017334, 4.494519233703613,-5.405421733856201,
 -5.47902774810791 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p20=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p20.pdf", p20];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.015875,0.232254,0,0.288448,0,0.103985,0,0,0.026568,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.043822,0,0.674859,0,0.682854,0,0.547919,0,0.478994,0,0.470981,0,0,0.279457,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.259905,0,0.718322,0,0.305599,0,0.089021,0,0.104224,0,0.102346,0,0,0.417617,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.395500,0,0.305233,0,0,0.370369,0,0.069147,0.241871,0,0.412874,0,0,0.213407,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.214500,0,0.621257,0,0.534285,0,0.658012,0,0.546943,0,0.434994,0,0.406068,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.037813,0,0.622762,0,0.612423,0,0.255213,0,0,0.300545,0,0.356488,0.545946,0,0.091214,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.262162,0,0.207287,0,0.404199,0,0.478801,0,0.460831,0.318889,0,0.249439,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0,0.416916,0.530056,0,0.120578,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.289507,0.306934,0,0.209132,0,0,0.029251,0.335732,0,0.539720,0,0,0.064662,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.051216,0,0.543067,0,0.580534,0,0.727792,0,0.300504,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.097650,0.063672,0,0.375484,0,0.189284,0,0,0.013563,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["21: 5 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-1.616111993789673,-1.670366048812866,-1.669670224189758,
 -0.465748310089111,-1.560951232910156,-1.269099473953247,
 -1.668946385383606,-1.662644863128662,-0.808470666408539,
 -0.811101496219635];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p21=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p21.pdf", p21];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.024410,0,0.248252,0,0.228495,0,0.077354,0,0,0.143455,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.091525,0,0.637755,0,0.551841,0,0.480954,0,0.507255,0,0.149955,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.103247,0.038933,0,0,0.171763,0.191479,0,0.535679,0,0.247089,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.032872,0.665401,0,0.588364,0,0.378750,0,0.020961,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.240225,0.621738,0,0.565571,0,0.504602,0,0.615872,0,0.658564,0,0,0.068115,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.101303,0.150311,0,0,0.262310,0,0.119233,0.630260,0,0.700038,0,0,0.055128,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0.236228,0,0.639477,0,0.307282,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.207786,0.263987,0,0.533084,0,0.521232,0,0,0.059814,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.025629,0,0.619944,0,0.209513,0,0.140267,0,0.486583,0,0.471729,0,0.340634,0,0,0.045574,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.282675,0,0.901857,0,0.763675,0,0.620824,0,0.406792,0,0,0.092015,0,0.231031,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0.079075,0,0.249917,0,0.422232,0,0.165095,0,0,0.078485,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["22: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-10.457436561584473, -7.201457977294922, -4.749987602233887,
   8.974620819091797,-10.402276039123535,-10.409946441650391,
 -10.510271072387695,-10.503969192504883, -9.649794578552246,
 -10.251470565795898];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p22=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p22.pdf", p22];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.365807,0,0.028850,0.014118,0,0.047994,0,0.099875,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.160087,0.439021,0,0.284616,0,0.071954,0,0.566697,0,0.284746,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.482572,0,0.221049,0,0,0.262050,0.207972,0,0.577770,0,0,0.128058,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0.518598,0,0.582522,0,0.553806,0,0.504602,0,0.247244,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.335617,0,0.125180,0.414161,0,0.151355,0,0,0.306015,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.166389,0,0.372179,0,0,0.381419,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.120980,0.594175,0,0,0.252680,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.326542,0,0.014034,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.583569,0,0,0.374580,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.792546,0,0.261711,0,0,0.102947,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0.425849,0,0.136656,0,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["23: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-6.45946216583252 ,-5.171875953674316,-6.513020038604736,
 -6.385297775268555,-6.404301166534424,-4.703415870666504,
 -3.02744197845459 ,-6.50599479675293 ,-5.651820659637451,
  3.39989185333252 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p23=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p23.pdf", p23];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.004803,0,0.167860,0,0.229476,0,0.251864,0,0.278113,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.634019,0,0.844467,0,0.694618,0,0.559684,0,0.488798,0,0.515099,0,0.632308,0,0,0.131498,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.405003,0,0.050675,0,0,0.301264,0,0.385488,0,0.059502,0.543523,0,0.078461,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.126990,0.616381,0,0.408952,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.269920,0.130363,0,0.607032,0,0.573414,0,0.512445,0,0.249205,0,0,0.121828,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.030814,0.683547,0,0.638893,0,0.315997,0,0,0.045643,0.105277,0,0.513593,0,0.620626,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.166269,0,0,0.133757,0,0.404199,0,0.478801,0,0.460831,0.147320,0,0.793557,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.100985,0,0.008239,0,0.184705,0,0.363668,0,0.449738,0,0.209073,0.582017,0,0.504892,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.335631,0,0.699709,0,0,0.340125,0,0.285966,0,0.083173,0.559262,0,0.611288,0,0.019651,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.222446,0,0.771518,0,0.628667,0,0.554831,0,0.590338,0,0.552302,0,0.075014,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.259487,0,0.395487,0,0.364652,0,0.130386,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["24: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-9.743810653686523,-7.160383224487305,-7.141263961791992,
  8.260994911193848,-9.688650131225586,-9.696320533752441,
 -9.796645164489746,-9.790343284606934,-8.936168670654297,
 -9.537844657897949];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p24=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p24.pdf", p24];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.200349,0,0.466187,0,0.553801,0,0.483896,0,0.441569,0,0.138191,0,0.504777,0,0.279162,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.506557,0,0.565403,0,0.369414,0,0.455204,0,0.535679,0,0.570618,0,0.748471,0,0.410890,0,0,0.017484,0,0.001330,0,0.000207,0.089892,0,0,0.023288,0,0.114304,0.011115,0,0,0.062526,0,0.308363,0,0.229697,0.306991,0,0.601299,0,0.747432,0,0.192866,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.327282,0.038120,0,0.504602,0,0.614891,0,0.282093,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.024820,0,0.446514,0,0.471944,0,0.340064,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0.135851,0,0.581095,0,0.513356,0,0.334267,0,0,0.274248,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.160789,0.147643,0,0.633922,0,0.627508,0,0.295360,0,0,0.431622,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.386611,0,0.691866,0,0.589287,0,0.269917,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.216008,0,0.899897,0,0.763675,0,0.360040,0,0,0.424580,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0.111428,0,0.878348,0,0.746742,0,0,0.051571,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["25: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-7.248705863952637,-5.504980087280273,-5.504284381866455,
 -5.376562118530273,-2.521308422088623,-7.201215744018555,
 -7.301539897918701, 5.645193099975586,-6.441064357757568,
 -7.042739868164062];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p25=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p25.pdf", p25];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0.470376,0,0.642115,0,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.089279,0,0.695001,0,0.082035,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.140316,0.393699,0,0.139608,0,0,0.352006,0,0.194243,0,0.052210,0.006730,0,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.055983,0,0,0.128737,0,0.145381,0.478237,0,0.351283,0,0.050385,0,0,0.351931,0,0.243686,0,0.014601,0.015849,0,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.007082,0,0.640657,0,0.353636,0,0.320717,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.184626,0.624481,0,0,0.004733,0,0.190312,0,0.249320,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.413939,0,0.360462,0,0,0.430081,0,0.469172,0,0.089821,0.114573,0,0,0.043099,0,0.058069,0.002759,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.087093,0,0.689799,0,0,0.179836,0.053644,0,0.454532,0,0.458777,0,0.639477,0,0.680811,0,0.689066,0,0.273910,0,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.277446,0,0.703525,0,0.248628,0,0.627508,0,0.354183,0,0.424261,0,0.585938,0,0.207833,0,0,0.036138,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.031709,0,0.562454,0,0.589287,0,0.517956,0,0.283494,0,0.139654,0,0,0.131849,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["26: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-2.905385732650757,-4.244990348815918,-4.244294166564941,
 -2.831221580505371,-1.107655048370361,-4.143245697021484,
  2.58092212677002 ,-4.237268924713135,-3.383094787597656,
 -3.98477029800415 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p26=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p26.pdf", p26];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.123742,0,0.472613,0,0.692060,0,0.508505,0,0.091924,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.120239,0.337755,0,0.553801,0,0.484876,0,0.353334,0,0.628387,0,0.278306,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.123835,0.528148,0,0.272355,0,0,0.183031,0,0.382948,0.574540,0,0.228863,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.344879,0,0.314245,0,0.320874,0,0.298891,0.605221,0,0.257236,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.426586,0.162445,0,0.571754,0,0,0.025750,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.266009,0,0.341846,0,0.435839,0.413120,0,0.248887,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.033155,0,0.361603,0,0.558426,0,0.661341,0,0.576193,0,0.457473,0,0.487208,0,0,0.248758,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.392530,0,0.759799,0,0.149604,0,0,0.060196,0.507901,0,0.515948,0,0.436025,0,0.459468,0,0,0.101971,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.678570,0,0.576807,0,0.222258,0,0.501051,0,0.482662,0,0,0.301800,0,0.340738,0.678935,0,0.366710,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.268949,0,0.896955,0,0.767597,0,0.289452,0,0,0.272620,0,0.409662,0,0.260443,0.280897,0,0.197585,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["27: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-12.973991394042969,-11.963984489440918, 11.363452911376953,
  -1.768586158752441,-12.918830871582031,-11.862240791320801,
 -13.026825904846191,-13.020524024963379,-12.166349411010742,
 -12.768025398254395];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p27=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p27.pdf", p27];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.057630,0.104966,0,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.097559,0,0.422429,0,0.347621,0,0,0.152548,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.195404,0.507560,0,0,0.273724,0,0.019306,0.338621,0,0,0.298990,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.171238,0.539435,0,0,0.266206,0,0.284599,0.476599,0,0,0.283015,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.278743,0.457814,0,0.236443,0,0,0.023645,0.233033,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.166989,0.526781,0,0.446514,0,0,0.237860,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.141880,0,0.513356,0,0,0.102008,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.266078,0.536332,0,0.053203,0,0.295829,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.021640,0,0.224819,0,0,0.315526,0.339654,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.346314,0,0.443067,0,0.467789,0,0,0.010443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.178821,0,0.173476,0,0,0.071575,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["28: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-2.708702802658081,-2.762956857681274,-2.762260913848877,
 -2.634538650512695,-2.653542041778564,-2.661212682723999,
 -2.761537075042725,-2.75523567199707 , 1.959364414215088,
 -2.502737045288086];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p28=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p28.pdf", p28];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0.116454,0,0.679370,0,0.067916,0,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.132289,0.577354,0,0.831054,0,0.319375,0,0,0.015450,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.055022,0.461347,0,0.423922,0,0.170543,0,0.790071,0,0.087986,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.048233,0.020890,0,0,0.379026,0,0.336244,0.666118,0,0.045203,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0,0.403793,0.027770,0,0.592530,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0.411950,0,0.329152,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.072971,0,0.084100,0,0.178754,0,0.384003,0,0.545643,0,0.200605,0.570456,0,0,0.000943,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0.207300,0,0.747861,0,0.615524,0,0.604505,0,0.306439,0,0.474232,0,0.366297,0,0.525443,0,0.432614,0,0.248458,0,0.007693,0,0,0.011384,0,0.000181,0,0.000037,0.409973,0,0.708216,0,0.095093,0,0.102545,0,0.194706,0,0.568685,0,0.377713,0,0,0.034563,0.224174,0,0.696069,0,0.323666,0,0,0.008753,0,0.000282,0,0.000004,0.020035,0,0.358962,0,0.578768,0,0.463434,0,0.267718,0,0,0.109495,0,0.484153,0,0.440738,0,0.264202,0,0.069564,0,0.024613,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["29: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-6.775813102722168,-8.761292457580566, 7.096500873565674,
 -5.97598934173584 ,-8.651878356933594,-8.659548759460449,
 -8.759873390197754,-8.753571510314941,-7.899397373199463,
 -8.501072883605957];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p29=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p29.pdf", p29];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.112348,0,0.196764,0,0.344467,0,0.194618,0,0.059684,0,0,0.011202,0,0.109411,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.287814,0,0.593238,0,0.237930,0,0.073246,0,0.051766,0,0.127753,0,0.543523,0,0,0.233303,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.132638,0.596207,0,0,0.139877,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.175606,0.512445,0,0,0.125305,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.294663,0.479787,0,0,0.110917,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.166056,0.539169,0,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.050262,0,0.416418,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.020428,0.310242,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.278573,0,0.552302,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.380386,0,0.930460,0,0.162907,0,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0.175389,0,0.368466,0,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["30: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-6.235372543334961,-3.764497518539429,-3.534382820129395,
 -5.22852611541748 ,-5.069278240203857,-5.721541404724121,
 -6.288206577301025, 3.344765663146973,-5.427731037139893,
 -3.149865627288818];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p30=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p30.pdf", p30];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.158161,0.435061,0,0.601216,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.141221,0.782228,0,0.028182,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.179695,0,0.214900,0,0.434992,0,0.392752,0.413756,0,0.291608,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.257512,0.425709,0,0.049481,0,0,0.320874,0.135423,0,0.437574,0,0,0.194725,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.083540,0.431060,0,0.490167,0,0,0.298851,0,0.166782,0.456562,0,0,0.198834,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.556441,0,0.675704,0,0.596736,0,0.160115,0,0.367102,0,0.362140,0,0.196926,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.002779,0,0,0.000397,0.097615,0,0.470311,0,0.418258,0,0.156816,0,0,0.061503,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.185686,0.610842,0,0,0.292876,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.136345,0,0.195407,0,0,0.519447,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.377687,0,0.049929,0,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["31: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-14.24705696105957 ,-14.827837944030762, -8.95534610748291 ,
 -14.172892570495605, 12.745237350463867,-14.726094245910645,
 -13.773364067077637, -8.948320388793945,-13.9659423828125  ,
 -14.567618370056152];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p31=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p31.pdf", p31];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.117298,0,0.148519,0,0.224630,0,0.013163,0.014118,0,0.106818,0,0,0.043263,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.236375,0,0.566361,0,0.565403,0,0.481178,0,0.435596,0,0.414111,0,0.457873,0,0.741608,0,0.324615,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.365928,0,0.870991,0,0.425821,0,0,0.148801,0,0.207382,0,0.230678,0,0.128303,0,0.353603,0.297432,0,0.516395,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.629593,0,0.850774,0,0.427139,0,0.215657,0,0.408992,0,0.435178,0,0.504602,0,0.115872,0,0,0.095358,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.266207,0,0.688794,0,0.658056,0,0.424187,0,0.315997,0,0.261220,0,0.471944,0,0.218495,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0.003552,0,0.531326,0,0,0.002680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.133595,0,0.502692,0,0,0.186611,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.096239,0,0.473968,0,0,0.201457,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.072691,0,0.708184,0,0.073053,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.545092,0,0.753009,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0.282251,0,0.265525,0,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["32: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-2.850748300552368,-2.905002355575562,-2.904306411743164,
 -2.776584148406982,-2.795587539672852,-2.066482782363892,
 -2.903582572937012,-2.897281169891357,-2.043107032775879,
  1.499734401702881];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p32=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p32.pdf", p32];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.039404,0.393038,0,0.709036,0,0.241240,0,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.070937,0,0.048540,0,0,0.098159,0.333896,0,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.165881,0.374812,0,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0.162226,0,0.227165,0,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.445267,0,0,0.143253,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.109481,0,0.504232,0,0,0.152506,0,0.385899,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0.014282,0,0.197762,0,0.288846,0,0.442110,0,0,0.253660,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.296797,0.537006,0,0,0.186611,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.461456,0,0.041996,0.362203,0,0,0.213221,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.320352,0.134243,0,0.458965,0,0,0.180051,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["33: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-2.63526463508606 ,-1.119240522384644,-2.402326107025146,
  1.152449131011963,-2.580103874206543,-2.587774515151978,
 -2.688098907470703,-2.681797504425049,-1.82762336730957 ,
 -2.429298877716064];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p33=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p33.pdf", p33];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.067210,0,0.655694,0,0.807744,0,0.619821,0,0,0.095034,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.103626,0,0.371918,0,0,0.120088,0,0.006003,0.233896,0,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0.525792,0,0,0.380007,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.173068,0.645793,0,0,0.324381,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.138404,0,0.569492,0,0.384013,0,0,0.089030,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0,0.246684,0.438103,0,0,0.135256,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.302222,0,0.071988,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.194514,0,0.213137,0,0.363668,0,0.449738,0,0.357112,0.503585,0,0,0.096088,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.183625,0.233404,0,0,0.214397,0,0.022389,0.466124,0,0.253445,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.038980,0.457773,0,0.470730,0,0.103282,0,0,0.110280,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["34: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-0.778489828109741,-0.832743883132935,-3.361696720123291,
  1.825323104858398,-3.252977848052979,-0.730999708175659,
 -3.360972881317139,-3.354671478271484,-2.500497341156006,-3.1021728515625  ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p34=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p34.pdf", p34];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.443332,0,0.091855,0,0.339811,0,0.326441,0,0.066235,0.322654,0,0.534477,0,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.397820,0.207324,0,0.179126,0,0.133462,0,0.243456,0,0.323902,0,0.221297,0,0,0.003970,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.231685,0.137226,0,0,0.102772,0,0.426586,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.279625,0,0.249677,0,0.087566,0,0,0.373094,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.364003,0.139826,0,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.216662,0,0,0.167063,0.001569,0,0.211822,0,0,0.247778,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.267003,0,0.321277,0,0,0.019537,0,0.445770,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["35: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-5.459064483642578,-5.51331901550293 ,-5.512622833251953,
 -5.384900569915771,-5.403903961181641, 3.949575185775757,
 -5.511898994445801,-5.505597591400146,-4.651423454284668,
 -5.253098964691162];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p35=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p35.pdf", p35];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0.060288,0,0.792925,0,0.414664,0,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.187042,0.445162,0,0.490099,0,0.001643,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.045218,0.479974,0,0,0.269215,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.394401,0.466472,0,0.163047,0,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.102180,0,0.626932,0,0,0.113031,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.286587,0.485265,0,0.382522,0,0,0.426586,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.062958,0,0.631050,0,0.011095,0,0,0.150545,0.048414,0,0.178299,0,0,0.049962,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.321171,0,0.670164,0,0.554625,0,0.515317,0,0.531326,0,0.639477,0,0.349439,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.231957,0,0.681961,0,0.628489,0,0.544379,0,0.533084,0,0.483978,0,0,0.036284,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.170879,0.267718,0,0.393446,0,0.231533,0,0,0.107405,0,0.194594,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["36: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[ -9.823434829711914,-12.316962242126465,-12.316267013549805,
  -9.749270439147949, -8.83551025390625 , -7.25303840637207 ,
  10.652894020080566,-12.30924129486084 ,-11.455066680908203,
 -12.056742668151855];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p36=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p36.pdf", p36];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.391297,0,0.178850,0,0.357450,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.246362,0.357649,0,0.481675,0,0,0.186870,0,0.421539,0,0.016235,0.547164,0,0.163888,0,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.090527,0,0.506101,0,0.576931,0,0,0.122835,0,0.369479,0.134633,0,0.710177,0,0.210513,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.002142,0,0.441951,0,0.654590,0,0.515657,0,0,0.155713,0,0.306978,0.262445,0,0.603127,0,0.251701,0,0.094630,0,0.215556,0,0,0.000064,0,-0.000000,0,0.000755,0.437775,0,0.831931,0,0.671782,0,0.627128,0,0.325801,0,0.367102,0,0.468022,0,0.612613,0,0.699057,0,0.826244,0,0.158641,0,0,0.000105,0,0.000005,0,0.001523,0.129234,0,0.372387,0,0.395681,0,0.626047,0,0.585997,0,0.506493,0,0.129365,0,0.078693,0,0.033753,0,0,0.034464,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.140592,0.604510,0,0.575548,0,0,0.186993,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.360493,0,0.585365,0,0,0.029103,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.655832,0,0.339452,0,0,0.385365,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.017330,0,0,0.090787,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["37: 4 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-3.350514650344849,-3.404768705368042,-3.404072761535645,
 -3.276350498199463,-2.687964916229248,-3.303024530410767,
  1.534704089164734,-3.397047519683838,-2.542873382568359,
 -3.144548892974854];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p37=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p37.pdf", p37];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0.029189,0,0.366230,0,0.679223,0,0.730293,0,0.545311,0,0,0.187191,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.494701,0,0.457548,0,0.123878,0,0,0.252441,0.148899,0,0,0.402379,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.192440,0.358629,0,0,0.434992,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.092806,0.493356,0,0,0.045618,0,0.320874,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.083540,0.602629,0,0.601932,0,0.348208,0,0.170472,0,0,0.057163,0,0.171383,0,0.177711,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.161551,0,0.087577,0,0.065376,0,0.170153,0.183708,0,0.542024,0,0.668665,0,0.018401,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.341895,0.544537,0,0.441027,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.232749,0,0.310196,0,0.363668,0,0.449738,0,0.459073,0,0.334650,0.537245,0,0.301117,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.148683,0.392846,0,0,0.260713,0,0.401652,0,0.365526,0,0.083876,0.523053,0,0.433377,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.073633,0.473479,0,0.550236,0,0.546988,0,0.437397,0,0.483675,0,0.291681,0,0,0.028886,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["38: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-1.823482275009155,-1.877736330032349,-4.594925403594971,
  1.360927581787109,-2.788582324981689,-1.775992155075073,
 -4.594201564788818,-4.587900161743164,-3.733726024627686,
 -4.33540153503418 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p38=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p38.pdf", p38];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.183234,0,0.446291,0,0.722613,0,0.629315,0,0.134976,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.124859,0,0.671089,0,0.547919,0,0.174092,0,0,0.014313,0.587210,0,0,0.051106,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.058518,0,0.222266,0,0,0.080586,0,0.396757,0,0.429026,0.500030,0,0.013177,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0,0.380264,0.516005,0,0.041550,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.426586,0,0.395398,0.611950,0,0.026211,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.264493,0,0.024832,0.099330,0,0,0.059368,0,0.005507,0.568495,0,0,0.163688,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.009966,0.622152,0,0.398596,0,0.109527,0,0.342767,0,0.527404,0,0.266928,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.620583,0,0.248623,0,0,0.310196,0,0.363668,0.149281,0,0.529163,0,0.566330,0,0.236265,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.739552,0,0.046768,0,0,0.138164,0.229721,0,0.411925,0,0,0.146621,0.246583,0,0.793181,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.337152,0,0.722499,0,0.598275,0,0.233263,0,0,0.232211,0,0.260443,0,0.112241,0.078957,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["39: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-7.909629821777344,-4.297660827636719, 6.299091815948486,
 -6.778757572174072,-7.854468822479248,-4.195917129516602,
 -7.962463855743408,-7.956162452697754,-7.101988315582275,
 -7.70366382598877 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p39=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p39.pdf", p39];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.105382,0.446939,0,0.453503,0,0.075883,0,0,0.345143,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.168933,0.456580,0,0.184119,0,0,0.059502,0.424895,0,0.160814,0,0,0.241725,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.096656,0.451311,0,0.448258,0,0,0.179931,0,0.320874,0,0.107715,0.597378,0,0,0.174137,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.091951,0,0.655570,0,0,0.018656,0,0.330223,0,0.426586,0,0.163045,0.597244,0,0,0.146338,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.150422,0,0.139983,0,0.355224,0,0.434003,0,0.545643,0.188610,0,0.220456,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.104291,0.476424,0,0,0.230131,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.411046,0,0.018378,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.079103,0.381533,0,0,0.304464,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.344862,0.446008,0,0.124652,0,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.035885,0.825436,0,0.311759,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["40: 7 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.757454872131348,-4.798661231994629,-4.590452194213867,
 -5.683290481567383,-5.649203300476074,-5.082991600036621,
 -5.810288906097412,-2.104766845703125,-4.949813365936279,
  0.707220017910004];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p40=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p40.pdf", p40];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0.198831,0,0.377352,0,0.246291,0,0.137319,0,0,0.091273,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.415055,0,0.683834,0,0.542037,0,0.309386,0,0.431765,0,0.225445,0,0,0.189341,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.298322,0,0.448233,0,0.128129,0.454307,0,0.538265,0,0,0.102509,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.380173,0,0.050519,0.600695,0,0.552089,0,0,0.022230,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0.009775,0,0.661934,0,0.426355,0,0,0.315006,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.310126,0.167958,0,0.305337,0,0.036650,0,0,0.332485,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.471938,0,0.153968,0.351242,0,0,0.178012,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.021941,0,0,0.000005,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0,0.178680,0.636919,0,0.039206,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.388374,0,0.502297,0,0,0.300291,0,0.402870,0,0.474201,0.019768,0,0.536713,0,0.687759,0,0.025534,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.032675,0,0.609701,0,0.343087,0,0.377687,0,0.455812,0,0.537397,0,0.482694,0,0.052465,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.012662,0,0.240860,0,0.294507,0,0.239162,0,0,0.018634,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["41: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-17.744470596313477, -9.427705764770508,-13.128522872924805,
  16.261653900146484,-17.689310073852539,-17.530637741088867,
 -17.797304153442383,-17.79100227355957 ,-16.93682861328125 ,
 -17.538505554199219];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p41=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p41.pdf", p41];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.093769,0.415206,0,0.369488,0,0.241739,0,0.383726,0,0.385249,0,0.558698,0,0.685045,0,0.514574,0,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.023630,0,0.401655,0,0.435991,0,0.310590,0,0.290498,0,0.439601,0,0.472579,0,0.650432,0,0.752066,0,0.652124,0,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.753343,0,0.673860,0,0.264925,0,0,0.314245,0,0.320874,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.848813,0,0.633021,0,0.058794,0,0,0.311596,0,0.426586,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.261343,0,0.570802,0,0.627128,0,0.513056,0,0.228867,0,0,0.293743,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.247456,0,0.084738,0.035997,0,0.396689,0,0.532306,0,0.151242,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.140201,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0.183084,0,0.615350,0,0.010774,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.448376,0,0,0.094409,0,0.402870,0,0.474201,0,0.417487,0.337693,0,0.724033,0,0.068671,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.507740,0,0.572499,0,0.289452,0,0.316596,0,0.552103,0,0.675831,0,0.338740,0,0,0.019082,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.145015,0,0.597722,0,0.646468,0,0.514652,0,0.171563,0,0,0.036206,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["42: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-12.961082458496094,-15.083245277404785,-15.082550048828125,
 -12.886918067932129,-14.973831176757812, 13.519501686096191,
 -15.081826210021973,-13.007615089416504,-14.221349716186523,
 -14.823025703430176];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p42=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p42.pdf", p42];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.144885,0.227515,0,0.123432,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.314826,0.477033,0,0.254314,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.129606,0.553243,0,0.282738,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0.140657,0,0.671283,0,0.220717,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.410953,0,0.561649,0,0,0.056183,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.349342,0.355213,0,0.446514,0,0,0.242762,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.259247,0.580115,0,0.404532,0,0,0.407890,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.247450,0.620646,0,0.468889,0,0,0.382602,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.340125,0.514034,0,0.471729,0,0,0.318189,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.308587,0.539145,0,0.496220,0,0,0.191816,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.092748,0.184260,0,0.281366,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["43: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-3.763317346572876, 2.1520836353302  ,-2.340855598449707,
 -3.68915319442749 ,-3.708156585693359,-3.715827226638794,
 -2.30734395980835 ,-3.809850215911865,-2.955676078796387,
 -3.557351589202881];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p43=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p43.pdf", p43];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.507281,0,0.407450,0.069563,0,0.276345,0,0,0.061034,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.028010,0,0.001081,0,0,0.188541,0,0.166950,0,0.053135,0.333635,0,0.535679,0,0.570618,0,0.748471,0,0.185399,0,0,0.017484,0,0.001330,0,0.000207,0.006558,0,0.806124,0,0.877853,0,0.645429,0,0.588454,0,0.679873,0,0.671283,0,0.588364,0,0.601299,0,0.725863,0,0.087964,0,0,0.010833,0,0.000623,0,0.000061,0.188813,0,0.882535,0,0.850774,0,0.491845,0,0.213696,0,0.062914,0,0,0.152077,0.227151,0,0.615872,0,0.293858,0,0,0.066155,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.004382,0,0.109246,0,0.310571,0,0.361107,0,0.434003,0,0.193682,0.465081,0,0.591044,0,0,0.127413,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0.192767,0,0.534267,0,0.339477,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.287197,0.502222,0,0.505633,0,0,0.165042,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0.083642,0,0.471729,0,0.158281,0,0,0.247535,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.472478,0,0.582495,0,0.196420,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.035240,0,0.398033,0,0.197127,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["44: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-10.627717971801758,-10.438216209411621, -5.844048500061035,
 -10.553553581237793, -6.9028000831604  ,-10.580227851867676,
 -10.68055248260498 ,  9.024205207824707, -9.820075988769531,
 -10.421751976013184];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p44=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p44.pdf", p44];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0.124321,0,0,0.105001,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0.299255,0,0.055288,0,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.407548,0,0.837604,0,0,0.175970,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0.277326,0,0.739947,0,0.049868,0,0,0.000977,0,0.000234,0,0.003641,0.023108,0,0.884415,0,0.521263,0,0,0.364009,0,0.448233,0,0.434992,0,0.456477,0,0.375460,0.696510,0,0.338341,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.221810,0,0.677853,0,0,0.298689,0,0.399781,0,0.314245,0,0.320874,0,0.403793,0.197378,0,0.721942,0,0.049729,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.124691,0,0.832147,0,0,0.262077,0,0.369637,0,0.330223,0,0.372665,0,0.077751,0.597244,0,0.222289,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.706441,0,0.485507,0,0.266344,0,0.193448,0,0.351416,0,0.475865,0,0.285162,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.029574,0.239799,0,0.328988,0,0.144821,0,0.187866,0,0.481326,0,0,0.243856,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.263668,0.499281,0,0.044849,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0.065995,0,0.418788,0,0,0.199562,0,0.215182,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.074439,0,0.587397,0,0.616028,0,0,0.033809,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.002995,0.349994,0,0.027519,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["45: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-3.053483247756958,-4.410515785217285,-3.107041358947754,
 -4.357226371765137, 2.779314517974854,-3.005993127822876,
 -3.106317520141602,-4.327666282653809,-3.623749256134033,
 -4.150296211242676];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p45=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p45.pdf", p45];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.211264,0.137135,0,0.195660,0,0.327844,0,0.435249,0,0.283208,0,0,0.000249,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.201286,0.406580,0,0.371374,0,0,0.067345,0,0.406477,0,0.412715,0.009255,0,0.708929,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.002292,0,0.568846,0,0.280853,0,0.104616,0,0.391305,0,0,0.373211,0,0.215313,0,0.017918,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.085606,0,0.044147,0,0.330223,0,0.426586,0.202641,0,0,0.254716,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0.169983,0,0,0.055035,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0.229365,0,0,0.128170,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.248435,0,0.253333,0,0.363668,0,0.346797,0.348770,0,0,0.315042,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.187944,0,0,0.301890,0,0.468319,0.144278,0,0.036713,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.545048,0,0,0.279176,0.164635,0,0.316809,0,0,0.243776,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.714389,0,0.859213,0,0.374456,0,0,0.104908,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["46: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-1.6202552318573  ,-1.88849663734436 ,-1.40057384967804 ,
 -1.546091079711914,-1.711285591125488,-0.649700880050659,
 -1.8870769739151  ,-0.692334115505219,-1.026601314544678,
 -1.628276824951172];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p46=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p46.pdf", p46];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.641720,0,0.848831,0,0.628332,0,0.401193,0,0.403985,0,0.152844,0,0,0.142475,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.049315,0,0.149651,0,0.305382,0,0.440316,0,0.509242,0,0.072156,0.062700,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.434992,0,0.073144,0.343167,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.295384,0.343266,0,0,0.066348,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0.219492,0,0.262445,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.158513,0.372004,0,0,0.380017,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.147483,0.486978,0,0,0.225860,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.198435,0.555491,0,0.195156,0,0,0.449738,0,0.459073,0,0.355238,0,0.182363,0,0.038098,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.260493,0,0.410855,0,0,0.287926,0,0.193957,0.122007,0,0.480896,0,0.586318,0,0.256759,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.154852,0,0.543373,0,0.380322,0,0.304063,0,0.093479,0,0,0.070084,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["47: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-6.599186897277832,-5.832439422607422, 5.662570953369141,
 -3.094421863555908,-7.365448951721191,-4.733543395996094,
 -7.473443984985352,-7.467142581939697,-6.612968444824219,
 -7.214643955230713];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p47=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p47.pdf", p47];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.021668,0.358056,0,0.628495,0,0.745981,0,0.834976,0,0.892905,0,0.031608,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.280741,0,0.673050,0,0.551841,0,0.323111,0,0.048432,0,0.084269,0,0.073404,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.054801,0.545773,0,0.446776,0,0,0.157057,0,0.416364,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.272951,0,0.677782,0,0,0.237036,0,0.314245,0,0.320874,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.397833,0,0.659492,0,0.248010,0,0.054091,0,0,0.042273,0,0.103242,0,0.140010,0,0.093397,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.080951,0,0.368841,0,0.529089,0,0.456193,0,0.344553,0,0.369983,0,0.561632,0,0.762783,0,0.383107,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.282092,0.688655,0,0.903772,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.136279,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0,0.237504,0.298683,0,0.807833,0,0.414843,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.715042,0,0.440885,0,0.132424,0,0.097368,0,0.269768,0,0.522987,0,0.713249,0,0.430436,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.132250,0,0.434263,0,0.539452,0,0.546988,0,0.486416,0,0.301322,0,0,0.015182,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["48: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-5.347929000854492,-8.426953315734863,-8.426258087158203,
 -5.273764610290527,-7.953400135040283, 6.134932518005371,
 -7.697256565093994,-5.394461631774902,-7.56505823135376 ,
 -8.166733741760254];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p48=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p48.pdf", p48];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.146959,0,0.600213,0,0.268691,0,0,0.087352,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.358344,0,0.550860,0,0.481935,0,0.494510,0,0.155838,0,0,0.190321,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.203247,0.491874,0,0.547845,0,0.501283,0,0.077836,0,0.232383,0,0,0.073098,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.140527,0,0.592376,0,0.681833,0,0.007558,0,0,0.403793,0,0.083015,0.004295,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.190864,0,0.626442,0,0.665855,0,0.004786,0,0,0.100300,0,0.251775,0,0.168887,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.235081,0.452619,0,0.562075,0,0.450436,0,0.475865,0,0.301828,0,0,0.176433,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.012189,0.591880,0,0.253552,0,0,0.030439,0.561046,0,0.160223,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0.335883,0,0.592214,0,0,0.406601,0,0.459073,0.241821,0,0.318617,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.283625,0.500071,0,0.521877,0,0.174670,0,0.137693,0,0.465210,0,0,0.044074,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.074274,0.436204,0,0.442299,0,0.341518,0,0,0.020084,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["49: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-2.212623834609985,-2.266877889633179,-2.266181945800781,
 -2.1384596824646  ,-2.157463073730469,-2.165133714675903,
 -2.265458106994629,-2.259156703948975, 1.463285446166992,
 -2.00665807723999 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p49=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p49.pdf", p49];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.574574,0,0.745981,0,0.633996,0,0,0.057095,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.293617,0.016546,0,0.449582,0,0.507255,0,0.624465,0,0.222424,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.186580,0.254619,0,0.543923,0,0.557165,0,0.518032,0,0.334344,0,0.501412,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.102539,0.367978,0,0.584533,0,0.161245,0,0.245793,0,0,0.048891,0,0.260466,0.770961,0,0.120317,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.269402,0,0.659492,0,0.148991,0,0,0.330223,0,0.426586,0,0.487555,0,0.254716,0.807583,0,0.316198,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.008303,0.632911,0,0.527664,0,0,0.348362,0,0.434003,0,0.545643,0,0.520213,0.016534,0,0.800038,0,0.051735,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.335116,0,0.839054,0,0.158426,0,0,0.321993,0,0.404199,0,0.478801,0,0.450047,0.352222,0,0.714145,0,0,0.017797,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.340569,0,0.828427,0,0.025094,0,0,0.310196,0,0.363668,0,0.345817,0.056614,0,0.636919,0,0.434304,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.171707,0,0.782689,0,0.642846,0,0.410855,0,0.249328,0,0.445258,0,0.544556,0,0.352465,0,0,0.073486,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.126367,0,0.335244,0,0.612001,0,0.317576,0,0.116809,0,0,0.156521,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["50: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[  9.985483169555664,-11.59671688079834 ,-11.59602165222168 ,
 -11.46829891204834 ,-11.487302780151367,-11.494973182678223,
 -11.595297813415527,-11.588995933532715,-10.734821319580078,
 -11.33649730682373 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p50=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p50.pdf", p50];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.318748,0.106445,0,0.319020,0,0.476426,0,0.188110,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.248345,0.056580,0,0.439021,0,0,0.039894,0,0.408438,0,0.417617,0,0.220156,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.085625,0,0.447278,0,0,0.124049,0,0.320874,0,0.286146,0.212084,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.459492,0,0.215657,0,0.104091,0,0.294982,0,0.499700,0,0.481558,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.257076,0,0.525168,0,0.215017,0,0,0.211329,0.318022,0,0,0.016799,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.402238,0.165317,0,0.245051,0,0,0.322288,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.027394,0.542418,0,0,0.346328,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.321498,0.463054,0,0,0.055722,0,0.439758,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.217697,0.296315,0,0.297969,0,0,0.393976,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.378115,0,0.821958,0,0,0.012799,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["51: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.984785079956055,-3.41680645942688 ,-6.03834342956543 ,
 -5.910621166229248,-5.929624557495117,-5.937294960021973,
 -4.502764701843262,-6.031318187713623,-5.177144050598145,
  4.633771419525146];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p51=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p51.pdf", p51];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.219107,0,0.284434,0.241739,0,0.379804,0,0,0.120633,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.158149,0,0.170871,0,0.140390,0,0.180090,0,0.105497,0,0.243107,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0.160913,0,0,0.373211,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.355998,0,0.076771,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.407532,0,0.177015,0,0.330998,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.274787,0.229042,0,0,0.443184,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.053864,0,0.125229,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.333262,0,0.014397,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.009568,0,0.374580,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.068311,0,0.747448,0,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["52: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-1.638407945632935,-0.862645864486694,-1.12553608417511 ,
 -1.020185470581055,-1.575716972351074,-1.590917825698853,
 -1.691242337226868,-0.537020146846771,-0.830766618251801,
 -0.860526621341705];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p52=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p52.pdf", p52];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.360905,0,0.020026,0.311177,0,0.520543,0,0.407718,0,0,0.034563,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.234597,0.431178,0,0.444420,0,0.045483,0,0.092187,0,0.654353,0,0.273635,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.107441,0.091507,0,0.565905,0,0.354382,0,0,0.226756,0,0.403793,0,0.328113,0.717040,0,0.355611,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.393911,0,0.625178,0,0,0.000029,0,0.330223,0,0.426586,0,0.108143,0.454107,0,0.772289,0,0.389728,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.011305,0,0.816245,0,0.140409,0,0,0.361107,0,0.391846,0.019063,0,0.452336,0,0.472416,0,0,0.008786,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.001783,0,0.821406,0,0.565289,0,0.465262,0,0.569331,0,0.345709,0,0.529365,0,0,0.058562,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.028427,0,0.099604,0,0,0.021960,0,0.252884,0.007124,0,0.473280,0,0,0.302297,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.288907,0.460945,0,0,0.128974,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.094047,0,0.533475,0,0,0.145737,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.597986,0,0.448033,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["53: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.243070602416992,-5.297324180603027,-5.296628475189209,
 -5.168906211853027,-5.187909603118896,-5.19558048248291 ,
 -5.295904636383057,-5.289603233337402,-4.435429096221924,
  3.892056465148926];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p53=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p53.pdf", p53];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.014205,0.475370,0,0.406445,0,0,0.366274,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.073835,0.511482,0,0.524316,0,0.552263,0,0,0.249615,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.036853,0.541507,0,0.584533,0,0.046539,0,0.429126,0,0.176599,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.259598,0,0.655570,0,0.618598,0,0.592326,0,0.538120,0,0.366366,0,0,0.213540,0,0.001240,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.117225,0,0.456096,0,0.416344,0,0.380703,0,0.383769,0,0.468022,0,0.626338,0,0.657881,0,0,0.039442,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.056252,0.529365,0,0.090457,0,0.418066,0,0.049850,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.225229,0.360535,0,0,0.352297,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.453761,0.547497,0,0,0.244594,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.342995,0.727792,0,0.116191,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.110790,0.789284,0,0.351143,0,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["54: 4 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-8.824224472045898,-6.750362396240234,-8.877782821655273,
 -8.416996955871582,-4.81642484664917 ,-7.150742530822754,
 -8.877058982849121,-8.870757102966309,-8.016582489013672,
  3.187508583068848];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p54=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p54.pdf", p54];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.121505,0,0.027548,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0.010366,0,0.175883,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0.283635,0,0.064111,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0.588930,0,0,0.131244,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.107674,0.547923,0,0,0.384614,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.069297,0.166122,0,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.435997,0,0,0.077821,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.167058,0.525548,0,0,0.409542,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.177522,0,0.280701,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.180628,0,0.201890,0,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.115095,0,0,0.044171,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["55: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-4.702299118041992, 1.870804071426392,-3.675524711608887,
 -3.547802448272705,-4.647138118743896,-4.514880180358887,
 -1.981620907783508,-2.588167190551758,-3.894657611846924,
 -4.496333122253418];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p55=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p55.pdf", p55];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.011328,0,0.604713,0,0.334214,0,0.281585,0,0.097123,0,0,0.190293,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.020883,0.705251,0,0.627952,0,0.537135,0,0.449582,0,0.456275,0,0.099955,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.299303,0,0.275684,0.009126,0,0.517052,0,0.537285,0,0,0.124078,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.377232,0,0.132872,0.301675,0,0.581501,0,0.582672,0,0,0.027078,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.005570,0,0.530363,0,0.658012,0,0.563610,0,0.482053,0,0,0.055697,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.108610,0.443795,0,0.455213,0,0.447494,0,0.469983,0,0.376338,0,0,0.148982,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.385571,0,0.243507,0.365639,0,0.635556,0,0.247478,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.107838,0,0.015290,0,0,0.310196,0,0.363668,0,0.449738,0,0.339465,0.632997,0,0.328421,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.185631,0,0.666375,0,0.366738,0,0.043446,0,0.025651,0,0.406321,0,0.724033,0,0.338279,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.008773,0,0.337491,0,0.468557,0,0.552103,0,0.605243,0,0.314230,0,0,0.026925,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["56: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-6.825850486755371,-4.108776092529297,-5.298794746398926,
  5.343034744262695,-6.770689487457275,-6.778360366821289,
 -6.878684520721436,-6.872383117675781,-6.018208980560303,
 -6.619884490966797];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p56=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p56.pdf", p56];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0.046087,0,0.446562,0,0.091944,0,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.109903,0.537468,0,0.594181,0,0.361668,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.053421,0.308703,0,0,0.471987,0,0.081960,0,0.180437,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.081089,0,0.055688,0,0,0.297737,0.358229,0,0,0.289186,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.009585,0.492618,0,0.329126,0,0.113854,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.317676,0.617816,0,0.544002,0,0,0.383634,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.312423,0,0.385605,0,0.313181,0,0.078806,0,0,0.359936,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.009221,0.540753,0,0,0.329689,0,0.403311,0.388188,0,0,0.122288,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.189800,0,0.393726,0,0,0.134256,0,0.319346,0.267398,0,0.091821,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.005193,0.560855,0,0.518936,0,0.471729,0,0.495536,0,0,0.059300,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.284078,0,0.086345,0.025632,0,0,0.174169,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["57: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-0.778489828109741,-0.832743883132935,-0.832048058509827,
 -0.704325675964355,-0.723329126834869,-0.730999708175659,
 -0.831324219703674,-0.825022637844086, 0.029151486232877,
 -0.572524130344391];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p57=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p57.pdf", p57];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.135774,0,0.292277,0,0.341595,0,0.186862,0.050936,0,0,0.144243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.211090,0.419325,0,0.475296,0,0.528733,0,0.535679,0,0.570618,0,0.192589,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.104253,0,0.588454,0,0.668108,0,0.572263,0,0.578560,0,0.601299,0,0.260177,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.242469,0.464677,0,0,0.103753,0,0.376586,0.396758,0,0.526656,0,0,0.135554,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.221891,0,0.434003,0,0.027015,0.471944,0,0,0.005035,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.153218,0.484924,0,0.083287,0,0,0.342876,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.260196,0.501038,0,0.413987,0,0,0.410053,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.015757,0,0.488544,0,0,0.292977,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.506118,0,0.248949,0,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.136938,0,0.879801,0,0.679358,0,0.079406,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0.224309,0,0.485653,0,0.114107,0,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["58: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-4.826136589050293,-2.647735834121704,-4.87969446182251 ,
 -4.751972198486328,-4.136975288391113,-4.778646469116211,
 -4.878970623016357, 2.462471961975098,-4.018495082855225,
 -3.860018730163574];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p58=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p58.pdf", p58];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.194054,0.079315,0,0,0.134632,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.271068,0,0.019728,0.319190,0,0.381765,0,0,0.327496,0.217522,0,0.320339,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.006557,0,0.461482,0,0.465492,0,0,0.002639,0,0.429026,0.101010,0,0.744550,0,0.346184,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.297390,0,0.547278,0,0,0.177970,0,0.211070,0.354050,0,0.516986,0,0.106255,0,0,0.070860,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.215018,0.522520,0,0.493306,0,0.467531,0,0.267347,0,0,0.298834,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.037577,0.556193,0,0.444553,0,0.042532,0,0,0.356015,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.163142,0.487811,0,0.334036,0,0.092767,0,0.529365,0,0.005163,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.000396,0.659412,0,0,0.317590,0,0.449738,0.343869,0,0.300644,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.095787,0,0.492228,0,0,0.385966,0.016827,0,0.549458,0,0.054426,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.200050,0.442393,0,0.543067,0,0.578573,0,0.387596,0,0,0.095574,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.005291,0,0.190142,0,0.112739,0,0,0.055814,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["59: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-4.391012191772461,-4.445266723632812,-4.444570541381836,
 -4.316848278045654,-4.335851669311523,-4.343522071838379,
 -4.443846702575684,-4.437545299530029, 3.641674041748047,
 -4.185046672821045];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p59=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p59.pdf", p59];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.158760,0.029315,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.245218,0.377033,0,0.266079,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.204205,0.551767,0,0.315008,0,0.348425,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.290415,0,0.380853,0,0.012460,0,0.264834,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.026783,0.630363,0,0,0.218459,0.129296,0,0.152641,0,0,0.347854,0,0.156142,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.267860,0,0.583011,0,0.316977,0,0.425926,0,0.479787,0,0.609671,0,0.196116,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.007446,0,0.649576,0,0.539919,0,0.521199,0,0.177404,0,0,0.212484,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.170000,0,0.306805,0.550262,0,0,0.290445,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.169299,0.367807,0,0,0.384856,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.140267,0.286416,0,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.106916,0.157837,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["60: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-8.62413215637207 ,-8.678386688232422,-8.677690505981445,
 -8.549968719482422, 0.046828210353851,-8.576642036437988,
 -6.046032428741455,-8.67066478729248 ,-7.81649112701416 ,
 -1.342681407928467];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p60=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p60.pdf", p60];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.052441,0.004782,0,0,0.239634,0,0.356470,0,0.354947,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.039115,0.059498,0,0.480109,0,0.200786,0,0.367949,0,0.482738,0,0.378461,0,0,0.004470,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.291579,0,0.389547,0,0,0.203703,0,0.314245,0,0.320874,0,0.120460,0.589535,0,0.136648,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.376586,0.360484,0,0.283519,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.095643,0.434689,0,0,0.326603,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.341454,0.504532,0,0,0.040243,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.077508,0,0.406144,0,0,0.404171,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.371498,0.374819,0,0,0.048859,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.193187,0.343373,0,0.431302,0,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.454585,0,0.695487,0,0,0.001034,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0.336074,0,0.008202,0,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["61: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-8.442831039428711,-6.67619514465332 ,-5.801645278930664,
 -7.575199127197266,-4.176069259643555,-7.99860668182373 ,
 -8.495665550231934, 3.771971702575684,-7.635189533233643,
 -5.962985992431641];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p61=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p61.pdf", p61];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.187042,0.276534,0,0.421472,0,0.751643,0,0.250748,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.303421,0.187135,0,0.477033,0,0.505295,0,0.620543,0,0.370463,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.180109,0,0.541963,0,0.268930,0,0,0.415301,0.264736,0,0.623961,0,0,0.064601,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.213076,0,0.564925,0,0.311245,0,0,0.301266,0,0.403793,0.175809,0,0.774883,0,0.063454,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.061558,0,0.657531,0,0.457814,0,0,0.247870,0,0.426586,0,0.487555,0,0.092952,0.808564,0,0.066198,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.010324,0,0.570166,0,0.630606,0,0,0.139538,0,0.434003,0,0.545643,0,0.520213,0,0.079544,0.798077,0,0.057617,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.102763,0,0.837093,0,0.292740,0,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.336536,0,0.684733,0,0.003772,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.091549,0,0.824505,0,0.425094,0,0,0.270000,0,0.363668,0,0.449738,0,0.255151,0.613389,0,0.301951,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.005744,0.563082,0,0.689905,0,0.425561,0,0.235603,0,0.267807,0,0.552399,0,0.442661,0,0,0.023486,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.050103,0.397009,0,0.576707,0,0.545027,0,0.335436,0,0,0.039855,0,0.092633,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["62: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[  8.703132629394531,-10.314366340637207,-10.313671112060547,
 -10.185948371887207,-10.204952239990234,-10.21262264251709 ,
 -10.312947273254395,-10.306645393371582, -9.452470779418945,
 -10.054146766662598];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p62=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p62.pdf", p62];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0.343040,0,0.529094,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.504340,0.406275,0,0.260740,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.204600,0.535679,0,0.070618,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.303461,0.452656,0,0.534442,0,0,0.293799,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.071400,0.565571,0,0.169308,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.226781,0,0.446514,0,0,0.324135,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.142581,0.573252,0,0.425120,0,0,0.423576,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0.350589,0,0.628489,0,0.136536,0,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.408894,0,0.517956,0,0,0.026310,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.198089,0.411020,0,0.289145,0,0,0.368486,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["63: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-4.93549633026123 , 2.522361516952515,-4.187153339385986,
 -4.059431076049805,-4.880335330963135,-4.888006210327148,
 -3.534426689147949,-3.378227233886719,-4.127854824066162,
 -4.729530334472656];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p63=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p63.pdf", p63];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.018816,0.705783,0,0.540409,0,0,0.088171,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.087735,0.287135,0,0.466249,0,0,0.152548,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0.007165,0,0.479797,0,0,0.312715,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.393899,0,0.206402,0.093832,0,0.590325,0,0.377770,0,0.436648,0,0.508552,0,0.073480,0,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.095410,0.334285,0,0.663894,0,0.567531,0,0.508523,0,0.608029,0,0.776211,0,0.920120,0,0.769478,0,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.285852,0,0.663939,0,0.563403,0,0.185605,0,0.139651,0,0.473904,0,0.170456,0,0,0.139178,0.024284,0,0.399818,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.841014,0,0.514309,0,0,0.176894,0.097762,0,0.497669,0,0.481326,0,0,0.179150,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.832348,0,0.734898,0,0.685883,0,0.630450,0,0.448301,0,0,0.126720,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.150336,0,0.358532,0,0.153012,0,0,0.184005,0,0.455722,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["64: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-7.427242279052734,-7.48149585723877 , 2.635375499725342,
 -7.35307788848877 ,-7.372081279754639,-7.379752159118652,
 -4.298747539520264,-7.473774909973145,-6.619600772857666,
 -7.22127628326416 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p64=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p64.pdf", p64];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.180605,0,0.412809,0,0.632256,0,0.831054,0,0.844865,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.057494,0.408344,0,0.492037,0,0.011347,0,0,0.055490,0.620543,0,0.528306,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.215011,0,0.055185,0,0.417841,0,0.271266,0.176856,0,0.429442,0,0,0.128000,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.116206,0.572263,0,0.365815,0,0,0.276152,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.060813,0.588404,0,0.479296,0,0,0.442457,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.309146,0.162075,0,0.412200,0,0.410179,0,0,0.079544,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0.275928,0,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.392527,0.215639,0,0.586536,0,0.014145,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0.821738,0,0.393510,0,0,0.150985,0,0.259220,0,0.310196,0,0.363668,0,0.440915,0.000731,0,0.629076,0,0,0.035304,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0.094545,0,0.861903,0,0.685631,0,0.020297,0,0,0.265615,0,0.214397,0.210945,0,0.512203,0,0.167171,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.129734,0,0.450877,0,0.616616,0,0.616903,0,0.472478,0,0.209946,0,0,0.073188,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["65: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-14.891988754272461, -9.713723182678223,-14.515195846557617,
  13.409173011779785,-16.887090682983398,-12.794236183166504,
 -16.995084762573242,-14.938521385192871,-16.134609222412109,
 -16.736286163330078];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p65=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p65.pdf", p65];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.527952,0,0.309684,0,0,0.316104,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.126165,0,0.489913,0,0,0.169802,0.315008,0,0.294503,0,0.162775,0,0,0.187803,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.023932,0,0.573860,0,0.013944,0,0,0.314245,0,0.320874,0.012874,0,0.609142,0,0,0.102568,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.005084,0,0.664500,0,0.529100,0,0,0.313755,0,0.330223,0,0.426586,0,0.042457,0.374695,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.053462,0,0.620166,0,0,0.149787,0,0.361107,0,0.434003,0,0.545643,0.396453,0,0,0.028564,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.126894,0.067370,0,0.159434,0,0.539169,0,0.343399,0,0.544537,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.060196,0.192214,0,0.494379,0,0.235045,0,0.088880,0,0.011755,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.335966,0.451141,0,0,0.273091,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.055812,0,0.423671,0,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.308770,0,0.549013,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["66: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-4.053812980651855,-3.221174478530884,-1.718940854072571,
 -3.979649066925049,-2.735310077667236,-4.006322860717773,
 -4.106647491455078, 2.436351299285889,-3.246171951293945,
 -3.847847461700439];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p66=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p66.pdf", p66];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0.181276,0,0.590858,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0.175883,0,0.272504,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.376168,0.462150,0,0.127481,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0.183048,0,0.592286,0,0,0.140858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.255713,0.462629,0,0.349700,0,0,0.364520,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.115997,0,0.450436,0,0,0.087860,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.275914,0.385017,0,0.258454,0,0,0.420635,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.094514,0.401569,0,0.500057,0,0,0.385033,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.160448,0.425199,0,0.453992,0,0,0.352632,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.059907,0.570538,0,0,0.073293,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["67: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-5.510005950927734, 3.699812650680542,-5.364604473114014,
 -5.236882209777832,-5.454844951629639,-5.462515830993652,
 -4.44619083404541 ,-5.15861988067627 ,-4.702364444732666,
 -5.30403995513916 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p67=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p67.pdf", p67];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.122112,0,0.254713,0,0.183234,0,0.096291,0,0,0.176407,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.666270,0,0.791862,0,0.518977,0,0.369128,0,0.265566,0,0.434876,0,0,0.429019,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.349579,0,0,0.094997,0,0.262070,0,0.426754,0,0.146273,0.544420,0,0,0.389811,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.237904,0.079631,0,0.644579,0,0.044812,0,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.116873,0.589884,0,0.626442,0,0.665855,0,0.544982,0,0.234994,0,0,0.118442,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.142924,0,0.324832,0,0.424199,0,0.436819,0,0.119233,0.539083,0,0.389254,0,0,0.075716,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.255621,0.672968,0,0.387105,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0,0.459073,0,0.355238,0.113716,0,0.907980,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.064997,0,0.202870,0,0.410475,0,0.456702,0,0.343679,0.031877,0,0.632397,0,0.849896,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.423479,0,0.543373,0,0.539145,0,0.495240,0,0.647400,0,0.650504,0,0.569153,0,0.091353,0,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.095689,0,0.027505,0,0.108830,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["68: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-3.453950643539429,-3.508204698562622,-7.826370716094971,
  6.289997100830078,-7.717651844024658,-3.406460523605347,
 -7.825646877288818,-7.819345474243164,-6.965171337127686,
 -7.56684684753418 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p68=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p68.pdf", p68];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.562646,0,0.231585,0,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.320108,0,0.099880,0,0,0.503359,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.045795,0,0.547845,0,0,0.124208,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.236056,0.673990,0,0.430107,0,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.394287,0,0.531257,0,0,0.448340,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.126781,0,0.450436,0,0,0.265311,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.147762,0,0.517277,0,0,0.103968,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.136217,0.541438,0,0.336025,0,0,0.334650,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.368788,0,0.555340,0,0,0.034790,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.241318,0,0.735635,0,0.356387,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["69: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-5.157453536987305, 3.546220064163208,-0.832048058509827,
 -5.083289623260498,-5.102293014526367,-5.109963417053223,
 -5.210288047790527,-5.203986644744873,-4.349812507629395,
 -4.951488018035889];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p69=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p69.pdf", p69];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.066730,0,0.692060,0,0.089878,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.099499,0,0.368748,0.116248,0,0.511177,0,0.237210,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.146753,0,0.554619,0,0.093923,0,0.192459,0,0.539601,0,0.208854,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.496409,0,0.592376,0,0,0.075029,0.306577,0,0.592286,0,0.163064,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.032147,0,0.650668,0,0.541147,0,0,0.286106,0.200865,0,0.508523,0,0.110970,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.320166,0,0.679625,0,0.634972,0,0.447369,0,0.404357,0,0.475865,0,0.480260,0,0.403959,0,0,0.059050,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.024672,0.366269,0,0.597615,0,0.526193,0,0.518258,0,0.535247,0,0.599281,0,0.573949,0,0.068478,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.338178,0.454183,0,0.537006,0,0,0.065042,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.363886,0,0.555340,0,0.295602,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.277593,0,0.735635,0,0.367171,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["70: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-7.884654998779297,-7.938909530639648,-7.396812438964844,
 -7.81049108505249 , 6.38283634185791 ,-7.837164878845215,
 -7.93748950958252 ,-7.389787197113037,-7.077013969421387,
 -7.678689479827881];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p70=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p70.pdf", p70];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.153858,0.211668,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.436395,0.271150,0,0.137648,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.364900,0.562067,0,0,0.292752,0,0.416637,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.032872,0.626185,0,0,0.288107,0,0.388897,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.172718,0,0.455767,0,0.356562,0,0,0.339030,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.002631,0.288671,0,0.390571,0,0,0.325623,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.177174,0,0.517277,0,0.157796,0,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.433391,0,0.538497,0,0,0.337504,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.288164,0.494426,0,0.021729,0,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.093882,0.418557,0,0,0.374368,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["71: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-3.007054567337036, 1.083453416824341,-2.420928001403809,
 -2.693735599517822,-2.95189380645752 ,-2.959564447402954,
 -1.544221520423889,-2.575277805328369,-2.199413299560547,
 -2.654663562774658];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p71=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p71.pdf", p71];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.013717,0.390680,0,0.015474,0,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.221782,0,0.719672,0,0.093040,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.224990,0.472429,0,0.402523,0,0,0.454509,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.277734,0.540002,0,0.091479,0,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.308062,0,0.553402,0,0,0.259109,0,0.403793,0,0.346740,0,0.109431,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.013057,0.620559,0,0.047228,0,0,0.426586,0,0.487555,0.359009,0,0.546799,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.124932,0.474723,0,0.631050,0,0.116977,0,0,0.097604,0.123904,0,0.630260,0,0.786312,0,0.687029,0,0.631190,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.043956,0,0.717250,0,0.668204,0,0.584036,0,0.420218,0,0.436228,0,0.637516,0,0.659243,0,0.454752,0,0.202342,0,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.597054,0,0.719212,0,0.038824,0,0,0.308766,0,0.425229,0,0.004171,0.636919,0,0.146068,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.789552,0,0.381081,0,0,0.402870,0,0.474201,0,0.520428,0,0.036817,0.485798,0,0,0.087211,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.073426,0,0,0.124560,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["72: 4 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-6.307564735412598,-6.733445167541504,-3.159707546234131,
 -6.233400821685791,-3.741208553314209,-6.631701469421387,
  1.496335387229919,-6.725724220275879,-5.8715500831604  ,
 -6.473225593566895];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p72=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p72.pdf", p72];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.068528,0,0.602174,0,0.587319,0,0.590099,0,0.527133,0,0.750748,0,0.549255,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.391677,0,0.074390,0,0,0.511202,0,0.484901,0,0.367692,0.091051,0,0.001711,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.463442,0,0,0.229606,0,0.434992,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.257512,0.505121,0,0,0.276010,0,0.202246,0,0.195950,0,0.370269,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.204234,0.522520,0,0.437424,0,0.253806,0,0.345778,0,0.158029,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0,0.360409,0.544966,0,0,0.142119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.482614,0,0.060223,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.100373,0,0.248034,0,0.106467,0,0,0.262156,0,0.363668,0,0.449738,0,0.421818,0.581036,0,0,0.015696,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.556021,0,0.791513,0,0,0.019899,0,0.402870,0,0.474201,0,0.442977,0.160242,0,0.310308,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.000322,0,0.412642,0,0.652891,0,0.361020,0,0.270518,0,0.400142,0,0.188577,0,0,0.078907,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["73: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-6.120853424072266,-8.576350212097168,-8.575654983520508,
 -6.046689033508301,-8.466936111450195, 7.012606620788574,
 -8.574931144714355,-6.167386054992676,-7.714455127716064,
 -8.316130638122559];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p73=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p73.pdf", p73];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.066567,0,0.417860,0,0.480456,0,0.502844,0,0.529094,0,0.176238,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.694618,0,0.310664,0,0.114288,0,0.015099,0,0.382308,0,0.743012,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.434992,0,0.456477,0.202971,0,0.693569,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.258129,0.220717,0,0.546397,0,0.097432,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.207175,0.067618,0,0.295267,0,0.448904,0,0.512445,0,0.123715,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.246292,0,0.451638,0,0.128742,0,0,0.108388,0.167042,0,0.575358,0,0,0.066629,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.521830,0,0.168066,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.324248,0.290927,0,0.582017,0,0,0.056873,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0.870035,0,0.765825,0,0.523866,0,0.199709,0,0.285365,0,0.338544,0,0.479572,0,0.184752,0,0,0.138712,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0.186700,0,0.480714,0,0.597936,0,0.397009,0,0.004158,0,0,0.256933,0,0.284172,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["74: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-8.028038024902344,-2.196832895278931,-8.8446044921875  ,
  6.545222759246826,-8.735885620117188,-7.21753978729248 ,
 -8.843880653381348,-8.074570655822754,-7.983404636383057,
 -8.585080146789551];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p74=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p74.pdf", p74];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.316567,0,0.605115,0,0.729476,0,0.627354,0,0,0.096397,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.008528,0,0.657212,0,0.694618,0,0.122429,0,0,0.073948,0.265099,0,0.070543,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.343238,0,0.550675,0,0,0.301264,0,0.448233,0,0.434992,0,0.393732,0.578461,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.636677,0,0,0.251630,0,0.403703,0,0.314245,0,0.320874,0,0.278303,0.546397,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.296853,0,0,0.019920,0,0.369637,0,0.330223,0,0.426586,0,0.050300,0.311950,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.371258,0,0.232898,0.292532,0,0,0.049152,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.145495,0.366243,0,0.595801,0,0.521199,0,0.539169,0,0.022810,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.366270,0,0.377059,0,0.449077,0,0.487517,0,0.040927,0,0.644762,0,0.193127,0,0.068764,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.636964,0,0.409875,0,0.525799,0,0,0.144938,0,0.440738,0,0.076947,0.394161,0,0.158720,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.271518,0,0.628667,0,0,0.069678,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["75: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-7.665831565856934,-7.701902389526367, 6.055293560028076,
 -0.722508430480957,-7.610670566558838,-7.60015869140625 ,
 -7.718665599822998,-7.712364196777344,-6.858190059661865,
 -7.459865570068359];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p75=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p75.pdf", p75];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0.218545,0,0.035506,0,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.084857,0,0.745890,0,0.536175,0,0.210017,0,0,0.091113,0,0.227548,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.035925,0.110304,0,0.215566,0,0.323111,0,0.211177,0,0,0.347104,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.415384,0.158228,0,0.095128,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.280678,0.330521,0,0.145417,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0.110669,0,0.405582,0,0,0.256677,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.003252,0,0.387690,0,0,0.262370,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.190593,0.375066,0,0.448742,0,0,0.120958,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.318231,0,0.503530,0,0,0.185237,0,0.449738,0,0.438484,0,0.215042,0,0.161775,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.156572,0,0.492228,0,0.321877,0,0.275651,0,0.157301,0,0.232857,0,0.112789,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.113489,0,0.325561,0,0.092995,0,0.003580,0,0.073025,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["76: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-4.724754333496094,-2.787053823471069, 3.153460502624512,
 -2.774767875671387,-4.708837509155273,-2.80144190788269 ,
 -4.816832542419434,-4.810531139373779,-3.956357002258301,
 -4.558032512664795];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p76=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p76.pdf", p76];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.124161,0.044618,0,0.015566,0,0,0.443555,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.457538,0,0.222266,0,0.047845,0,0.266969,0,0,0.450595,0,0.414676,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.094520,0,0.494449,0,0,0.360565,0,0.314245,0.417362,0,0.369736,0,0,0.156544,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.094892,0,0.368315,0,0,0.362774,0,0.269439,0.445963,0,0.477151,0,0,0.321383,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.404135,0,0.498697,0,0.448350,0,0.290632,0,0.304297,0,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.258267,0,0.353218,0,0.163115,0.296032,0,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.255621,0.308574,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.383173,0.398477,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.272407,0.564067,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.017641,0,0.877519,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0.032251,0,0.325328,0,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["77: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-6.337011337280273,-3.693784475326538,-6.39056921005249 ,
 -5.933924674987793,-6.281850337982178,-4.731176376342773,
 -6.389845371246338,-6.383543968200684,-5.529369831085205,
  4.657074928283691];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p77=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p77.pdf", p77];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.033877,0,0.536086,0,0.789116,0,0.786487,0,0.631436,0,0.173432,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.269313,0,0.484663,0,0,0.090676,0,0.161885,0.016248,0,0.473922,0,0,0.141221,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.071468,0,0.259129,0,0.426754,0,0.448233,0,0.434992,0.142542,0,0.252971,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.129193,0.095559,0,0.114420,0,0.454050,0,0.020907,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.006194,0.589187,0,0.661934,0,0.565571,0,0.504602,0,0.161950,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.149787,0.019285,0,0,0.281062,0,0.418192,0,0.137860,0.593005,0,0.024548,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.136437,0,0.246476,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.377712,0,0.271988,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.396074,0,0.453525,0,0,0.246470,0,0.363668,0,0.449738,0,0.413975,0.358487,0,0.529402,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.206219,0,0.684023,0,0.557914,0,0.315995,0,0.269768,0,0.521026,0,0.713249,0,0.143181,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.041126,0,0.347295,0,0.521498,0,0.490338,0,0.457204,0,0.216191,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["78: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-6.569576263427734,-6.62382984161377 ,-6.542756080627441,
  6.042464256286621,-7.631317615509033,-6.36088752746582 ,
 -7.739312648773193,-7.733011245727539,-6.878837108612061,
 -7.480512619018555];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p78=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p78.pdf", p78];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.000189,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0.044780,0,0.151728,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.002646,0,0.701329,0,0,0.305382,0,0.440316,0,0.511202,0,0.440784,0.538190,0,0.201835,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.195199,0,0.634008,0,0,0.426754,0,0.448233,0,0.434992,0,0.059419,0.447089,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.461187,0,0.428762,0,0,0.403703,0,0.314245,0,0.320874,0.211893,0,0.413064,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.046260,0,0.751755,0,0.025178,0,0,0.369637,0,0.330223,0,0.426586,0.181072,0,0.280578,0,0,0.184573,0,0.067135,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.507383,0,0.804480,0,0,0.084100,0,0.178754,0,0.289885,0,0.363290,0.338610,0,0.429279,0,0.320626,0,0.303695,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.654724,0,0.727289,0,0.609407,0,0.558400,0,0.470311,0,0.401591,0,0.515639,0,0.435556,0,0.132772,0,0,0.071719,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.437974,0.413476,0,0.032997,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.477291,0.556321,0,0,0.030868,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.366525,0.667988,0,0,0.006358,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.106869,0.253009,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["79: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-9.308659553527832,-7.903470993041992,-7.329641819000244,
 -9.234495162963867, 4.887956142425537,-9.26116943359375 ,
 -9.361494064331055,-4.403732299804688,-8.501017570495605,
 -7.643251419067383];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p79=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p79.pdf", p79];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0.101864,0,0,0.113063,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.502379,0.304314,0,0,0.304947,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.235972,0.171954,0,0,0.378401,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.053227,0,0.009675,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0.065571,0,0,0.319908,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.292827,0.122004,0,0,0.496684,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.165964,0,0.193507,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.162803,0,0,0.252680,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.333262,0.287564,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.208587,0.139145,0,0,0.399858,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.084260,0,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["80: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-2.935494184494019, 0.496869802474976,-2.161661624908447,
 -2.033939361572266,-2.880333423614502,-2.888004064559937,
 -2.696188926696777,-1.327245712280273,-2.127852916717529,
 -2.729528427124023];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p80=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p80.pdf", p80];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0.245958,0,0.402523,0,0.428824,0,0.546034,0,0.535169,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0.023335,0,0,0.006561,0,0.280007,0.501991,0,0.394549,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.025776,0.370717,0,0.502280,0,0,0.116294,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.322861,0,0.164735,0.459973,0,0.547923,0,0.144798,0,0,0.265501,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.081931,0,0.343351,0,0.631050,0,0.384624,0,0,0.302506,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.350802,0,0.831210,0,0.703524,0,0.201537,0,0,0.401258,0,0.478801,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.230765,0,0.655878,0,0.713329,0,0.676079,0,0.484371,0,0.152222,0,0,0.027700,0.076134,0,0.143127,0,0.106019,0,0.072620,0,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.207154,0,0.227380,0.020897,0,0.097219,0,0.010242,0,0.305406,0,0.537298,0,0.614602,0,0.317041,0,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["81: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-2.107922315597534,-2.162176370620728, 0.497384428977966,
 -0.704325675964355,-2.052761554718018,-2.060432195663452,
 -2.160756587982178,-2.154455184936523,-1.300281047821045,
 -1.901956558227539];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p81=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p81.pdf", p81];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.010997,0,0.722613,0,0,0.222646,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0.093997,0,0.478994,0,0,0.459411,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0.098825,0,0.431675,0,0,0.444713,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0.246539,0,0.533048,0,0,0.393009,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.271738,0,0.328316,0,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.114036,0,0.384749,0,0,0.501586,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.101684,0,0.511395,0,0,0.435341,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.077394,0.540458,0,0,0.337504,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.201652,0.469768,0,0,0.073091,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.439286,0.327593,0,0.422890,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["82: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-4.93098258972168 , 3.319749116897583,-0.832048058509827,
 -4.856818675994873,-4.875822067260742,-4.883492469787598,
 -4.983817100524902,-4.977515697479248,-4.12334156036377 ,
 -4.725017070770264];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p82=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p82.pdf", p82];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0.180204,0,0.257744,0,0,0.207630,0,0.254838,0,0.033430,0,0.082671,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.620937,0,0.635795,0,0,0.145218,0.030954,0,0.505295,0,0.530347,0,0,0.073655,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.514400,0,0.561482,0,0.541963,0,0.516969,0,0,0.103536,0,0.285264,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.108421,0.477782,0,0.072768,0,0,0.163265,0,0.257148,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.154696,0,0.657531,0,0.383304,0,0.167816,0,0.069492,0,0,0.177751,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.111206,0.257076,0,0.272227,0,0.201291,0,0.087690,0,0.359199,0,0.253789,0,0,0.176433,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.294164,0.542418,0,0.209243,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.268039,0,0.363668,0,0.449738,0,0.459073,0.282017,0,0.716657,0,0,0.017510,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.192448,0.436345,0,0,0.428123,0,0.520428,0,0.273091,0.630896,0,0.469651,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.152011,0.531609,0,0.491106,0,0.509946,0,0.695439,0,0.525995,0,0.042683,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.008434,0.359750,0,0.374504,0,0.283402,0,0,0.010622,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["83: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-6.829486846923828,-7.783266067504883,-8.352914810180664,
 -5.614634037017822,-8.244195938110352, 5.649178504943848,
 -8.352190971374512,-6.876019954681396,-7.491715431213379,
 -8.093391418457031];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p83=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p83.pdf", p83];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.025785,0.339565,0,0.510304,0,0.432233,0,0.364288,0,0.295491,0,0.314661,0,0,0.098165,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.532454,0,0.625185,0,0,0.216950,0,0.448233,0,0.434992,0,0.364321,0,0.248990,0,0.202509,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.018869,0,0.762167,0,0,0.053591,0,0.403703,0,0.314245,0,0.320874,0,0.403793,0,0.164387,0.226844,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.179593,0,0.846853,0,0,0.275802,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0.196264,0,0.489936,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.086795,0,0.831931,0,0,0.259591,0,0.361107,0,0.434003,0,0.545643,0,0.209429,0.569475,0,0.329450,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.507681,0,0.513328,0,0,0.136698,0,0.114983,0.342767,0,0.466620,0,0.510065,0,0.350419,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.122554,0.305486,0,0.678040,0,0.624567,0,0.185556,0,0,0.327700,0.285938,0,0.629402,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.296370,0,0.346008,0,0.417338,0,0.520428,0,0.440738,0.000504,0,0.871612,0,0.080289,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.053417,0.955428,0,0.108020,0,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0.033496,0,0.757048,0,0.080270,0,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["84: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.386396408081055,-5.44064998626709 ,-5.439954280853271,
 -5.31223201751709 ,-2.676936626434326,-2.684607267379761,
 -5.439230442047119,-5.432929039001465,-4.578754901885986,
  4.035382270812988];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p84=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p84.pdf", p84];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.201748,0.383397,0,0.745981,0,0.835956,0,0.412512,0,0.012981,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.175970,0.419488,0,0.480954,0,0.018040,0,0.214661,0,0.679286,0,0.382104,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.127756,0.436972,0,0.455688,0,0,0.145776,0,0.455497,0,0.421539,0.322981,0,0.693243,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.422880,0,0.577670,0,0,0.050519,0,0.320874,0,0.403793,0,0.390858,0.351353,0,0.726199,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.023323,0,0.629100,0,0.096049,0,0,0.330223,0,0.426586,0,0.487555,0,0.376285,0.441897,0,0.670120,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.355460,0,0.663939,0,0,0.141499,0,0.434003,0,0.545643,0,0.520213,0,0.236407,0.757881,0,0.379186,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.652779,0,0.634897,0,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.177712,0,0.762184,0,0.098870,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.642152,0,0.646663,0,0,0.310196,0,0.363668,0,0.426209,0,0.168877,0.526134,0,0.301951,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.629748,0,0.668336,0,0.063796,0,0.147368,0,0.289376,0,0.540634,0,0.396582,0,0,0.082309,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.094995,0,0.687205,0,0.620824,0,0.422478,0,0.126613,0,0,0.043776,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["85: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[  8.762933731079102,-10.429329872131348,-10.428634643554688,
 -10.245749473571777,-10.319915771484375,-10.21726131439209 ,
 -10.427910804748535,-10.366446495056152, -9.567434310913086,
 -10.169110298156738];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p85=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p85.pdf", p85];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.074859,0,0.347559,0,0.546939,0,0.475072,0,0.041569,0,0,0.364751,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.030493,0,0.669302,0,0.515403,0,0.190002,0,0.208145,0,0.535679,0,0,0.121539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.393540,0,0.565037,0,0,0.267428,0,0.314245,0,0.306168,0.388364,0,0.433652,0,0,0.190803,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.538029,0,0.173217,0,0,0.369637,0,0.330223,0,0.192273,0.473229,0,0.615872,0,0.191897,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.405460,0,0.510017,0,0,0.213068,0.011095,0,0.366122,0,0.471944,0,0.617514,0,0.036312,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.017809,0.490779,0,0.662321,0,0.566389,0,0.227081,0,0.308777,0,0.413007,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.172941,0,0.284256,0,0.449738,0.021320,0,0.124174,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.520428,0.290634,0,0.044622,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0.565047,0,0.479916,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0.666735,0,0.584476,0,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["86: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-11.314640045166016,-11.368893623352051,-11.368198394775391,
 -11.240475654602051, -7.040363311767578, -7.373636245727539,
 -11.367474555969238,-11.361172676086426,-10.506998062133789,
   9.638022422790527];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p86=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p86.pdf", p86];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0.195981,0,0.312427,0,0,0.017880,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.217767,0.183896,0,0.266079,0,0.188191,0,0.722424,0,0.126221,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.092440,0.413531,0,0,0.240874,0,0.456477,0,0.337225,0.451412,0,0.664811,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.015467,0.435755,0,0,0.098325,0.318756,0,0.360123,0,0.228804,0,0.008552,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.341206,0.641345,0,0.435178,0,0,0.349320,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.139874,0,0.315997,0,0.371024,0,0,0.491782,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.076868,0.344674,0,0,0.404199,0.159434,0,0.010737,0,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.079417,0.545682,0,0,0.225882,0,0.363668,0.134575,0,0.012496,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.391513,0,0.172258,0,0,0.402870,0,0.084005,0.367807,0,0,0.356425,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.743034,0,0.299950,0,0.378667,0,0.304831,0,0,0.271427,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.235211,0,0.363409,0,0.091566,0,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["87: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-4.090828895568848,-4.145083427429199,-4.144387245178223,
 -4.016664981842041,-4.03566837310791 ,-3.947983980178833,
 -4.14366340637207 ,-4.137362003326416, 3.246135711669922,
 -3.884863376617432];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p87=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p87.pdf", p87];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.155669,0.204966,0,0,0.075587,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0.268507,0,0.484876,0,0.497452,0,0.140151,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.260087,0.546865,0,0.534616,0,0.498425,0,0.572579,0,0,0.055450,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.185075,0.638696,0,0,0.146364,0,0.303793,0.478750,0,0.161157,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.312077,0.329383,0,0.408992,0,0,0.426586,0,0.487555,0.457048,0,0.191897,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.225277,0.577128,0,0.281683,0,0,0.506427,0,0.415311,0.577318,0,0,0.012707,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.109407,0,0.507419,0,0,0.404199,0,0.478801,0.022502,0,0.434575,0,0,0.186836,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.121172,0,0.519216,0,0,0.363668,0,0.354640,0.417398,0,0.043782,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.080101,0,0.429483,0,0,0.379103,0.311925,0,0.236713,0,0,0.251457,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.064756,0.624746,0,0.550910,0,0.273671,0,0,0.186914,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.037572,0.234703,0,0.100927,0,0,0.110790,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["88: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 2.894076585769653,-4.50531005859375 ,-4.504614353179932,
 -4.37689208984375 ,-4.395895481109619,-4.403566360473633,
 -4.503890514373779,-4.497589111328125,-3.643414974212646,
 -4.245090484619141];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p88=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p88.pdf", p88];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.031472,0.656095,0,0.555946,0,0,0.057940,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.244618,0,0.551841,0,0.482915,0,0.429804,0,0,0.287300,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.071874,0.524227,0,0,0.021763,0,0.045776,0.476856,0,0.314736,0,0,0.225058,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.358174,0,0.459043,0,0,0.263265,0,0.320874,0,0.236146,0.572868,0,0.296451,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.077245,0,0.657531,0,0.103893,0,0,0.330223,0,0.426586,0,0.487555,0.098225,0,0.790917,0,0,0.030861,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.256441,0,0.616880,0,0,0.314048,0,0.434003,0,0.545643,0,0.520213,0,0.063858,0.801999,0,0.159578,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.258661,0,0.613328,0,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.233072,0.785713,0,0.304752,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.209799,0,0.690780,0,0,0.206274,0,0.363668,0,0.449738,0,0.459073,0.131036,0,0.797049,0,0.019745,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.070252,0.596768,0,0.410855,0,0.012074,0,0,0.106702,0.304360,0,0.699524,0,0.310828,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.040246,0.264942,0,0.363655,0,0.523671,0,0.426812,0,0.172073,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["89: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 7.585813522338867,-9.197047233581543,-9.196352005004883,
 -9.068629264831543,-9.08763313293457 ,-9.095303535461426,
 -9.19562816619873 ,-9.189326286315918,-8.335151672363281,
 -8.936827659606934];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p89=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p89.pdf", p89];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.083433,0.258056,0,0,0.022485,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.138715,0.547919,0,0.243699,0,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.260087,0.540002,0,0.333636,0,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.263507,0.657324,0,0.548734,0,0,0.380264,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.550169,0,0.563610,0,0,0.434614,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.448350,0,0.447494,0,0,0.467272,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.216389,0,0.511395,0,0,0.376517,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.089273,0,0.540458,0,0,0.131622,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.142828,0.472709,0,0.011223,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.393208,0.355044,0,0.586616,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.050974,0,0.368696,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["90: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-5.181602478027344, 3.447564840316772,-0.893449902534485,
 -5.107438087463379,-5.126441478729248,-5.011308670043945,
 -5.234436511993408,-5.228135108947754,-4.373960971832275,
 -4.97563648223877 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p90=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p90.pdf", p90];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.182254,0,0.288448,0,0.226534,0,0.158727,0,0.285956,0,0.088003,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.072898,0,0.667167,0,0.401841,0,0.070170,0,0.277844,0,0.616622,0,0.170463,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.008149,0.561482,0,0,0.226665,0,0.434992,0,0.007458,0.554932,0,0.047491,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.302610,0.397278,0,0.294579,0,0,0.104207,0.568756,0,0.190515,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0.227422,0,0.658012,0,0.521453,0,0.233033,0,0,0.372363,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.340519,0.276781,0,0.447494,0,0,0.140801,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.171012,0.555605,0,0.511395,0,0.382306,0,0,0.343856,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.222945,0.505491,0,0.355940,0,0.013987,0,0.529163,0,0,0.240532,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.093826,0,0.580463,0,0,0.290868,0.153102,0,0.412203,0,0,0.257339,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.095048,0,0.612981,0,0.463655,0,0.570730,0,0.091518,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.008160,0.319017,0,0.278378,0,0.000974,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["91: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-4.802780151367188,-4.857034683227539,-4.856338500976562,
 -4.728616237640381,-4.74761962890625 ,-4.755290031433105,
 -4.85561466217041 ,-4.849313259124756, 4.053442001342773,
 -4.596814632415771];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p91=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p91.pdf", p91];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.001524,0,0.299811,0,0,0.120688,0,0.207630,0,0.270524,0,0.202058,0,0.022867,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.202646,0,0.724859,0,0,0.264205,0,0.440316,0,0.511202,0,0.255490,0.397994,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.606964,0,0.429106,0,0,0.426754,0,0.448233,0,0.434992,0,0.314321,0.547089,0,0.154353,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.025732,0,0.871971,0,0,0.086924,0,0.403703,0,0.314245,0,0.320874,0,0.403793,0.481691,0,0.372922,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.434495,0,0.813519,0,0,0.232665,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0.245284,0,0.403662,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.665226,0,0.583892,0,0,0.269394,0,0.314048,0,0.111454,0,0.457408,0,0.171194,0.574377,0,0.396116,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.368449,0,0.703759,0,0.589799,0,0.615262,0,0.585997,0,0.381983,0,0.431326,0,0.643399,0,0.248459,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.216078,0,0.205825,0,0.449738,0,0.229661,0.640840,0,0.103912,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.520428,0,0.211327,0.732857,0,0.180436,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.031031,0.874034,0,0.049546,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0.045166,0,0.465849,0,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["92: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-3.148941278457642,-3.203195333480835,-3.202499389648438,
 -3.074777126312256, 1.647122383117676,-3.10145115852356 ,
 -3.201775550842285,-3.195474147796631,-2.341300010681152,
 -2.942975521087646];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p92=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p92.pdf", p92];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.196175,0,0.120906,0.254669,0,0.044354,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.227931,0,0.063846,0.300562,0,0.472942,0,0.555838,0,0.793992,0,0.067398,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.247364,0.438933,0,0.352747,0,0,0.058521,0.043523,0,0.457873,0,0.122981,0,0,0.084208,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.309473,0.321788,0,0.636735,0,0.282067,0,0.406011,0,0,0.157524,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.243306,0,0.561649,0,0.146758,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.286585,0,0.430828,0,0.408218,0,0,0.318760,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0.007419,0,0.578154,0,0,0.111154,0.473483,0,0,0.304641,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.254318,0.518236,0,0.189273,0,0,0.046797,0.437006,0,0,0.316022,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.213036,0.549091,0,0.137564,0,0.404082,0,0.009262,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.142207,0.616903,0,0.530322,0,0.287397,0,0,0.170247,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.050317,0.081762,0,0.195044,0,0,0.091183,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["93: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-0.841055154800415,-0.895309209823608,-0.8946133852005  ,
 -0.766891002655029,-0.785894453525543,-0.793565034866333,
 -0.893889546394348,-0.88758796453476 , 0.091716811060905,
 -0.635089457035065];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p93=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p93.pdf", p93];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.037443,0.559705,0,0.780605,0,0.490260,0,0,0.039313,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.496427,0,0.647559,0,0.131252,0,0.340758,0,0.299412,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.220689,0,0.661459,0,0,0.213028,0,0.448233,0.092459,0,0.407248,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.022147,0,0.215355,0,0.403703,0,0.314245,0.051675,0,0.526599,0,0,0.286936,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.054037,0.419308,0,0,0.307658,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0.252396,0,0.226846,0,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.212189,0.300703,0,0.489826,0,0,0.215733,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.107259,0.618236,0,0.624567,0,0.542418,0,0.391908,0,0.141821,0,0,0.158833,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.468336,0,0.581443,0,0.181681,0,0,0.068467,0.406321,0,0.724033,0,0.460828,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.229362,0,0.054158,0,0,0.441247,0,0.409662,0,0.194757,0.470112,0,0.706408,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["94: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-5.87169075012207 ,-7.037563323974609, 5.372771739959717,
 -1.815944194793701,-6.928148746490479,-3.437418222427368,
 -7.036143779754639,-7.029842376708984,-6.175668239593506,-6.77734375       ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p94=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p94.pdf", p94];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.106962,0.052174,0,0.422613,0,0.631276,0,0.779094,0,0.378199,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.101612,0.484814,0,0.417527,0,0,0.072967,0,0.073137,0,0.200045,0.578306,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.248345,0,0.203224,0,0.421763,0,0.434992,0,0.456477,0,0.115656,0.572981,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0,0.403793,0.085613,0,0.263118,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.345214,0,0.191477,0.540382,0,0,0.007122,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.280715,0.163056,0,0.434749,0,0.473904,0,0.565554,0,0.178469,0,0,0.036501,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.064868,0.121171,0,0.222125,0,0,0.039493,0.126101,0,0.236228,0,0,0.287974,0,0.040757,0,0.047209,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.019981,0,0.598034,0,0.114310,0,0,0.270000,0.214763,0,0.342418,0,0,0.390445,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.321707,0,0.541513,0,0.082062,0,0.438306,0,0.113054,0,0,0.453761,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.438557,0,0.775387,0,0.381322,0,0,0.121333,0,0.443208,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["95: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-4.328704833984375,-4.382959365844727, 2.718167304992676,
 -2.120382308959961,-4.273544311523438,-4.281214714050293,
 -4.381539344787598,-4.375237941741943,-3.521063804626465,
 -4.122739315032959];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p95=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p95.pdf", p95];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0.004689,0,0.750939,0,0.453210,0,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.164642,0.520491,0,0.567329,0,0,0.002193,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.406983,0.262327,0,0.275883,0,0,0.303966,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0.007649,0,0.367949,0,0,0.428046,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.256644,0.567128,0,0,0.129697,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.327763,0.323500,0,0.373698,0,0.024394,0,0,0.032653,0,0.291971,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.209591,0.634972,0,0.538546,0,0.414161,0,0.425865,0,0.473397,0,0,0.165648,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.068230,0,0.675066,0,0.325213,0,0,0.421938,0,0.341223,0.626732,0,0.039635,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.061181,0.652550,0,0.470646,0,0,0.020327,0.351712,0,0.380056,0,0,0.173539,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.028502,0,0.478740,0,0.271729,0,0.156321,0,0,0.177927,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["96: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-13.567550659179688,-13.621804237365723,-13.621109008789062,
 -13.493386268615723,-12.557075500488281, -7.812780380249023,
  11.957736015319824,-13.614083290100098,-12.759908676147461,
 -13.361584663391113];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p96=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p96.pdf", p96];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.103041,0,0.207630,0,0.270524,0,0.194215,0.177133,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.099369,0,0.326971,0,0,0.440316,0,0.511202,0.026863,0,0.196034,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.156557,0,0.314423,0,0,0.448233,0,0.434992,0.167052,0,0.072579,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.391507,0,0.218846,0,0,0.314245,0,0.320874,0.298168,0,0,0.015367,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.439884,0,0.165657,0,0,0.330223,0,0.426586,0.410484,0,0,0.113540,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.390409,0,0.394776,0,0,0.143807,0,0.427015,0.442532,0,0,0.279544,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.148436,0.282909,0,0.336978,0,0.485905,0,0.497012,0,0,0.290915,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.077189,0.276222,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.058984,0,0.056321,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.280534,0,0.167008,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.143131,0,0.053990,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["97: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-9.333432197570801,-9.387685775756836,-5.57597827911377 ,
 -9.259267807006836, 6.602691173553467,-9.285942077636719,
 -9.386266708374023,-5.568953037261963,-8.525790214538574,
 -7.898544311523438];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p97=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p97.pdf", p97];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0.497721,0,0.461532,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.464313,0.428387,0,0.262620,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.434992,0,0.156477,0.451991,0,0,0.144666,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.140482,0.371697,0,0.006201,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.249831,0.429296,0,0.206562,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.064036,0,0.426906,0,0,0.401586,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.162189,0.529135,0,0.096689,0,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.238632,0.406471,0,0.608881,0,0,0.212483,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.078140,0,0.589287,0,0.101289,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.230342,0,0.422785,0,0,0.385365,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["98: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-5.706146240234375, 1.325274229049683,-4.539930820465088,
 -5.527139663696289,-3.421123027801514,-5.658656120300293,
 -5.758980274200439,-4.42806339263916 ,-4.463571071624756,
 -5.500180244445801];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p98=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p98.pdf", p98];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

rsys=MNIST[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.442575,0,0.036862,0,0.272594,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.424793,0,0.197253,0.401283,0,0.535679,0,0.423559,0,0,0.124078,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.287904,0.196297,0,0.677912,0,0.671283,0,0.169736,0,0.436593,0,0.487628,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.158511,0,0.613696,0,0.135463,0,0,0.110900,0,0.078732,0.591362,0,0.232093,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.145520,0.653155,0,0.554579,0,0.329722,0,0.377886,0,0.471944,0,0.383201,0,0,0.173492,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.148201,0.322152,0,0.489772,0,0.126193,0,0,0.075860,0.510737,0,0,0.236993,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.173791,0,0.187006,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.393809,0.416827,0,0,0.189758,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.020518,0,0.430534,0,0,0.255541,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.049611,0.759750,0,0.335288,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0.038594,0,0.423911,0,0.001859,0,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["99: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.334856986999512,-5.389110565185547,-5.388414859771729,
 -5.260692596435547,-5.279695987701416,-5.28736686706543 ,
 -3.49205207824707 ,-5.381389617919922,-4.527215480804443,
  3.983842849731445];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p99=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNIST_p99.pdf", p99];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNIST_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNIST_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNIST_convergence_times.csv", ","], WriteLine["MNIST_convergence_times.csv", ""]];
  ];
];

Print["totalCount (number of predictions): " <> ToString[totalCount]];
Print["correctCount (number of correct predictions): " <> ToString[correctCount]];
Print["matchingCount (number of predictions matching NN output): " <> ToString[matchingCount]];
tmax = 200;
totalCount = 0;
correctCount = 0;
matchingCount = 0;

analyzeConvergenceTime = False;

Print["Example Index (i)"];
Print["Expected Output (E)"];
Print["CRN Output (C)"];
Print["NN Output (N)"];

Print["i: E C N"];
rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.222762,0,0.558887,0,0.617550,0,0.070270,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.235795,0,0.553801,0,0.174092,0,0.485687,0,0.506818,0,0,0.169733,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.098714,0,0.555599,0,0.012551,0,0,0.434992,0.021954,0,0.572579,0,0,0.219176,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.409155,0,0.470807,0,0,0.302480,0,0.320874,0,0.021440,0.601299,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.663413,0,0.105853,0,0,0.330223,0,0.426586,0,0.104222,0.617833,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.084736,0.677664,0,0,0.167970,0,0.434003,0,0.545643,0.073904,0,0.630260,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.001799,0,0.725093,0,0,0.245522,0,0.404199,0,0.430762,0.440149,0,0.393399,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.008828,0.711368,0,0,0.257254,0,0.350923,0.243399,0,0.535045,0,0.014370,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.660493,0,0.073600,0,0.238544,0,0.473690,0,0.148477,0,0,0.252437,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.201911,0,0.585530,0,0.513655,0,0.123671,0,0,0.248678,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["0: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 1.098553419113159,-2.709787130355835,-2.709091186523438,
 -2.581368923187256,-2.600372314453125,-2.60804295539856 ,
 -2.708367347717285,-2.702065944671631,-1.847891807556152,
 -2.449567317962646];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p0=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p0.pdf", p0];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.014493,0.464770,0,0.628334,0,0.078113,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.140676,0.477331,0,0,0.005320,0.312157,0,0.342112,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.053247,0.464423,0,0.283139,0,0,0.434992,0.277836,0,0.274540,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.340527,0,0.588454,0,0.343598,0,0.258538,0,0.584442,0,0.298358,0,0,0.180019,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.252629,0,0.622520,0,0.661934,0,0.567531,0,0.318327,0,0.526656,0,0.468368,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.183120,0.633011,0,0.499330,0,0,0.090741,0,0.513350,0,0.036407,0.461803,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.081956,0,0.636831,0,0,0.203218,0,0.478801,0,0.460831,0.330654,0,0.446498,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.395682,0,0.603530,0,0,0.363668,0,0.396797,0.019359,0,0.595742,0,0.195088,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.490885,0,0.535365,0,0.062074,0,0.398200,0,0.527889,0,0.137759,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.116616,0,0.516903,0,0.540125,0,0.199162,0,0,0.144757,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["1: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-0.778489828109741,-0.832743883132935,-0.832048058509827,
 -0.704325675964355,-0.723329126834869,-0.730999708175659,
 -0.831324219703674,-0.825022637844086, 0.029151486232877,
 -0.572524130344391];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p1=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p1.pdf", p1];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0.385506,0,0.119708,0,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.214269,0,0.882164,0,0,0.049119,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.392842,0,0.532702,0,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.579513,0,0.317342,0,0,0.426754,0,0.448233,0,0.434992,0,0.456477,0,0.265656,0.097491,0,0.067752,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.593540,0,0.024841,0,0,0.403703,0,0.314245,0,0.320874,0,0.225362,0.516005,0,0.760177,0,0.513454,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.698813,0,0.007531,0,0,0.369637,0,0.330223,0,0.426586,0.221268,0,0.293323,0,0.157583,0,0.633845,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.578009,0,0.140409,0,0,0.361107,0,0.434003,0,0.376035,0.465081,0,0,0.278564,0.080430,0,0.624284,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.397877,0,0.569211,0,0,0.321993,0,0.404199,0,0.137625,0.258777,0,0,0.259543,0.452380,0,0.259654,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.022554,0.629016,0,0.463334,0,0.025548,0,0.219869,0,0.357594,0,0.391821,0,0.450970,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.192448,0.130463,0,0.231681,0,0.187415,0,0.544556,0,0.034818,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0.086616,0,0.057367,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["2: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-7.034282684326172,-7.088536262512207,-7.087840557098389,
 -6.960118293762207,-6.178709030151367,-6.98679256439209 ,
  5.424468517303467,-7.080815315246582,-6.226641178131104,
 -6.828316688537598];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p2=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p2.pdf", p2];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0.153733,0,0.648920,0,0.417860,0,0.683397,0,0.413629,0,0.080074,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.146427,0,0.511285,0,0,0.061885,0,0.401399,0,0.313333,0.274465,0,0.049875,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.076370,0.537930,0,0,0.016950,0,0.448233,0,0.434992,0,0.456477,0,0.298009,0.541608,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.199422,0,0.651311,0,0,0.312526,0,0.314245,0,0.320874,0,0.403793,0,0.390858,0.496451,0,0.071297,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.245872,0,0.433021,0,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0,0.376285,0.535034,0,0.433845,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.426049,0,0.202174,0,0,0.361107,0,0.434003,0,0.545643,0,0.520213,0,0.361897,0.525528,0,0.522323,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.332191,0,0.002544,0,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.272288,0.652380,0,0.382203,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.124505,0,0.408427,0,0,0.310196,0,0.363668,0,0.449738,0,0.446328,0.311429,0,0.771559,0,0,0.001824,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.357552,0,0.013796,0,0,0.349691,0,0.151800,0.331811,0,0.682857,0,0.188279,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.185344,0.177687,0,0.484243,0,0.578573,0,0.459165,0,0.125014,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["3: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 3.454233884811401,-6.181535720825195,-6.180839538574219,
 -6.053117275238037,-6.072120666503906,-4.963723182678223,
 -6.180115699768066,-6.173814296722412,-5.319640159606934,
 -5.921315670013428];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p3=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p3.pdf", p3];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.448457,0,0.184901,0.047994,0,0,0.140321,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.339499,0.188041,0,0.471871,0,0.211170,0,0.284344,0,0.372000,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.223198,0.471788,0,0.213206,0,0,0.320874,0,0.230264,0.497378,0,0.136648,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.234982,0,0.212716,0,0,0.330223,0,0.297175,0.402641,0,0.366852,0,0,0.139475,0,0.011253,0.084184,0,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.235508,0,0.433991,0,0.279722,0,0.400436,0,0.019002,0,0,0.337387,0,0.192119,0.310558,0,0.121386,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.262162,0,0.096502,0.173252,0,0.329042,0,0,0.440243,0,0.352680,0,0.206443,0,0.067797,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.280784,0.421626,0,0,0.178170,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.056792,0.328740,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.111815,0.529648,0,0,0.187326,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.064623,0,0.797722,0,0.427840,0,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0.133759,0,0.424309,0,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["4: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-4.040984153747559,-4.095237731933594,-4.094542026519775,
 -3.966819763183594,-3.985823154449463,-3.993493795394897,
 -0.976611256599426,-4.087516784667969,-3.23334264755249 ,
  2.689970016479492];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p4=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p4.pdf", p4];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.482941,0.223485,0,0.161639,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.419891,0,0.252155,0,0.418325,0,0.291772,0.540226,0,0,0.156431,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.046840,0.580853,0,0,0.201266,0.113854,0,0.199338,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.134520,0.079100,0,0.583304,0,0,0.147870,0,0.409920,0.351660,0,0.064891,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.200558,0,0.679625,0,0.583991,0,0.486585,0,0.331808,0,0.468022,0,0,0.109936,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.037093,0,0.151564,0,0.014282,0,0,0.288513,0,0.156252,0.471522,0,0,0.328170,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.137517,0,0.277202,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.130553,0,0,0.008385,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.241318,0,0,0.182992,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.488229,0,0,0.034245,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["5: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-6.403069496154785,-7.281308174133301,-5.4064040184021  ,
 -7.152890205383301, 5.725235462188721,-6.355579376220703,
 -6.45590353012085 ,-6.223363876342773,-6.419413089752197,
 -7.021088600158691];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p5=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p5.pdf", p5];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.145034,0.751864,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.011202,0.515099,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0.253243,0,0.356268,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.188755,0.679126,0,0.221697,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.079243,0.573414,0,0,0.174810,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.128742,0,0.454357,0,0,0.331978,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.408546,0,0.458454,0,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.636332,0,0.113007,0,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0.525799,0,0,0.020428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.492086,0,0,0.034172,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["6: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-4.858356475830078, 2.252084493637085,-3.854581832885742,
 -3.789154052734375,-4.803195476531982,-4.810866355895996,
 -1.888656735420227,-2.914813041687012,-4.05071496963501 ,
 -4.652390480041504];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p6=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p6.pdf", p6];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.076175,0,0.217996,0,0.192657,0,0.057723,0,0,0.215124,0,0.423137,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.244677,0,0.892258,0,0.730087,0,0.565403,0,0.543923,0,0.557165,0,0.478817,0,0,0.257813,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.014464,0.335696,0,0.134645,0,0,0.296840,0,0.247578,0,0.132638,0.153070,0,0.557182,0,0,0.122176,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.426586,0,0.062065,0.615872,0,0,0.059083,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.539761,0.219983,0,0.452809,0,0,0.188197,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.172919,0.531326,0,0.063987,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.284575,0,0.449751,0,0,0.327787,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.331064,0.442317,0,0.013183,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.148949,0,0.468769,0,0,0.235933,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.848966,0,0.253915,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0.360185,0,0.007742,0,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["7: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-10.691804885864258, -8.546674728393555, -6.271096706390381,
 -10.400534629821777, -4.762297630310059,-10.698451995849609,
 -11.070019721984863,  8.871186256408691,-10.209543228149414,
  -8.620406150817871];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p7=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p7.pdf", p7];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.051564,0,0.337940,0,0.411133,0,0.588736,0,0.554782,0,0.409386,0,0.209216,0,0.289171,0,0.133208,0,0,0.059073,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.269187,0,0.741277,0,0.451655,0,0,0.116950,0,0.193332,0.026773,0,0.518032,0,0.570618,0,0.709255,0,0,0.012640,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.035696,0,0,0.263394,0,0.403703,0,0.061304,0.536969,0,0.579540,0,0.165025,0,0,0.121196,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.015715,0.582522,0,0.348904,0,0,0.333634,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.190963,0.452619,0,0.374820,0,0,0.393682,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.064123,0.663302,0,0.587958,0,0.477081,0,0.181326,0,0,0.286013,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.253333,0,0.258766,0,0.017385,0.504653,0,0.389860,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.490036,0.327889,0,0.606386,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.168524,0,0,0.202991,0,0.029176,0.296008,0,0.447201,0,0.724851,0,0.481877,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.677368,0,0.861448,0,0.656272,0,0.554848,0,0.315680,0,0.034382,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["8: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-10.860944747924805, -4.866731643676758, -6.880515098571777,
   9.378129005432129,-10.805784225463867, -6.77946662902832 ,
 -10.913779258728027,-10.907477378845215,-10.053302764892578,
 -10.65497875213623 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p8=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p8.pdf", p8];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.108923,0,0.176258,0,0.209740,0.027354,0,0.208505,0,0,0.068860,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.389716,0,0.555762,0,0.484876,0,0.428824,0,0.233289,0,0,0.150125,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.259521,0,0,0.249214,0,0.347737,0,0.438830,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.341395,0,0,0.255421,0,0.089501,0,0.068499,0,0.367328,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.264038,0.587226,0,0.398208,0,0.485178,0,0.370288,0,0.234499,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.189002,0.551638,0,0,0.019297,0,0.477015,0,0.512370,0.442024,0,0,0.167609,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.302385,0,0.404199,0,0.478801,0,0.407890,0.450261,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.420327,0.150731,0,0.266331,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.383262,0,0.383025,0.263886,0,0.330830,0,0,0.220084,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.430628,0,0.459733,0,0.217789,0,0,0.233972,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.199409,0,0.157789,0,0,0.113732,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["9: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-1.947182416915894,-6.01996898651123 ,-6.378451824188232,
 -1.630500793457031,-6.26973295211792 , 3.981838941574097,
 -6.37772798538208 ,-1.993715286254883,-5.517252445220947,
 -5.412672996520996];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p9=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p9.pdf", p9];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.447744,0,0.759173,0,0.159324,0,0,0.250120,0,0.331791,0,0.437843,0,0.362790,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.376571,0,0.730087,0,0.279129,0,0.349806,0,0.445400,0,0.395483,0,0.189246,0,0,0.101529,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.111187,0,0.677782,0,0,0.011546,0,0.314245,0,0.320874,0,0.158695,0.601299,0,0.159197,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.031579,0.659492,0,0.269579,0,0,0.330223,0,0.426586,0,0.242457,0.615872,0,0.189936,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.150422,0.053155,0,0.561442,0,0,0.288905,0,0.545643,0.014101,0,0.630260,0,0.000038,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.267064,0,0.188659,0,0.361062,0,0.445468,0.445051,0,0.527712,0,0,0.163306,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.183072,0.533084,0,0.207507,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.108984,0,0.551419,0,0.066190,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.451122,0,0.444459,0,0,0.109299,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.595092,0,0.679480,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["10: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-4.65101146697998 ,-7.204176902770996,-3.330959796905518,
 -7.075758934020996,-1.443741798400879,-7.102433204650879,
 -7.202757358551025, 5.54641056060791 ,-6.342281818389893,
 -6.943957328796387];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p10=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p10.pdf", p10];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0.006962,0,0.170597,0,0.389700,0,0.262532,0,0,0.013767,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.043038,0,0.409036,0,0.095162,0,0.590099,0,0.216349,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.129999,0.173485,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.434992,0.051366,0,0,0.092127,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.304207,0.387383,0,0,0.377132,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.040312,0,0.010104,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.334983,0.183769,0,0,0.504527,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.255326,0.418350,0,0,0.126840,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.086279,0.280976,0,0.586863,0,0.414763,0,0.330654,0,0.285045,0,0,0.020924,0,0.176481,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.383670,0,0.642846,0,0,0.146988,0,0.474201,0,0.516506,0,0.257405,0.336779,0,0.102985,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.145975,0,0,0.063776,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["11: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-2.936559438705444,-4.668292999267578, 3.003500938415527,
 -2.381804943084717,-4.558877944946289,-3.657365560531616,
 -4.666872978210449,-4.660571575164795,-3.806397438049316,
 -4.408072948455811];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p11=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p11.pdf", p11];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.195866,0,0.256799,0,0.012842,0.325172,0,0.368395,0,0,0.021333,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.086624,0,0.360304,0,0.521448,0,0.466249,0,0.471961,0,0.487210,0,0.797914,0,0,0.058093,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.134989,0,0.117364,0,0,0.151175,0,0.312443,0,0.456477,0.176501,0,0.432785,0,0,0.082248,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0,0.152813,0.572868,0,0.023902,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.245214,0.433033,0,0.211950,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.415376,0.171024,0,0.325865,0,0,0.245231,0,0.088197,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.143299,0,0.090593,0.106439,0,0.344821,0,0.513356,0,0.485247,0,0.535556,0,0.139635,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0.044287,0,0.387628,0,0.700976,0,0.732937,0,0.681961,0,0.603979,0,0.046340,0,0,0.177700,0,0.309160,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0.198466,0,0.739354,0,0.414062,0,0.011474,0,0.513796,0,0,0.121260,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.098969,0,0.485530,0,0,0.407914,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.110468,0,0.216076,0,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["12: 7 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-4.343310356140137,-4.397563934326172, 2.732772350311279,
 -1.183984279632568,-4.288149356842041,-4.295820236206055,
 -4.396144390106201,-4.389842987060547,-3.535668849945068,
 -4.137344360351562];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p12=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p12.pdf", p12];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.333397,0,0.584217,0,0.291839,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.326591,0.059386,0,0,0.398627,0.395053,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.429606,0,0.404600,0,0.010399,0,0.051931,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.230912,0.313440,0,0.477580,0,0,0.298701,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.165715,0.534483,0,0.302825,0,0.012445,0,0.004107,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.338893,0,0,0.004591,0,0.519172,0,0.085899,0.016534,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.083731,0,0.153365,0,0.404199,0,0.474880,0.285247,0,0,0.228170,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.181368,0,0.248623,0,0,0.289607,0,0.363668,0.014967,0,0.090927,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.392493,0,0,0.264997,0,0.398949,0.023838,0,0.190356,0,0,0.398581,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.417544,0,0.555832,0,0.368864,0,0,0.015757,0,0.394956,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["13: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-3.779485464096069,-1.90953803062439 ,-3.002427577972412,
  2.296669960021973,-3.724324703216553,-3.731995344161987,
 -3.832319736480713,-3.826018333435059,-2.97184419631958 ,
 -3.573519706726074];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p13=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p13.pdf", p13];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.257779,0,0.138332,0,0.049338,0,0.048272,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.344238,0.273111,0,0.507255,0,0.624465,0,0.587130,0,0.068378,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.051860,0.333028,0,0.461482,0,0.481178,0,0.217949,0,0,0.179026,0,0.021539,0.640628,0,0.676576,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.016908,0,0.625893,0,0.421900,0,0,0.256644,0,0.213265,0,0.249305,0,0.403793,0,0.390858,0,0.114333,0.756591,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.418809,0,0.660578,0,0,0.322861,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0,0.376285,0,0.006142,0.828943,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.808364,0,0.137813,0,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0,0.520213,0,0.361897,0.297097,0,0.832127,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.909626,0,0.021407,0,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.078170,0.661204,0,0.193968,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.624883,0,0.068623,0,0,0.259220,0,0.310196,0,0.363668,0,0.400719,0.057594,0,0.629076,0,0.329402,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.327589,0,0.712101,0,0.032062,0,0,0.085223,0.043446,0,0.383494,0,0.488673,0,0.107367,0,0,0.099956,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.016345,0.325387,0,0.493087,0,0.532589,0,0.400910,0,0,0.036133,0,0.200639,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["14: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 3.223716497421265,-4.83495044708252 ,-4.834254264831543,
 -4.706532001495361,-4.72553539276123 ,-4.733205795288086,
 -4.833530426025391,-4.827229022979736,-3.973054885864258,
 -4.574730396270752];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p14=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p14.pdf", p14];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.230872,0.407723,0,0.447621,0,0.505295,0,0.489171,0,0.027326,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.206166,0.201767,0,0,0.380090,0,0.206477,0.570618,0,0.058275,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.245317,0,0,0.004441,0,0.320874,0,0.009675,0.465025,0,0,0.178058,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.176783,0.289187,0,0,0.327282,0,0.363841,0.415386,0,0.080578,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.041390,0,0.063403,0,0,0.434003,0,0.108388,0.388610,0,0,0.318760,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.150397,0,0.304345,0,0.204199,0.469238,0,0,0.017694,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.252018,0,0.524771,0,0,0.289465,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0.494426,0,0,0.039055,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.171333,0.541106,0,0.058965,0,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.244507,0,0.698966,0,0.042151,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["15: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-1.905262231826782,-0.832743883132935,-1.958820462226868,
 -1.831098079681396,-1.850101470947266,-1.8577721118927  ,
 -1.958096623420715, 0.159245073795319,-1.097620964050293,
 -1.55679178237915 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p15=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p15.pdf", p15];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.024026,0.742925,0,0.606821,0,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.012809,0,0.744021,0,0.351643,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.342277,0.408405,0,0.352353,0,0,0.321613,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.400283,0.298825,0,0.507165,0,0,0.319223,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.117866,0,0.677912,0,0.156577,0,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.096390,0.601932,0,0.348208,0,0,0.403057,0,0.266967,0.181558,0,0.196799,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.281586,0,0.626148,0,0,0.176160,0.140632,0,0.464101,0,0.630260,0,0.759842,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.033495,0.629014,0,0.563302,0,0.350703,0,0.515317,0,0.231326,0,0.632614,0,0.641596,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.015681,0,0.731957,0,0.681961,0,0.628489,0,0.545360,0,0.524261,0,0.497703,0,0,0.065696,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.132062,0,0.566738,0,0.517956,0,0.412905,0,0.157301,0,0,0.153417,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["16: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-16.359706878662109,-16.624801635742188,-16.624105453491211,
 -16.285541534423828,-10.286486625671387,-11.831463813781738,
  14.960732460021973,-16.61707878112793 ,-15.762905120849609,
 -16.364582061767578];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p16=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p16.pdf", p16];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.142475,0.359571,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.464313,0.296034,0,0.775365,0,0,0.012014,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.412443,0.136660,0,0.512775,0,0.004353,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.289735,0.403636,0,0.577580,0,0,0.088897,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.345127,0.196247,0,0.553806,0,0,0.037555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.224187,0,0.562075,0,0,0.050545,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.107260,0.650557,0,0.205605,0,0,0.426840,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.592741,0,0.464314,0,0,0.348962,0,0.449738,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.098683,0.664415,0,0.018698,0,0,0.474201,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.194995,0,0.674460,0,0,0.338980,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.039132,0,0.339879,0,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["17: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-3.043201208114624, 1.23026442527771 ,-3.081420421600342,
 -2.969037055969238,-2.988040447235107,-2.995711088180542,
 -3.096035480499268,-3.089734077453613,-2.041526317596436,
 -2.837235450744629];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p17=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p17.pdf", p17];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0.501879,0,0.399231,0,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.536818,0,0.597851,0,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.497744,0,0.687604,0,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.455983,0,0.726165,0,0,0.426754,0,0.448233,0,0.434992,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.437657,0,0.553272,0,0,0.403703,0,0.314245,0,0.320874,0,0.157715,0,0.058505,0.067040,0,0,0.025762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.312539,0,0.434002,0,0,0.369637,0,0.330223,0,0.082469,0.488915,0,0.516852,0,0.803662,0,0.587767,0,0.013595,0,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.054480,0,0.673743,0,0,0.237577,0,0.359493,0.348475,0,0.152336,0,0,0.262878,0.030430,0,0.911538,0,0.219425,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.140358,0.523132,0,0.266243,0,0,0.109101,0.511395,0,0,0.229459,0,0.352680,0.210223,0,0.913576,0,0.219989,0,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0.377059,0,0.590253,0,0.543399,0,0.286025,0,0.124174,0,0.709794,0,0.704059,0,0.015757,0,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.351652,0,0.141016,0.229850,0,0.603445,0,0.248083,0,0.020485,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["18: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-7.479354858398438,-7.533608436584473,-7.532912731170654,
 -7.405190467834473,-4.026721000671387,-7.431864738464355,
  5.869540691375732,-7.525887489318848,-6.671713352203369,
 -7.273388862609863];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p18=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p18.pdf", p18];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.269187,0,0.339317,0,0.003616,0,0,0.160087,0,0.084508,0,0.106561,0,0.437850,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.632595,0,0.681775,0,0.428762,0,0.445317,0,0.499481,0,0.502656,0,0,0.023401,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.293949,0.132237,0,0,0.141477,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.421879,0,0.362200,0,0.202336,0,0.218495,0,0.229450,0,0.109578,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.214003,0.349630,0,0.349953,0,0.510065,0,0.621988,0,0.679262,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.154183,0,0,0.175739,0,0.266022,0,0.055892,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.094938,0.418085,0,0.310308,0,0,0.069564,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.301819,0,0.029070,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["19: 7 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-8.080297470092773,-8.134551048278809, 1.125545382499695,
 -6.48875617980957 ,-5.75636100769043 ,-8.032807350158691,
 -8.133131980895996,-2.031217575073242,-7.272655963897705,
 -7.874331474304199];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p19=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p19.pdf", p19];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.361368,0,0.386960,0,0.164075,0,0.014226,0,0,0.120708,0,0.025908,0.014118,0,0,0.204947,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.235853,0,0.692258,0,0.484008,0,0.139913,0,0.119414,0,0.124812,0,0.419013,0,0,0.000950,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.110206,0,0.303272,0,0,0.403703,0,0.314245,0,0.320874,0.449148,0,0,0.033995,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.175178,0,0,0.369637,0,0.330223,0,0.426586,0.316366,0,0,0.112560,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0.257238,0,0.026338,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0.394071,0,0.036536,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.427189,0.479163,0,0.020252,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.356702,0.553379,0,0,0.052437,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.194956,0.735635,0,0,0.013221,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.195092,0,0.816735,0,0,0.016504,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0.119506,0,0.386113,0,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["20: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-6.21306324005127 ,-5.73924732208252 ,-1.360117554664612,
 -6.023867607116699,-4.034225940704346,-6.108057022094727,
 -6.265897274017334, 4.494519233703613,-5.405421733856201,
 -5.47902774810791 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p20=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p20.pdf", p20];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.015875,0.232254,0,0.288448,0,0.103985,0,0,0.026568,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.043822,0,0.674859,0,0.682854,0,0.547919,0,0.478994,0,0.470981,0,0,0.279457,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.259905,0,0.718322,0,0.305599,0,0.089021,0,0.104224,0,0.102346,0,0,0.417617,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.395500,0,0.305233,0,0,0.370369,0,0.069147,0.241871,0,0.412874,0,0,0.213407,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.214500,0,0.621257,0,0.534285,0,0.658012,0,0.546943,0,0.434994,0,0.406068,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.037813,0,0.622762,0,0.612423,0,0.255213,0,0,0.300545,0,0.356488,0.545946,0,0.091214,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.262162,0,0.207287,0,0.404199,0,0.478801,0,0.460831,0.318889,0,0.249439,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0,0.416916,0.530056,0,0.120578,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.289507,0.306934,0,0.209132,0,0,0.029251,0.335732,0,0.539720,0,0,0.064662,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.051216,0,0.543067,0,0.580534,0,0.727792,0,0.300504,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.097650,0.063672,0,0.375484,0,0.189284,0,0,0.013563,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["21: 5 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-1.616111993789673,-1.670366048812866,-1.669670224189758,
 -0.465748310089111,-1.560951232910156,-1.269099473953247,
 -1.668946385383606,-1.662644863128662,-0.808470666408539,
 -0.811101496219635];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p21=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p21.pdf", p21];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.024410,0,0.248252,0,0.228495,0,0.077354,0,0,0.143455,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.091525,0,0.637755,0,0.551841,0,0.480954,0,0.507255,0,0.149955,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.103247,0.038933,0,0,0.171763,0.191479,0,0.535679,0,0.247089,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.032872,0.665401,0,0.588364,0,0.378750,0,0.020961,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.240225,0.621738,0,0.565571,0,0.504602,0,0.615872,0,0.658564,0,0,0.068115,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.101303,0.150311,0,0,0.262310,0,0.119233,0.630260,0,0.700038,0,0,0.055128,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0.236228,0,0.639477,0,0.307282,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.207786,0.263987,0,0.533084,0,0.521232,0,0,0.059814,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.025629,0,0.619944,0,0.209513,0,0.140267,0,0.486583,0,0.471729,0,0.340634,0,0,0.045574,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.282675,0,0.901857,0,0.763675,0,0.620824,0,0.406792,0,0,0.092015,0,0.231031,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0.079075,0,0.249917,0,0.422232,0,0.165095,0,0,0.078485,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["22: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-10.457436561584473, -7.201457977294922, -4.749987602233887,
   8.974620819091797,-10.402276039123535,-10.409946441650391,
 -10.510271072387695,-10.503969192504883, -9.649794578552246,
 -10.251470565795898];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p22=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p22.pdf", p22];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.365807,0,0.028850,0.014118,0,0.047994,0,0.099875,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.160087,0.439021,0,0.284616,0,0.071954,0,0.566697,0,0.284746,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.482572,0,0.221049,0,0,0.262050,0.207972,0,0.577770,0,0,0.128058,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0.518598,0,0.582522,0,0.553806,0,0.504602,0,0.247244,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.335617,0,0.125180,0.414161,0,0.151355,0,0,0.306015,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.166389,0,0.372179,0,0,0.381419,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.120980,0.594175,0,0,0.252680,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.326542,0,0.014034,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.583569,0,0,0.374580,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.792546,0,0.261711,0,0,0.102947,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0.425849,0,0.136656,0,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["23: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-6.45946216583252 ,-5.171875953674316,-6.513020038604736,
 -6.385297775268555,-6.404301166534424,-4.703415870666504,
 -3.02744197845459 ,-6.50599479675293 ,-5.651820659637451,
  3.39989185333252 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p23=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p23.pdf", p23];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.004803,0,0.167860,0,0.229476,0,0.251864,0,0.278113,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.634019,0,0.844467,0,0.694618,0,0.559684,0,0.488798,0,0.515099,0,0.632308,0,0,0.131498,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.405003,0,0.050675,0,0,0.301264,0,0.385488,0,0.059502,0.543523,0,0.078461,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.126990,0.616381,0,0.408952,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.269920,0.130363,0,0.607032,0,0.573414,0,0.512445,0,0.249205,0,0,0.121828,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.030814,0.683547,0,0.638893,0,0.315997,0,0,0.045643,0.105277,0,0.513593,0,0.620626,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.166269,0,0,0.133757,0,0.404199,0,0.478801,0,0.460831,0.147320,0,0.793557,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.100985,0,0.008239,0,0.184705,0,0.363668,0,0.449738,0,0.209073,0.582017,0,0.504892,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.335631,0,0.699709,0,0,0.340125,0,0.285966,0,0.083173,0.559262,0,0.611288,0,0.019651,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.222446,0,0.771518,0,0.628667,0,0.554831,0,0.590338,0,0.552302,0,0.075014,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.259487,0,0.395487,0,0.364652,0,0.130386,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["24: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-9.743810653686523,-7.160383224487305,-7.141263961791992,
  8.260994911193848,-9.688650131225586,-9.696320533752441,
 -9.796645164489746,-9.790343284606934,-8.936168670654297,
 -9.537844657897949];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p24=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p24.pdf", p24];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.200349,0,0.466187,0,0.553801,0,0.483896,0,0.441569,0,0.138191,0,0.504777,0,0.279162,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.506557,0,0.565403,0,0.369414,0,0.455204,0,0.535679,0,0.570618,0,0.748471,0,0.410890,0,0,0.017484,0,0.001330,0,0.000207,0.089892,0,0,0.023288,0,0.114304,0.011115,0,0,0.062526,0,0.308363,0,0.229697,0.306991,0,0.601299,0,0.747432,0,0.192866,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.327282,0.038120,0,0.504602,0,0.614891,0,0.282093,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.024820,0,0.446514,0,0.471944,0,0.340064,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0.135851,0,0.581095,0,0.513356,0,0.334267,0,0,0.274248,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.160789,0.147643,0,0.633922,0,0.627508,0,0.295360,0,0,0.431622,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.386611,0,0.691866,0,0.589287,0,0.269917,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.216008,0,0.899897,0,0.763675,0,0.360040,0,0,0.424580,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0.111428,0,0.878348,0,0.746742,0,0,0.051571,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["25: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-7.248705863952637,-5.504980087280273,-5.504284381866455,
 -5.376562118530273,-2.521308422088623,-7.201215744018555,
 -7.301539897918701, 5.645193099975586,-6.441064357757568,
 -7.042739868164062];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p25=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p25.pdf", p25];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0.470376,0,0.642115,0,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.089279,0,0.695001,0,0.082035,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.140316,0.393699,0,0.139608,0,0,0.352006,0,0.194243,0,0.052210,0.006730,0,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.055983,0,0,0.128737,0,0.145381,0.478237,0,0.351283,0,0.050385,0,0,0.351931,0,0.243686,0,0.014601,0.015849,0,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.007082,0,0.640657,0,0.353636,0,0.320717,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.184626,0.624481,0,0,0.004733,0,0.190312,0,0.249320,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.413939,0,0.360462,0,0,0.430081,0,0.469172,0,0.089821,0.114573,0,0,0.043099,0,0.058069,0.002759,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.087093,0,0.689799,0,0,0.179836,0.053644,0,0.454532,0,0.458777,0,0.639477,0,0.680811,0,0.689066,0,0.273910,0,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.277446,0,0.703525,0,0.248628,0,0.627508,0,0.354183,0,0.424261,0,0.585938,0,0.207833,0,0,0.036138,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.031709,0,0.562454,0,0.589287,0,0.517956,0,0.283494,0,0.139654,0,0,0.131849,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["26: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-2.905385732650757,-4.244990348815918,-4.244294166564941,
 -2.831221580505371,-1.107655048370361,-4.143245697021484,
  2.58092212677002 ,-4.237268924713135,-3.383094787597656,
 -3.98477029800415 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p26=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p26.pdf", p26];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.123742,0,0.472613,0,0.692060,0,0.508505,0,0.091924,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.120239,0.337755,0,0.553801,0,0.484876,0,0.353334,0,0.628387,0,0.278306,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.123835,0.528148,0,0.272355,0,0,0.183031,0,0.382948,0.574540,0,0.228863,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.344879,0,0.314245,0,0.320874,0,0.298891,0.605221,0,0.257236,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.426586,0.162445,0,0.571754,0,0,0.025750,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.266009,0,0.341846,0,0.435839,0.413120,0,0.248887,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.033155,0,0.361603,0,0.558426,0,0.661341,0,0.576193,0,0.457473,0,0.487208,0,0,0.248758,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.392530,0,0.759799,0,0.149604,0,0,0.060196,0.507901,0,0.515948,0,0.436025,0,0.459468,0,0,0.101971,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.678570,0,0.576807,0,0.222258,0,0.501051,0,0.482662,0,0,0.301800,0,0.340738,0.678935,0,0.366710,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.268949,0,0.896955,0,0.767597,0,0.289452,0,0,0.272620,0,0.409662,0,0.260443,0.280897,0,0.197585,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["27: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-12.973991394042969,-11.963984489440918, 11.363452911376953,
  -1.768586158752441,-12.918830871582031,-11.862240791320801,
 -13.026825904846191,-13.020524024963379,-12.166349411010742,
 -12.768025398254395];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p27=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p27.pdf", p27];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.057630,0.104966,0,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.097559,0,0.422429,0,0.347621,0,0,0.152548,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.195404,0.507560,0,0,0.273724,0,0.019306,0.338621,0,0,0.298990,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.171238,0.539435,0,0,0.266206,0,0.284599,0.476599,0,0,0.283015,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.278743,0.457814,0,0.236443,0,0,0.023645,0.233033,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.166989,0.526781,0,0.446514,0,0,0.237860,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.141880,0,0.513356,0,0,0.102008,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.266078,0.536332,0,0.053203,0,0.295829,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.021640,0,0.224819,0,0,0.315526,0.339654,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.346314,0,0.443067,0,0.467789,0,0,0.010443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.178821,0,0.173476,0,0,0.071575,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["28: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-2.708702802658081,-2.762956857681274,-2.762260913848877,
 -2.634538650512695,-2.653542041778564,-2.661212682723999,
 -2.761537075042725,-2.75523567199707 , 1.959364414215088,
 -2.502737045288086];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p28=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p28.pdf", p28];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0.116454,0,0.679370,0,0.067916,0,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.132289,0.577354,0,0.831054,0,0.319375,0,0,0.015450,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.055022,0.461347,0,0.423922,0,0.170543,0,0.790071,0,0.087986,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.048233,0.020890,0,0,0.379026,0,0.336244,0.666118,0,0.045203,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0,0.403793,0.027770,0,0.592530,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0.411950,0,0.329152,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.072971,0,0.084100,0,0.178754,0,0.384003,0,0.545643,0,0.200605,0.570456,0,0,0.000943,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0.207300,0,0.747861,0,0.615524,0,0.604505,0,0.306439,0,0.474232,0,0.366297,0,0.525443,0,0.432614,0,0.248458,0,0.007693,0,0,0.011384,0,0.000181,0,0.000037,0.409973,0,0.708216,0,0.095093,0,0.102545,0,0.194706,0,0.568685,0,0.377713,0,0,0.034563,0.224174,0,0.696069,0,0.323666,0,0,0.008753,0,0.000282,0,0.000004,0.020035,0,0.358962,0,0.578768,0,0.463434,0,0.267718,0,0,0.109495,0,0.484153,0,0.440738,0,0.264202,0,0.069564,0,0.024613,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["29: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-6.775813102722168,-8.761292457580566, 7.096500873565674,
 -5.97598934173584 ,-8.651878356933594,-8.659548759460449,
 -8.759873390197754,-8.753571510314941,-7.899397373199463,
 -8.501072883605957];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p29=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p29.pdf", p29];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.112348,0,0.196764,0,0.344467,0,0.194618,0,0.059684,0,0,0.011202,0,0.109411,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.287814,0,0.593238,0,0.237930,0,0.073246,0,0.051766,0,0.127753,0,0.543523,0,0,0.233303,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.132638,0.596207,0,0,0.139877,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.175606,0.512445,0,0,0.125305,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.294663,0.479787,0,0,0.110917,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.166056,0.539169,0,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.050262,0,0.416418,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.020428,0.310242,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.278573,0,0.552302,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.380386,0,0.930460,0,0.162907,0,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0.175389,0,0.368466,0,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["30: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-6.235372543334961,-3.764497518539429,-3.534382820129395,
 -5.22852611541748 ,-5.069278240203857,-5.721541404724121,
 -6.288206577301025, 3.344765663146973,-5.427731037139893,
 -3.149865627288818];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p30=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p30.pdf", p30];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.158161,0.435061,0,0.601216,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.141221,0.782228,0,0.028182,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.179695,0,0.214900,0,0.434992,0,0.392752,0.413756,0,0.291608,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.257512,0.425709,0,0.049481,0,0,0.320874,0.135423,0,0.437574,0,0,0.194725,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.083540,0.431060,0,0.490167,0,0,0.298851,0,0.166782,0.456562,0,0,0.198834,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.556441,0,0.675704,0,0.596736,0,0.160115,0,0.367102,0,0.362140,0,0.196926,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.002779,0,0,0.000397,0.097615,0,0.470311,0,0.418258,0,0.156816,0,0,0.061503,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.185686,0.610842,0,0,0.292876,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.136345,0,0.195407,0,0,0.519447,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.377687,0,0.049929,0,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["31: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-14.24705696105957 ,-14.827837944030762, -8.95534610748291 ,
 -14.172892570495605, 12.745237350463867,-14.726094245910645,
 -13.773364067077637, -8.948320388793945,-13.9659423828125  ,
 -14.567618370056152];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p31=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p31.pdf", p31];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.117298,0,0.148519,0,0.224630,0,0.013163,0.014118,0,0.106818,0,0,0.043263,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.236375,0,0.566361,0,0.565403,0,0.481178,0,0.435596,0,0.414111,0,0.457873,0,0.741608,0,0.324615,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.365928,0,0.870991,0,0.425821,0,0,0.148801,0,0.207382,0,0.230678,0,0.128303,0,0.353603,0.297432,0,0.516395,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.629593,0,0.850774,0,0.427139,0,0.215657,0,0.408992,0,0.435178,0,0.504602,0,0.115872,0,0,0.095358,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.266207,0,0.688794,0,0.658056,0,0.424187,0,0.315997,0,0.261220,0,0.471944,0,0.218495,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0.003552,0,0.531326,0,0,0.002680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.133595,0,0.502692,0,0,0.186611,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.096239,0,0.473968,0,0,0.201457,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.072691,0,0.708184,0,0.073053,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.545092,0,0.753009,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0.282251,0,0.265525,0,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["32: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-2.850748300552368,-2.905002355575562,-2.904306411743164,
 -2.776584148406982,-2.795587539672852,-2.066482782363892,
 -2.903582572937012,-2.897281169891357,-2.043107032775879,
  1.499734401702881];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p32=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p32.pdf", p32];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.039404,0.393038,0,0.709036,0,0.241240,0,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.070937,0,0.048540,0,0,0.098159,0.333896,0,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.165881,0.374812,0,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0.162226,0,0.227165,0,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.445267,0,0,0.143253,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.109481,0,0.504232,0,0,0.152506,0,0.385899,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0.014282,0,0.197762,0,0.288846,0,0.442110,0,0,0.253660,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.296797,0.537006,0,0,0.186611,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.461456,0,0.041996,0.362203,0,0,0.213221,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.320352,0.134243,0,0.458965,0,0,0.180051,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["33: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-2.63526463508606 ,-1.119240522384644,-2.402326107025146,
  1.152449131011963,-2.580103874206543,-2.587774515151978,
 -2.688098907470703,-2.681797504425049,-1.82762336730957 ,
 -2.429298877716064];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p33=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p33.pdf", p33];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.067210,0,0.655694,0,0.807744,0,0.619821,0,0,0.095034,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.103626,0,0.371918,0,0,0.120088,0,0.006003,0.233896,0,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0.525792,0,0,0.380007,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.173068,0.645793,0,0,0.324381,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.138404,0,0.569492,0,0.384013,0,0,0.089030,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0,0.246684,0.438103,0,0,0.135256,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.302222,0,0.071988,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.194514,0,0.213137,0,0.363668,0,0.449738,0,0.357112,0.503585,0,0,0.096088,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.183625,0.233404,0,0,0.214397,0,0.022389,0.466124,0,0.253445,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.038980,0.457773,0,0.470730,0,0.103282,0,0,0.110280,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["34: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-0.778489828109741,-0.832743883132935,-3.361696720123291,
  1.825323104858398,-3.252977848052979,-0.730999708175659,
 -3.360972881317139,-3.354671478271484,-2.500497341156006,-3.1021728515625  ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p34=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p34.pdf", p34];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.443332,0,0.091855,0,0.339811,0,0.326441,0,0.066235,0.322654,0,0.534477,0,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.397820,0.207324,0,0.179126,0,0.133462,0,0.243456,0,0.323902,0,0.221297,0,0,0.003970,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.231685,0.137226,0,0,0.102772,0,0.426586,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.279625,0,0.249677,0,0.087566,0,0,0.373094,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.364003,0.139826,0,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.216662,0,0,0.167063,0.001569,0,0.211822,0,0,0.247778,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.267003,0,0.321277,0,0,0.019537,0,0.445770,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["35: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-5.459064483642578,-5.51331901550293 ,-5.512622833251953,
 -5.384900569915771,-5.403903961181641, 3.949575185775757,
 -5.511898994445801,-5.505597591400146,-4.651423454284668,
 -5.253098964691162];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p35=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p35.pdf", p35];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0.060288,0,0.792925,0,0.414664,0,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.187042,0.445162,0,0.490099,0,0.001643,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.045218,0.479974,0,0,0.269215,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.394401,0.466472,0,0.163047,0,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.102180,0,0.626932,0,0,0.113031,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.286587,0.485265,0,0.382522,0,0,0.426586,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.062958,0,0.631050,0,0.011095,0,0,0.150545,0.048414,0,0.178299,0,0,0.049962,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.321171,0,0.670164,0,0.554625,0,0.515317,0,0.531326,0,0.639477,0,0.349439,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.231957,0,0.681961,0,0.628489,0,0.544379,0,0.533084,0,0.483978,0,0,0.036284,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.170879,0.267718,0,0.393446,0,0.231533,0,0,0.107405,0,0.194594,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["36: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[ -9.823434829711914,-12.316962242126465,-12.316267013549805,
  -9.749270439147949, -8.83551025390625 , -7.25303840637207 ,
  10.652894020080566,-12.30924129486084 ,-11.455066680908203,
 -12.056742668151855];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p36=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p36.pdf", p36];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.391297,0,0.178850,0,0.357450,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.246362,0.357649,0,0.481675,0,0,0.186870,0,0.421539,0,0.016235,0.547164,0,0.163888,0,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.090527,0,0.506101,0,0.576931,0,0,0.122835,0,0.369479,0.134633,0,0.710177,0,0.210513,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.002142,0,0.441951,0,0.654590,0,0.515657,0,0,0.155713,0,0.306978,0.262445,0,0.603127,0,0.251701,0,0.094630,0,0.215556,0,0,0.000064,0,-0.000000,0,0.000755,0.437775,0,0.831931,0,0.671782,0,0.627128,0,0.325801,0,0.367102,0,0.468022,0,0.612613,0,0.699057,0,0.826244,0,0.158641,0,0,0.000105,0,0.000005,0,0.001523,0.129234,0,0.372387,0,0.395681,0,0.626047,0,0.585997,0,0.506493,0,0.129365,0,0.078693,0,0.033753,0,0,0.034464,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.140592,0.604510,0,0.575548,0,0,0.186993,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.360493,0,0.585365,0,0,0.029103,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.655832,0,0.339452,0,0,0.385365,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.017330,0,0,0.090787,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["37: 4 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-3.350514650344849,-3.404768705368042,-3.404072761535645,
 -3.276350498199463,-2.687964916229248,-3.303024530410767,
  1.534704089164734,-3.397047519683838,-2.542873382568359,
 -3.144548892974854];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p37=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p37.pdf", p37];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0.029189,0,0.366230,0,0.679223,0,0.730293,0,0.545311,0,0,0.187191,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.494701,0,0.457548,0,0.123878,0,0,0.252441,0.148899,0,0,0.402379,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.192440,0.358629,0,0,0.434992,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.092806,0.493356,0,0,0.045618,0,0.320874,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.083540,0.602629,0,0.601932,0,0.348208,0,0.170472,0,0,0.057163,0,0.171383,0,0.177711,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.161551,0,0.087577,0,0.065376,0,0.170153,0.183708,0,0.542024,0,0.668665,0,0.018401,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.341895,0.544537,0,0.441027,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.232749,0,0.310196,0,0.363668,0,0.449738,0,0.459073,0,0.334650,0.537245,0,0.301117,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.148683,0.392846,0,0,0.260713,0,0.401652,0,0.365526,0,0.083876,0.523053,0,0.433377,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.073633,0.473479,0,0.550236,0,0.546988,0,0.437397,0,0.483675,0,0.291681,0,0,0.028886,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["38: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-1.823482275009155,-1.877736330032349,-4.594925403594971,
  1.360927581787109,-2.788582324981689,-1.775992155075073,
 -4.594201564788818,-4.587900161743164,-3.733726024627686,
 -4.33540153503418 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p38=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p38.pdf", p38];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.183234,0,0.446291,0,0.722613,0,0.629315,0,0.134976,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.124859,0,0.671089,0,0.547919,0,0.174092,0,0,0.014313,0.587210,0,0,0.051106,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.058518,0,0.222266,0,0,0.080586,0,0.396757,0,0.429026,0.500030,0,0.013177,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0,0.380264,0.516005,0,0.041550,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.426586,0,0.395398,0.611950,0,0.026211,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.264493,0,0.024832,0.099330,0,0,0.059368,0,0.005507,0.568495,0,0,0.163688,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.009966,0.622152,0,0.398596,0,0.109527,0,0.342767,0,0.527404,0,0.266928,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.620583,0,0.248623,0,0,0.310196,0,0.363668,0.149281,0,0.529163,0,0.566330,0,0.236265,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.739552,0,0.046768,0,0,0.138164,0.229721,0,0.411925,0,0,0.146621,0.246583,0,0.793181,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.337152,0,0.722499,0,0.598275,0,0.233263,0,0,0.232211,0,0.260443,0,0.112241,0.078957,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["39: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-7.909629821777344,-4.297660827636719, 6.299091815948486,
 -6.778757572174072,-7.854468822479248,-4.195917129516602,
 -7.962463855743408,-7.956162452697754,-7.101988315582275,
 -7.70366382598877 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p39=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p39.pdf", p39];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.105382,0.446939,0,0.453503,0,0.075883,0,0,0.345143,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.168933,0.456580,0,0.184119,0,0,0.059502,0.424895,0,0.160814,0,0,0.241725,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.096656,0.451311,0,0.448258,0,0,0.179931,0,0.320874,0,0.107715,0.597378,0,0,0.174137,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.091951,0,0.655570,0,0,0.018656,0,0.330223,0,0.426586,0,0.163045,0.597244,0,0,0.146338,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.150422,0,0.139983,0,0.355224,0,0.434003,0,0.545643,0.188610,0,0.220456,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.104291,0.476424,0,0,0.230131,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.411046,0,0.018378,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.079103,0.381533,0,0,0.304464,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.344862,0.446008,0,0.124652,0,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.035885,0.825436,0,0.311759,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["40: 7 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.757454872131348,-4.798661231994629,-4.590452194213867,
 -5.683290481567383,-5.649203300476074,-5.082991600036621,
 -5.810288906097412,-2.104766845703125,-4.949813365936279,
  0.707220017910004];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p40=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p40.pdf", p40];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0.198831,0,0.377352,0,0.246291,0,0.137319,0,0,0.091273,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.415055,0,0.683834,0,0.542037,0,0.309386,0,0.431765,0,0.225445,0,0,0.189341,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.298322,0,0.448233,0,0.128129,0.454307,0,0.538265,0,0,0.102509,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.380173,0,0.050519,0.600695,0,0.552089,0,0,0.022230,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0.009775,0,0.661934,0,0.426355,0,0,0.315006,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.310126,0.167958,0,0.305337,0,0.036650,0,0,0.332485,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.471938,0,0.153968,0.351242,0,0,0.178012,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.021941,0,0,0.000005,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0,0.178680,0.636919,0,0.039206,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.388374,0,0.502297,0,0,0.300291,0,0.402870,0,0.474201,0.019768,0,0.536713,0,0.687759,0,0.025534,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.032675,0,0.609701,0,0.343087,0,0.377687,0,0.455812,0,0.537397,0,0.482694,0,0.052465,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.012662,0,0.240860,0,0.294507,0,0.239162,0,0,0.018634,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["41: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-17.744470596313477, -9.427705764770508,-13.128522872924805,
  16.261653900146484,-17.689310073852539,-17.530637741088867,
 -17.797304153442383,-17.79100227355957 ,-16.93682861328125 ,
 -17.538505554199219];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p41=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p41.pdf", p41];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.093769,0.415206,0,0.369488,0,0.241739,0,0.383726,0,0.385249,0,0.558698,0,0.685045,0,0.514574,0,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.023630,0,0.401655,0,0.435991,0,0.310590,0,0.290498,0,0.439601,0,0.472579,0,0.650432,0,0.752066,0,0.652124,0,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.753343,0,0.673860,0,0.264925,0,0,0.314245,0,0.320874,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.848813,0,0.633021,0,0.058794,0,0,0.311596,0,0.426586,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.261343,0,0.570802,0,0.627128,0,0.513056,0,0.228867,0,0,0.293743,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.247456,0,0.084738,0.035997,0,0.396689,0,0.532306,0,0.151242,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.140201,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0.183084,0,0.615350,0,0.010774,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.448376,0,0,0.094409,0,0.402870,0,0.474201,0,0.417487,0.337693,0,0.724033,0,0.068671,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.507740,0,0.572499,0,0.289452,0,0.316596,0,0.552103,0,0.675831,0,0.338740,0,0,0.019082,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.145015,0,0.597722,0,0.646468,0,0.514652,0,0.171563,0,0,0.036206,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["42: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-12.961082458496094,-15.083245277404785,-15.082550048828125,
 -12.886918067932129,-14.973831176757812, 13.519501686096191,
 -15.081826210021973,-13.007615089416504,-14.221349716186523,
 -14.823025703430176];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p42=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p42.pdf", p42];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.144885,0.227515,0,0.123432,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.314826,0.477033,0,0.254314,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.129606,0.553243,0,0.282738,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0.140657,0,0.671283,0,0.220717,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.410953,0,0.561649,0,0,0.056183,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.349342,0.355213,0,0.446514,0,0,0.242762,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.259247,0.580115,0,0.404532,0,0,0.407890,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.247450,0.620646,0,0.468889,0,0,0.382602,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.340125,0.514034,0,0.471729,0,0,0.318189,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.308587,0.539145,0,0.496220,0,0,0.191816,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.092748,0.184260,0,0.281366,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["43: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-3.763317346572876, 2.1520836353302  ,-2.340855598449707,
 -3.68915319442749 ,-3.708156585693359,-3.715827226638794,
 -2.30734395980835 ,-3.809850215911865,-2.955676078796387,
 -3.557351589202881];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p43=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p43.pdf", p43];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.507281,0,0.407450,0.069563,0,0.276345,0,0,0.061034,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.028010,0,0.001081,0,0,0.188541,0,0.166950,0,0.053135,0.333635,0,0.535679,0,0.570618,0,0.748471,0,0.185399,0,0,0.017484,0,0.001330,0,0.000207,0.006558,0,0.806124,0,0.877853,0,0.645429,0,0.588454,0,0.679873,0,0.671283,0,0.588364,0,0.601299,0,0.725863,0,0.087964,0,0,0.010833,0,0.000623,0,0.000061,0.188813,0,0.882535,0,0.850774,0,0.491845,0,0.213696,0,0.062914,0,0,0.152077,0.227151,0,0.615872,0,0.293858,0,0,0.066155,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.004382,0,0.109246,0,0.310571,0,0.361107,0,0.434003,0,0.193682,0.465081,0,0.591044,0,0,0.127413,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0.192767,0,0.534267,0,0.339477,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.287197,0.502222,0,0.505633,0,0,0.165042,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0.083642,0,0.471729,0,0.158281,0,0,0.247535,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.472478,0,0.582495,0,0.196420,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.035240,0,0.398033,0,0.197127,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["44: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-10.627717971801758,-10.438216209411621, -5.844048500061035,
 -10.553553581237793, -6.9028000831604  ,-10.580227851867676,
 -10.68055248260498 ,  9.024205207824707, -9.820075988769531,
 -10.421751976013184];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p44=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p44.pdf", p44];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0.124321,0,0,0.105001,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0.299255,0,0.055288,0,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.407548,0,0.837604,0,0,0.175970,0,0.440316,0,0.511202,0,0.484901,0,0.367692,0.277326,0,0.739947,0,0.049868,0,0,0.000977,0,0.000234,0,0.003641,0.023108,0,0.884415,0,0.521263,0,0,0.364009,0,0.448233,0,0.434992,0,0.456477,0,0.375460,0.696510,0,0.338341,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.221810,0,0.677853,0,0,0.298689,0,0.399781,0,0.314245,0,0.320874,0,0.403793,0.197378,0,0.721942,0,0.049729,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.124691,0,0.832147,0,0,0.262077,0,0.369637,0,0.330223,0,0.372665,0,0.077751,0.597244,0,0.222289,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.706441,0,0.485507,0,0.266344,0,0.193448,0,0.351416,0,0.475865,0,0.285162,0,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.029574,0.239799,0,0.328988,0,0.144821,0,0.187866,0,0.481326,0,0,0.243856,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.263668,0.499281,0,0.044849,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0.065995,0,0.418788,0,0,0.199562,0,0.215182,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.074439,0,0.587397,0,0.616028,0,0,0.033809,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.002995,0.349994,0,0.027519,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["45: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-3.053483247756958,-4.410515785217285,-3.107041358947754,
 -4.357226371765137, 2.779314517974854,-3.005993127822876,
 -3.106317520141602,-4.327666282653809,-3.623749256134033,
 -4.150296211242676];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p45=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p45.pdf", p45];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.211264,0.137135,0,0.195660,0,0.327844,0,0.435249,0,0.283208,0,0,0.000249,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.201286,0.406580,0,0.371374,0,0,0.067345,0,0.406477,0,0.412715,0.009255,0,0.708929,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.002292,0,0.568846,0,0.280853,0,0.104616,0,0.391305,0,0,0.373211,0,0.215313,0,0.017918,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.085606,0,0.044147,0,0.330223,0,0.426586,0.202641,0,0,0.254716,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0.169983,0,0,0.055035,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0.229365,0,0,0.128170,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.248435,0,0.253333,0,0.363668,0,0.346797,0.348770,0,0,0.315042,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.187944,0,0,0.301890,0,0.468319,0.144278,0,0.036713,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.545048,0,0,0.279176,0.164635,0,0.316809,0,0,0.243776,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.714389,0,0.859213,0,0.374456,0,0,0.104908,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["46: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-1.6202552318573  ,-1.88849663734436 ,-1.40057384967804 ,
 -1.546091079711914,-1.711285591125488,-0.649700880050659,
 -1.8870769739151  ,-0.692334115505219,-1.026601314544678,
 -1.628276824951172];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p46=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p46.pdf", p46];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.641720,0,0.848831,0,0.628332,0,0.401193,0,0.403985,0,0.152844,0,0,0.142475,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.049315,0,0.149651,0,0.305382,0,0.440316,0,0.509242,0,0.072156,0.062700,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.434992,0,0.073144,0.343167,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.295384,0.343266,0,0,0.066348,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0.219492,0,0.262445,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.158513,0.372004,0,0,0.380017,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.147483,0.486978,0,0,0.225860,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.198435,0.555491,0,0.195156,0,0,0.449738,0,0.459073,0,0.355238,0,0.182363,0,0.038098,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.260493,0,0.410855,0,0,0.287926,0,0.193957,0.122007,0,0.480896,0,0.586318,0,0.256759,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.154852,0,0.543373,0,0.380322,0,0.304063,0,0.093479,0,0,0.070084,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["47: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-6.599186897277832,-5.832439422607422, 5.662570953369141,
 -3.094421863555908,-7.365448951721191,-4.733543395996094,
 -7.473443984985352,-7.467142581939697,-6.612968444824219,
 -7.214643955230713];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p47=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p47.pdf", p47];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.021668,0.358056,0,0.628495,0,0.745981,0,0.834976,0,0.892905,0,0.031608,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.280741,0,0.673050,0,0.551841,0,0.323111,0,0.048432,0,0.084269,0,0.073404,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.054801,0.545773,0,0.446776,0,0,0.157057,0,0.416364,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.272951,0,0.677782,0,0,0.237036,0,0.314245,0,0.320874,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.397833,0,0.659492,0,0.248010,0,0.054091,0,0,0.042273,0,0.103242,0,0.140010,0,0.093397,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.080951,0,0.368841,0,0.529089,0,0.456193,0,0.344553,0,0.369983,0,0.561632,0,0.762783,0,0.383107,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.282092,0.688655,0,0.903772,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.136279,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0,0.237504,0.298683,0,0.807833,0,0.414843,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.715042,0,0.440885,0,0.132424,0,0.097368,0,0.269768,0,0.522987,0,0.713249,0,0.430436,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.132250,0,0.434263,0,0.539452,0,0.546988,0,0.486416,0,0.301322,0,0,0.015182,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["48: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-5.347929000854492,-8.426953315734863,-8.426258087158203,
 -5.273764610290527,-7.953400135040283, 6.134932518005371,
 -7.697256565093994,-5.394461631774902,-7.56505823135376 ,
 -8.166733741760254];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p48=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p48.pdf", p48];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.146959,0,0.600213,0,0.268691,0,0,0.087352,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.358344,0,0.550860,0,0.481935,0,0.494510,0,0.155838,0,0,0.190321,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.203247,0.491874,0,0.547845,0,0.501283,0,0.077836,0,0.232383,0,0,0.073098,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.140527,0,0.592376,0,0.681833,0,0.007558,0,0,0.403793,0,0.083015,0.004295,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.190864,0,0.626442,0,0.665855,0,0.004786,0,0,0.100300,0,0.251775,0,0.168887,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.235081,0.452619,0,0.562075,0,0.450436,0,0.475865,0,0.301828,0,0,0.176433,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.012189,0.591880,0,0.253552,0,0,0.030439,0.561046,0,0.160223,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0.335883,0,0.592214,0,0,0.406601,0,0.459073,0.241821,0,0.318617,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.283625,0.500071,0,0.521877,0,0.174670,0,0.137693,0,0.465210,0,0,0.044074,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.074274,0.436204,0,0.442299,0,0.341518,0,0,0.020084,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["49: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-2.212623834609985,-2.266877889633179,-2.266181945800781,
 -2.1384596824646  ,-2.157463073730469,-2.165133714675903,
 -2.265458106994629,-2.259156703948975, 1.463285446166992,
 -2.00665807723999 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p49=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p49.pdf", p49];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.574574,0,0.745981,0,0.633996,0,0,0.057095,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.293617,0.016546,0,0.449582,0,0.507255,0,0.624465,0,0.222424,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.186580,0.254619,0,0.543923,0,0.557165,0,0.518032,0,0.334344,0,0.501412,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.102539,0.367978,0,0.584533,0,0.161245,0,0.245793,0,0,0.048891,0,0.260466,0.770961,0,0.120317,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.269402,0,0.659492,0,0.148991,0,0,0.330223,0,0.426586,0,0.487555,0,0.254716,0.807583,0,0.316198,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.008303,0.632911,0,0.527664,0,0,0.348362,0,0.434003,0,0.545643,0,0.520213,0.016534,0,0.800038,0,0.051735,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.335116,0,0.839054,0,0.158426,0,0,0.321993,0,0.404199,0,0.478801,0,0.450047,0.352222,0,0.714145,0,0,0.017797,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.340569,0,0.828427,0,0.025094,0,0,0.310196,0,0.363668,0,0.345817,0.056614,0,0.636919,0,0.434304,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.171707,0,0.782689,0,0.642846,0,0.410855,0,0.249328,0,0.445258,0,0.544556,0,0.352465,0,0,0.073486,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.126367,0,0.335244,0,0.612001,0,0.317576,0,0.116809,0,0,0.156521,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["50: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[  9.985483169555664,-11.59671688079834 ,-11.59602165222168 ,
 -11.46829891204834 ,-11.487302780151367,-11.494973182678223,
 -11.595297813415527,-11.588995933532715,-10.734821319580078,
 -11.33649730682373 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p50=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p50.pdf", p50];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.318748,0.106445,0,0.319020,0,0.476426,0,0.188110,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.248345,0.056580,0,0.439021,0,0,0.039894,0,0.408438,0,0.417617,0,0.220156,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.085625,0,0.447278,0,0,0.124049,0,0.320874,0,0.286146,0.212084,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.459492,0,0.215657,0,0.104091,0,0.294982,0,0.499700,0,0.481558,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.257076,0,0.525168,0,0.215017,0,0,0.211329,0.318022,0,0,0.016799,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.402238,0.165317,0,0.245051,0,0,0.322288,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.027394,0.542418,0,0,0.346328,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.321498,0.463054,0,0,0.055722,0,0.439758,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.217697,0.296315,0,0.297969,0,0,0.393976,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.378115,0,0.821958,0,0,0.012799,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["51: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.984785079956055,-3.41680645942688 ,-6.03834342956543 ,
 -5.910621166229248,-5.929624557495117,-5.937294960021973,
 -4.502764701843262,-6.031318187713623,-5.177144050598145,
  4.633771419525146];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p51=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p51.pdf", p51];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.219107,0,0.284434,0.241739,0,0.379804,0,0,0.120633,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.158149,0,0.170871,0,0.140390,0,0.180090,0,0.105497,0,0.243107,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0.160913,0,0,0.373211,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.355998,0,0.076771,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.407532,0,0.177015,0,0.330998,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.274787,0.229042,0,0,0.443184,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.053864,0,0.125229,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.333262,0,0.014397,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.009568,0,0.374580,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.068311,0,0.747448,0,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["52: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-1.638407945632935,-0.862645864486694,-1.12553608417511 ,
 -1.020185470581055,-1.575716972351074,-1.590917825698853,
 -1.691242337226868,-0.537020146846771,-0.830766618251801,
 -0.860526621341705];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p52=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p52.pdf", p52];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.360905,0,0.020026,0.311177,0,0.520543,0,0.407718,0,0,0.034563,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.234597,0.431178,0,0.444420,0,0.045483,0,0.092187,0,0.654353,0,0.273635,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.107441,0.091507,0,0.565905,0,0.354382,0,0,0.226756,0,0.403793,0,0.328113,0.717040,0,0.355611,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.393911,0,0.625178,0,0,0.000029,0,0.330223,0,0.426586,0,0.108143,0.454107,0,0.772289,0,0.389728,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.011305,0,0.816245,0,0.140409,0,0,0.361107,0,0.391846,0.019063,0,0.452336,0,0.472416,0,0,0.008786,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.001783,0,0.821406,0,0.565289,0,0.465262,0,0.569331,0,0.345709,0,0.529365,0,0,0.058562,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.028427,0,0.099604,0,0,0.021960,0,0.252884,0.007124,0,0.473280,0,0,0.302297,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.288907,0.460945,0,0,0.128974,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.094047,0,0.533475,0,0,0.145737,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.597986,0,0.448033,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["53: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.243070602416992,-5.297324180603027,-5.296628475189209,
 -5.168906211853027,-5.187909603118896,-5.19558048248291 ,
 -5.295904636383057,-5.289603233337402,-4.435429096221924,
  3.892056465148926];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p53=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p53.pdf", p53];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.014205,0.475370,0,0.406445,0,0,0.366274,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.073835,0.511482,0,0.524316,0,0.552263,0,0,0.249615,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.036853,0.541507,0,0.584533,0,0.046539,0,0.429126,0,0.176599,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.259598,0,0.655570,0,0.618598,0,0.592326,0,0.538120,0,0.366366,0,0,0.213540,0,0.001240,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.117225,0,0.456096,0,0.416344,0,0.380703,0,0.383769,0,0.468022,0,0.626338,0,0.657881,0,0,0.039442,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.056252,0.529365,0,0.090457,0,0.418066,0,0.049850,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.225229,0.360535,0,0,0.352297,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.453761,0.547497,0,0,0.244594,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.342995,0.727792,0,0.116191,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.110790,0.789284,0,0.351143,0,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["54: 4 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-8.824224472045898,-6.750362396240234,-8.877782821655273,
 -8.416996955871582,-4.81642484664917 ,-7.150742530822754,
 -8.877058982849121,-8.870757102966309,-8.016582489013672,
  3.187508583068848];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p54=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p54.pdf", p54];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.121505,0,0.027548,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0.010366,0,0.175883,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0.283635,0,0.064111,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0.588930,0,0,0.131244,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.107674,0.547923,0,0,0.384614,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.069297,0.166122,0,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.435997,0,0,0.077821,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.167058,0.525548,0,0,0.409542,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.177522,0,0.280701,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.180628,0,0.201890,0,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.115095,0,0,0.044171,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["55: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-4.702299118041992, 1.870804071426392,-3.675524711608887,
 -3.547802448272705,-4.647138118743896,-4.514880180358887,
 -1.981620907783508,-2.588167190551758,-3.894657611846924,
 -4.496333122253418];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p55=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p55.pdf", p55];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.011328,0,0.604713,0,0.334214,0,0.281585,0,0.097123,0,0,0.190293,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.020883,0.705251,0,0.627952,0,0.537135,0,0.449582,0,0.456275,0,0.099955,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.299303,0,0.275684,0.009126,0,0.517052,0,0.537285,0,0,0.124078,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.377232,0,0.132872,0.301675,0,0.581501,0,0.582672,0,0,0.027078,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.005570,0,0.530363,0,0.658012,0,0.563610,0,0.482053,0,0,0.055697,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.108610,0.443795,0,0.455213,0,0.447494,0,0.469983,0,0.376338,0,0,0.148982,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.385571,0,0.243507,0.365639,0,0.635556,0,0.247478,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.107838,0,0.015290,0,0,0.310196,0,0.363668,0,0.449738,0,0.339465,0.632997,0,0.328421,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.185631,0,0.666375,0,0.366738,0,0.043446,0,0.025651,0,0.406321,0,0.724033,0,0.338279,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.008773,0,0.337491,0,0.468557,0,0.552103,0,0.605243,0,0.314230,0,0,0.026925,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["56: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-6.825850486755371,-4.108776092529297,-5.298794746398926,
  5.343034744262695,-6.770689487457275,-6.778360366821289,
 -6.878684520721436,-6.872383117675781,-6.018208980560303,
 -6.619884490966797];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p56=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p56.pdf", p56];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0.046087,0,0.446562,0,0.091944,0,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.109903,0.537468,0,0.594181,0,0.361668,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.053421,0.308703,0,0,0.471987,0,0.081960,0,0.180437,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.081089,0,0.055688,0,0,0.297737,0.358229,0,0,0.289186,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.009585,0.492618,0,0.329126,0,0.113854,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.317676,0.617816,0,0.544002,0,0,0.383634,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.312423,0,0.385605,0,0.313181,0,0.078806,0,0,0.359936,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.009221,0.540753,0,0,0.329689,0,0.403311,0.388188,0,0,0.122288,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.189800,0,0.393726,0,0,0.134256,0,0.319346,0.267398,0,0.091821,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.005193,0.560855,0,0.518936,0,0.471729,0,0.495536,0,0,0.059300,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.284078,0,0.086345,0.025632,0,0,0.174169,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["57: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-0.778489828109741,-0.832743883132935,-0.832048058509827,
 -0.704325675964355,-0.723329126834869,-0.730999708175659,
 -0.831324219703674,-0.825022637844086, 0.029151486232877,
 -0.572524130344391];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p57=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p57.pdf", p57];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.135774,0,0.292277,0,0.341595,0,0.186862,0.050936,0,0,0.144243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.211090,0.419325,0,0.475296,0,0.528733,0,0.535679,0,0.570618,0,0.192589,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.104253,0,0.588454,0,0.668108,0,0.572263,0,0.578560,0,0.601299,0,0.260177,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.242469,0.464677,0,0,0.103753,0,0.376586,0.396758,0,0.526656,0,0,0.135554,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.221891,0,0.434003,0,0.027015,0.471944,0,0,0.005035,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.153218,0.484924,0,0.083287,0,0,0.342876,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.260196,0.501038,0,0.413987,0,0,0.410053,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.015757,0,0.488544,0,0,0.292977,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0.506118,0,0.248949,0,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.136938,0,0.879801,0,0.679358,0,0.079406,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0.224309,0,0.485653,0,0.114107,0,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["58: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-4.826136589050293,-2.647735834121704,-4.87969446182251 ,
 -4.751972198486328,-4.136975288391113,-4.778646469116211,
 -4.878970623016357, 2.462471961975098,-4.018495082855225,
 -3.860018730163574];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p58=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p58.pdf", p58];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.194054,0.079315,0,0,0.134632,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.271068,0,0.019728,0.319190,0,0.381765,0,0,0.327496,0.217522,0,0.320339,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.006557,0,0.461482,0,0.465492,0,0,0.002639,0,0.429026,0.101010,0,0.744550,0,0.346184,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.297390,0,0.547278,0,0,0.177970,0,0.211070,0.354050,0,0.516986,0,0.106255,0,0,0.070860,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.215018,0.522520,0,0.493306,0,0.467531,0,0.267347,0,0,0.298834,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.037577,0.556193,0,0.444553,0,0.042532,0,0,0.356015,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.163142,0.487811,0,0.334036,0,0.092767,0,0.529365,0,0.005163,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.000396,0.659412,0,0,0.317590,0,0.449738,0.343869,0,0.300644,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.095787,0,0.492228,0,0,0.385966,0.016827,0,0.549458,0,0.054426,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.200050,0.442393,0,0.543067,0,0.578573,0,0.387596,0,0,0.095574,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0.005291,0,0.190142,0,0.112739,0,0,0.055814,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["59: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-4.391012191772461,-4.445266723632812,-4.444570541381836,
 -4.316848278045654,-4.335851669311523,-4.343522071838379,
 -4.443846702575684,-4.437545299530029, 3.641674041748047,
 -4.185046672821045];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p59=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p59.pdf", p59];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.158760,0.029315,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.245218,0.377033,0,0.266079,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.204205,0.551767,0,0.315008,0,0.348425,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.290415,0,0.380853,0,0.012460,0,0.264834,0,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.026783,0.630363,0,0,0.218459,0.129296,0,0.152641,0,0,0.347854,0,0.156142,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.267860,0,0.583011,0,0.316977,0,0.425926,0,0.479787,0,0.609671,0,0.196116,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.007446,0,0.649576,0,0.539919,0,0.521199,0,0.177404,0,0,0.212484,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.170000,0,0.306805,0.550262,0,0,0.290445,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.169299,0.367807,0,0,0.384856,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.140267,0.286416,0,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.106916,0.157837,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["60: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-8.62413215637207 ,-8.678386688232422,-8.677690505981445,
 -8.549968719482422, 0.046828210353851,-8.576642036437988,
 -6.046032428741455,-8.67066478729248 ,-7.81649112701416 ,
 -1.342681407928467];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p60=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p60.pdf", p60];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.052441,0.004782,0,0,0.239634,0,0.356470,0,0.354947,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.039115,0.059498,0,0.480109,0,0.200786,0,0.367949,0,0.482738,0,0.378461,0,0,0.004470,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.291579,0,0.389547,0,0,0.203703,0,0.314245,0,0.320874,0,0.120460,0.589535,0,0.136648,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.376586,0.360484,0,0.283519,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.095643,0.434689,0,0,0.326603,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.341454,0.504532,0,0,0.040243,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.077508,0,0.406144,0,0,0.404171,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.371498,0.374819,0,0,0.048859,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.193187,0.343373,0,0.431302,0,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0.454585,0,0.695487,0,0,0.001034,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0.336074,0,0.008202,0,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["61: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-8.442831039428711,-6.67619514465332 ,-5.801645278930664,
 -7.575199127197266,-4.176069259643555,-7.99860668182373 ,
 -8.495665550231934, 3.771971702575684,-7.635189533233643,
 -5.962985992431641];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p61=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p61.pdf", p61];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.187042,0.276534,0,0.421472,0,0.751643,0,0.250748,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.303421,0.187135,0,0.477033,0,0.505295,0,0.620543,0,0.370463,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.180109,0,0.541963,0,0.268930,0,0,0.415301,0.264736,0,0.623961,0,0,0.064601,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.213076,0,0.564925,0,0.311245,0,0,0.301266,0,0.403793,0.175809,0,0.774883,0,0.063454,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.061558,0,0.657531,0,0.457814,0,0,0.247870,0,0.426586,0,0.487555,0,0.092952,0.808564,0,0.066198,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.010324,0,0.570166,0,0.630606,0,0,0.139538,0,0.434003,0,0.545643,0,0.520213,0,0.079544,0.798077,0,0.057617,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.102763,0,0.837093,0,0.292740,0,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.336536,0,0.684733,0,0.003772,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.091549,0,0.824505,0,0.425094,0,0,0.270000,0,0.363668,0,0.449738,0,0.255151,0.613389,0,0.301951,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.005744,0.563082,0,0.689905,0,0.425561,0,0.235603,0,0.267807,0,0.552399,0,0.442661,0,0,0.023486,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.050103,0.397009,0,0.576707,0,0.545027,0,0.335436,0,0,0.039855,0,0.092633,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["62: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[  8.703132629394531,-10.314366340637207,-10.313671112060547,
 -10.185948371887207,-10.204952239990234,-10.21262264251709 ,
 -10.312947273254395,-10.306645393371582, -9.452470779418945,
 -10.054146766662598];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p62=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p62.pdf", p62];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0.343040,0,0.529094,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.504340,0.406275,0,0.260740,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.204600,0.535679,0,0.070618,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.303461,0.452656,0,0.534442,0,0,0.293799,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.071400,0.565571,0,0.169308,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.226781,0,0.446514,0,0,0.324135,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.142581,0.573252,0,0.425120,0,0,0.423576,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0.350589,0,0.628489,0,0.136536,0,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.408894,0,0.517956,0,0,0.026310,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.198089,0.411020,0,0.289145,0,0,0.368486,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["63: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-4.93549633026123 , 2.522361516952515,-4.187153339385986,
 -4.059431076049805,-4.880335330963135,-4.888006210327148,
 -3.534426689147949,-3.378227233886719,-4.127854824066162,
 -4.729530334472656];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p63=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p63.pdf", p63];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.018816,0.705783,0,0.540409,0,0,0.088171,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.087735,0.287135,0,0.466249,0,0,0.152548,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0.007165,0,0.479797,0,0,0.312715,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.393899,0,0.206402,0.093832,0,0.590325,0,0.377770,0,0.436648,0,0.508552,0,0.073480,0,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.095410,0.334285,0,0.663894,0,0.567531,0,0.508523,0,0.608029,0,0.776211,0,0.920120,0,0.769478,0,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.285852,0,0.663939,0,0.563403,0,0.185605,0,0.139651,0,0.473904,0,0.170456,0,0,0.139178,0.024284,0,0.399818,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.841014,0,0.514309,0,0,0.176894,0.097762,0,0.497669,0,0.481326,0,0,0.179150,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.832348,0,0.734898,0,0.685883,0,0.630450,0,0.448301,0,0,0.126720,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.150336,0,0.358532,0,0.153012,0,0,0.184005,0,0.455722,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["64: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-7.427242279052734,-7.48149585723877 , 2.635375499725342,
 -7.35307788848877 ,-7.372081279754639,-7.379752159118652,
 -4.298747539520264,-7.473774909973145,-6.619600772857666,
 -7.22127628326416 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p64=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p64.pdf", p64];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.180605,0,0.412809,0,0.632256,0,0.831054,0,0.844865,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.057494,0.408344,0,0.492037,0,0.011347,0,0,0.055490,0.620543,0,0.528306,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.215011,0,0.055185,0,0.417841,0,0.271266,0.176856,0,0.429442,0,0,0.128000,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.116206,0.572263,0,0.365815,0,0,0.276152,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.060813,0.588404,0,0.479296,0,0,0.442457,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.309146,0.162075,0,0.412200,0,0.410179,0,0,0.079544,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0.275928,0,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.392527,0.215639,0,0.586536,0,0.014145,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0.821738,0,0.393510,0,0,0.150985,0,0.259220,0,0.310196,0,0.363668,0,0.440915,0.000731,0,0.629076,0,0,0.035304,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0.094545,0,0.861903,0,0.685631,0,0.020297,0,0,0.265615,0,0.214397,0.210945,0,0.512203,0,0.167171,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.129734,0,0.450877,0,0.616616,0,0.616903,0,0.472478,0,0.209946,0,0,0.073188,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["65: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-14.891988754272461, -9.713723182678223,-14.515195846557617,
  13.409173011779785,-16.887090682983398,-12.794236183166504,
 -16.995084762573242,-14.938521385192871,-16.134609222412109,
 -16.736286163330078];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p65=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p65.pdf", p65];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.527952,0,0.309684,0,0,0.316104,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.126165,0,0.489913,0,0,0.169802,0.315008,0,0.294503,0,0.162775,0,0,0.187803,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.023932,0,0.573860,0,0.013944,0,0,0.314245,0,0.320874,0.012874,0,0.609142,0,0,0.102568,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.005084,0,0.664500,0,0.529100,0,0,0.313755,0,0.330223,0,0.426586,0,0.042457,0.374695,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.053462,0,0.620166,0,0,0.149787,0,0.361107,0,0.434003,0,0.545643,0.396453,0,0,0.028564,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.126894,0.067370,0,0.159434,0,0.539169,0,0.343399,0,0.544537,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.060196,0.192214,0,0.494379,0,0.235045,0,0.088880,0,0.011755,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.335966,0.451141,0,0,0.273091,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.055812,0,0.423671,0,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.308770,0,0.549013,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 7;
nnOutput = 7;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["66: 7 " <> ToString[predicted] <> " 7 " <> warning];
correctResults=List[-4.053812980651855,-3.221174478530884,-1.718940854072571,
 -3.979649066925049,-2.735310077667236,-4.006322860717773,
 -4.106647491455078, 2.436351299285889,-3.246171951293945,
 -3.847847461700439];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p66=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p66.pdf", p66];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0.181276,0,0.590858,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0.175883,0,0.272504,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.376168,0.462150,0,0.127481,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0.183048,0,0.592286,0,0,0.140858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.255713,0.462629,0,0.349700,0,0,0.364520,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.115997,0,0.450436,0,0,0.087860,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.275914,0.385017,0,0.258454,0,0,0.420635,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.094514,0.401569,0,0.500057,0,0,0.385033,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.160448,0.425199,0,0.453992,0,0,0.352632,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.059907,0.570538,0,0,0.073293,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["67: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-5.510005950927734, 3.699812650680542,-5.364604473114014,
 -5.236882209777832,-5.454844951629639,-5.462515830993652,
 -4.44619083404541 ,-5.15861988067627 ,-4.702364444732666,
 -5.30403995513916 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p67=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p67.pdf", p67];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.122112,0,0.254713,0,0.183234,0,0.096291,0,0,0.176407,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0.666270,0,0.791862,0,0.518977,0,0.369128,0,0.265566,0,0.434876,0,0,0.429019,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0.349579,0,0,0.094997,0,0.262070,0,0.426754,0,0.146273,0.544420,0,0,0.389811,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.237904,0.079631,0,0.644579,0,0.044812,0,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.116873,0.589884,0,0.626442,0,0.665855,0,0.544982,0,0.234994,0,0,0.118442,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.142924,0,0.324832,0,0.424199,0,0.436819,0,0.119233,0.539083,0,0.389254,0,0,0.075716,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.255621,0.672968,0,0.387105,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.449738,0,0.459073,0,0.355238,0.113716,0,0.907980,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.064997,0,0.202870,0,0.410475,0,0.456702,0,0.343679,0.031877,0,0.632397,0,0.849896,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.423479,0,0.543373,0,0.539145,0,0.495240,0,0.647400,0,0.650504,0,0.569153,0,0.091353,0,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.095689,0,0.027505,0,0.108830,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["68: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-3.453950643539429,-3.508204698562622,-7.826370716094971,
  6.289997100830078,-7.717651844024658,-3.406460523605347,
 -7.825646877288818,-7.819345474243164,-6.965171337127686,
 -7.56684684753418 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p68=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p68.pdf", p68];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.562646,0,0.231585,0,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.320108,0,0.099880,0,0,0.503359,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.045795,0,0.547845,0,0,0.124208,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.236056,0.673990,0,0.430107,0,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.394287,0,0.531257,0,0,0.448340,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.126781,0,0.450436,0,0,0.265311,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.147762,0,0.517277,0,0,0.103968,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.136217,0.541438,0,0.336025,0,0,0.334650,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.368788,0,0.555340,0,0,0.034790,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.241318,0,0.735635,0,0.356387,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["69: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-5.157453536987305, 3.546220064163208,-0.832048058509827,
 -5.083289623260498,-5.102293014526367,-5.109963417053223,
 -5.210288047790527,-5.203986644744873,-4.349812507629395,
 -4.951488018035889];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p69=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p69.pdf", p69];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0.066730,0,0.692060,0,0.089878,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.099499,0,0.368748,0.116248,0,0.511177,0,0.237210,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.146753,0,0.554619,0,0.093923,0,0.192459,0,0.539601,0,0.208854,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.496409,0,0.592376,0,0,0.075029,0.306577,0,0.592286,0,0.163064,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.032147,0,0.650668,0,0.541147,0,0,0.286106,0.200865,0,0.508523,0,0.110970,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.320166,0,0.679625,0,0.634972,0,0.447369,0,0.404357,0,0.475865,0,0.480260,0,0.403959,0,0,0.059050,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.024672,0.366269,0,0.597615,0,0.526193,0,0.518258,0,0.535247,0,0.599281,0,0.573949,0,0.068478,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.338178,0.454183,0,0.537006,0,0,0.065042,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.363886,0,0.555340,0,0.295602,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.277593,0,0.735635,0,0.367171,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["70: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-7.884654998779297,-7.938909530639648,-7.396812438964844,
 -7.81049108505249 , 6.38283634185791 ,-7.837164878845215,
 -7.93748950958252 ,-7.389787197113037,-7.077013969421387,
 -7.678689479827881];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p70=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p70.pdf", p70];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.153858,0.211668,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.436395,0.271150,0,0.137648,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.364900,0.562067,0,0,0.292752,0,0.416637,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.032872,0.626185,0,0,0.288107,0,0.388897,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.172718,0,0.455767,0,0.356562,0,0,0.339030,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.002631,0.288671,0,0.390571,0,0,0.325623,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.177174,0,0.517277,0,0.157796,0,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.433391,0,0.538497,0,0,0.337504,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.288164,0.494426,0,0.021729,0,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.093882,0.418557,0,0,0.374368,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["71: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-3.007054567337036, 1.083453416824341,-2.420928001403809,
 -2.693735599517822,-2.95189380645752 ,-2.959564447402954,
 -1.544221520423889,-2.575277805328369,-2.199413299560547,
 -2.654663562774658];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p71=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p71.pdf", p71];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.013717,0.390680,0,0.015474,0,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.221782,0,0.719672,0,0.093040,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.224990,0.472429,0,0.402523,0,0,0.454509,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.277734,0.540002,0,0.091479,0,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0.308062,0,0.553402,0,0,0.259109,0,0.403793,0,0.346740,0,0.109431,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.013057,0.620559,0,0.047228,0,0,0.426586,0,0.487555,0.359009,0,0.546799,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.124932,0.474723,0,0.631050,0,0.116977,0,0,0.097604,0.123904,0,0.630260,0,0.786312,0,0.687029,0,0.631190,0,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.043956,0,0.717250,0,0.668204,0,0.584036,0,0.420218,0,0.436228,0,0.637516,0,0.659243,0,0.454752,0,0.202342,0,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.597054,0,0.719212,0,0.038824,0,0,0.308766,0,0.425229,0,0.004171,0.636919,0,0.146068,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.789552,0,0.381081,0,0,0.402870,0,0.474201,0,0.520428,0,0.036817,0.485798,0,0,0.087211,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.073426,0,0,0.124560,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["72: 4 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-6.307564735412598,-6.733445167541504,-3.159707546234131,
 -6.233400821685791,-3.741208553314209,-6.631701469421387,
  1.496335387229919,-6.725724220275879,-5.8715500831604  ,
 -6.473225593566895];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p72=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p72.pdf", p72];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.068528,0,0.602174,0,0.587319,0,0.590099,0,0.527133,0,0.750748,0,0.549255,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.391677,0,0.074390,0,0,0.511202,0,0.484901,0,0.367692,0.091051,0,0.001711,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0.463442,0,0,0.229606,0,0.434992,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.257512,0.505121,0,0,0.276010,0,0.202246,0,0.195950,0,0.370269,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.204234,0.522520,0,0.437424,0,0.253806,0,0.345778,0,0.158029,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0,0.545643,0,0.360409,0.544966,0,0,0.142119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.482614,0,0.060223,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.100373,0,0.248034,0,0.106467,0,0,0.262156,0,0.363668,0,0.449738,0,0.421818,0.581036,0,0,0.015696,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.556021,0,0.791513,0,0,0.019899,0,0.402870,0,0.474201,0,0.442977,0.160242,0,0.310308,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.000322,0,0.412642,0,0.652891,0,0.361020,0,0.270518,0,0.400142,0,0.188577,0,0,0.078907,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["73: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-6.120853424072266,-8.576350212097168,-8.575654983520508,
 -6.046689033508301,-8.466936111450195, 7.012606620788574,
 -8.574931144714355,-6.167386054992676,-7.714455127716064,
 -8.316130638122559];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p73=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p73.pdf", p73];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.066567,0,0.417860,0,0.480456,0,0.502844,0,0.529094,0,0.176238,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.694618,0,0.310664,0,0.114288,0,0.015099,0,0.382308,0,0.743012,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.434992,0,0.456477,0.202971,0,0.693569,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.258129,0.220717,0,0.546397,0,0.097432,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.207175,0.067618,0,0.295267,0,0.448904,0,0.512445,0,0.123715,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.246292,0,0.451638,0,0.128742,0,0,0.108388,0.167042,0,0.575358,0,0,0.066629,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.521830,0,0.168066,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.324248,0.290927,0,0.582017,0,0,0.056873,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0.870035,0,0.765825,0,0.523866,0,0.199709,0,0.285365,0,0.338544,0,0.479572,0,0.184752,0,0,0.138712,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0.186700,0,0.480714,0,0.597936,0,0.397009,0,0.004158,0,0,0.256933,0,0.284172,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["74: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-8.028038024902344,-2.196832895278931,-8.8446044921875  ,
  6.545222759246826,-8.735885620117188,-7.21753978729248 ,
 -8.843880653381348,-8.074570655822754,-7.983404636383057,
 -8.585080146789551];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p74=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p74.pdf", p74];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.316567,0,0.605115,0,0.729476,0,0.627354,0,0,0.096397,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.008528,0,0.657212,0,0.694618,0,0.122429,0,0,0.073948,0.265099,0,0.070543,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.343238,0,0.550675,0,0,0.301264,0,0.448233,0,0.434992,0,0.393732,0.578461,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.636677,0,0,0.251630,0,0.403703,0,0.314245,0,0.320874,0,0.278303,0.546397,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.296853,0,0,0.019920,0,0.369637,0,0.330223,0,0.426586,0,0.050300,0.311950,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.371258,0,0.232898,0.292532,0,0,0.049152,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.145495,0.366243,0,0.595801,0,0.521199,0,0.539169,0,0.022810,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.366270,0,0.377059,0,0.449077,0,0.487517,0,0.040927,0,0.644762,0,0.193127,0,0.068764,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.636964,0,0.409875,0,0.525799,0,0,0.144938,0,0.440738,0,0.076947,0.394161,0,0.158720,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.271518,0,0.628667,0,0,0.069678,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["75: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-7.665831565856934,-7.701902389526367, 6.055293560028076,
 -0.722508430480957,-7.610670566558838,-7.60015869140625 ,
 -7.718665599822998,-7.712364196777344,-6.858190059661865,
 -7.459865570068359];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p75=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p75.pdf", p75];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0.218545,0,0.035506,0,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.084857,0,0.745890,0,0.536175,0,0.210017,0,0,0.091113,0,0.227548,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.035925,0.110304,0,0.215566,0,0.323111,0,0.211177,0,0,0.347104,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.415384,0.158228,0,0.095128,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.280678,0.330521,0,0.145417,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0.110669,0,0.405582,0,0,0.256677,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.003252,0,0.387690,0,0,0.262370,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.190593,0.375066,0,0.448742,0,0,0.120958,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.318231,0,0.503530,0,0,0.185237,0,0.449738,0,0.438484,0,0.215042,0,0.161775,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.156572,0,0.492228,0,0.321877,0,0.275651,0,0.157301,0,0.232857,0,0.112789,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.113489,0,0.325561,0,0.092995,0,0.003580,0,0.073025,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["76: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-4.724754333496094,-2.787053823471069, 3.153460502624512,
 -2.774767875671387,-4.708837509155273,-2.80144190788269 ,
 -4.816832542419434,-4.810531139373779,-3.956357002258301,
 -4.558032512664795];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p76=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p76.pdf", p76];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.124161,0.044618,0,0.015566,0,0,0.443555,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.457538,0,0.222266,0,0.047845,0,0.266969,0,0,0.450595,0,0.414676,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.094520,0,0.494449,0,0,0.360565,0,0.314245,0.417362,0,0.369736,0,0,0.156544,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.094892,0,0.368315,0,0,0.362774,0,0.269439,0.445963,0,0.477151,0,0,0.321383,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.404135,0,0.498697,0,0.448350,0,0.290632,0,0.304297,0,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.258267,0,0.353218,0,0.163115,0.296032,0,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.255621,0.308574,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.383173,0.398477,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.272407,0.564067,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.017641,0,0.877519,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0.032251,0,0.325328,0,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["77: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-6.337011337280273,-3.693784475326538,-6.39056921005249 ,
 -5.933924674987793,-6.281850337982178,-4.731176376342773,
 -6.389845371246338,-6.383543968200684,-5.529369831085205,
  4.657074928283691];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p77=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p77.pdf", p77];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.033877,0,0.536086,0,0.789116,0,0.786487,0,0.631436,0,0.173432,0,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.269313,0,0.484663,0,0,0.090676,0,0.161885,0.016248,0,0.473922,0,0,0.141221,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.071468,0,0.259129,0,0.426754,0,0.448233,0,0.434992,0.142542,0,0.252971,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.129193,0.095559,0,0.114420,0,0.454050,0,0.020907,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.006194,0.589187,0,0.661934,0,0.565571,0,0.504602,0,0.161950,0,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.149787,0.019285,0,0,0.281062,0,0.418192,0,0.137860,0.593005,0,0.024548,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.136437,0,0.246476,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.377712,0,0.271988,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.396074,0,0.453525,0,0,0.246470,0,0.363668,0,0.449738,0,0.413975,0.358487,0,0.529402,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.206219,0,0.684023,0,0.557914,0,0.315995,0,0.269768,0,0.521026,0,0.713249,0,0.143181,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.041126,0,0.347295,0,0.521498,0,0.490338,0,0.457204,0,0.216191,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 3;
nnOutput = 3;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["78: 3 " <> ToString[predicted] <> " 3 " <> warning];
correctResults=List[-6.569576263427734,-6.62382984161377 ,-6.542756080627441,
  6.042464256286621,-7.631317615509033,-6.36088752746582 ,
 -7.739312648773193,-7.733011245727539,-6.878837108612061,
 -7.480512619018555];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p78=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p78.pdf", p78];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.000189,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0.044780,0,0.151728,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.002646,0,0.701329,0,0,0.305382,0,0.440316,0,0.511202,0,0.440784,0.538190,0,0.201835,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.195199,0,0.634008,0,0,0.426754,0,0.448233,0,0.434992,0,0.059419,0.447089,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.461187,0,0.428762,0,0,0.403703,0,0.314245,0,0.320874,0.211893,0,0.413064,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.046260,0,0.751755,0,0.025178,0,0,0.369637,0,0.330223,0,0.426586,0.181072,0,0.280578,0,0,0.184573,0,0.067135,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.507383,0,0.804480,0,0,0.084100,0,0.178754,0,0.289885,0,0.363290,0.338610,0,0.429279,0,0.320626,0,0.303695,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.654724,0,0.727289,0,0.609407,0,0.558400,0,0.470311,0,0.401591,0,0.515639,0,0.435556,0,0.132772,0,0,0.071719,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.437974,0.413476,0,0.032997,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.477291,0.556321,0,0,0.030868,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.366525,0.667988,0,0,0.006358,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.106869,0.253009,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["79: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-9.308659553527832,-7.903470993041992,-7.329641819000244,
 -9.234495162963867, 4.887956142425537,-9.26116943359375 ,
 -9.361494064331055,-4.403732299804688,-8.501017570495605,
 -7.643251419067383];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p79=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p79.pdf", p79];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0.101864,0,0,0.113063,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.502379,0.304314,0,0,0.304947,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.235972,0.171954,0,0,0.378401,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.053227,0,0.009675,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0.065571,0,0,0.319908,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.292827,0.122004,0,0,0.496684,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.165964,0,0.193507,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.162803,0,0,0.252680,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.333262,0.287564,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.208587,0.139145,0,0,0.399858,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0.084260,0,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["80: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-2.935494184494019, 0.496869802474976,-2.161661624908447,
 -2.033939361572266,-2.880333423614502,-2.888004064559937,
 -2.696188926696777,-1.327245712280273,-2.127852916717529,
 -2.729528427124023];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p80=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p80.pdf", p80];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0.245958,0,0.402523,0,0.428824,0,0.546034,0,0.535169,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0.023335,0,0,0.006561,0,0.280007,0.501991,0,0.394549,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.025776,0.370717,0,0.502280,0,0,0.116294,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.322861,0,0.164735,0.459973,0,0.547923,0,0.144798,0,0,0.265501,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.081931,0,0.343351,0,0.631050,0,0.384624,0,0,0.302506,0,0.520213,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.350802,0,0.831210,0,0.703524,0,0.201537,0,0,0.401258,0,0.478801,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.230765,0,0.655878,0,0.713329,0,0.676079,0,0.484371,0,0.152222,0,0,0.027700,0.076134,0,0.143127,0,0.106019,0,0.072620,0,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.207154,0,0.227380,0.020897,0,0.097219,0,0.010242,0,0.305406,0,0.537298,0,0.614602,0,0.317041,0,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["81: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-2.107922315597534,-2.162176370620728, 0.497384428977966,
 -0.704325675964355,-2.052761554718018,-2.060432195663452,
 -2.160756587982178,-2.154455184936523,-1.300281047821045,
 -1.901956558227539];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p81=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p81.pdf", p81];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0.010997,0,0.722613,0,0,0.222646,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0.093997,0,0.478994,0,0,0.459411,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0.098825,0,0.431675,0,0,0.444713,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0.246539,0,0.533048,0,0,0.393009,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.271738,0,0.328316,0,0,0.487555,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.114036,0,0.384749,0,0,0.501586,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.101684,0,0.511395,0,0,0.435341,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.077394,0.540458,0,0,0.337504,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.201652,0.469768,0,0,0.073091,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.439286,0.327593,0,0.422890,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["82: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-4.93098258972168 , 3.319749116897583,-0.832048058509827,
 -4.856818675994873,-4.875822067260742,-4.883492469787598,
 -4.983817100524902,-4.977515697479248,-4.12334156036377 ,
 -4.725017070770264];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p82=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p82.pdf", p82];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0.180204,0,0.257744,0,0,0.207630,0,0.254838,0,0.033430,0,0.082671,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.620937,0,0.635795,0,0,0.145218,0.030954,0,0.505295,0,0.530347,0,0,0.073655,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.514400,0,0.561482,0,0.541963,0,0.516969,0,0,0.103536,0,0.285264,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.108421,0.477782,0,0.072768,0,0,0.163265,0,0.257148,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.154696,0,0.657531,0,0.383304,0,0.167816,0,0.069492,0,0,0.177751,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.111206,0.257076,0,0.272227,0,0.201291,0,0.087690,0,0.359199,0,0.253789,0,0,0.176433,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0,0.404199,0,0.478801,0,0.294164,0.542418,0,0.209243,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.268039,0,0.363668,0,0.449738,0,0.459073,0.282017,0,0.716657,0,0,0.017510,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.192448,0.436345,0,0,0.428123,0,0.520428,0,0.273091,0.630896,0,0.469651,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.152011,0.531609,0,0.491106,0,0.509946,0,0.695439,0,0.525995,0,0.042683,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.008434,0.359750,0,0.374504,0,0.283402,0,0,0.010622,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 5;
nnOutput = 5;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["83: 5 " <> ToString[predicted] <> " 5 " <> warning];
correctResults=List[-6.829486846923828,-7.783266067504883,-8.352914810180664,
 -5.614634037017822,-8.244195938110352, 5.649178504943848,
 -8.352190971374512,-6.876019954681396,-7.491715431213379,
 -8.093391418457031];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p83=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p83.pdf", p83];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.025785,0.339565,0,0.510304,0,0.432233,0,0.364288,0,0.295491,0,0.314661,0,0,0.098165,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.532454,0,0.625185,0,0,0.216950,0,0.448233,0,0.434992,0,0.364321,0,0.248990,0,0.202509,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.018869,0,0.762167,0,0,0.053591,0,0.403703,0,0.314245,0,0.320874,0,0.403793,0,0.164387,0.226844,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.179593,0,0.846853,0,0,0.275802,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0.196264,0,0.489936,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.086795,0,0.831931,0,0,0.259591,0,0.361107,0,0.434003,0,0.545643,0,0.209429,0.569475,0,0.329450,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.507681,0,0.513328,0,0,0.136698,0,0.114983,0.342767,0,0.466620,0,0.510065,0,0.350419,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.122554,0.305486,0,0.678040,0,0.624567,0,0.185556,0,0,0.327700,0.285938,0,0.629402,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.296370,0,0.346008,0,0.417338,0,0.520428,0,0.440738,0.000504,0,0.871612,0,0.080289,0,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.053417,0.955428,0,0.108020,0,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0.033496,0,0.757048,0,0.080270,0,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["84: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.386396408081055,-5.44064998626709 ,-5.439954280853271,
 -5.31223201751709 ,-2.676936626434326,-2.684607267379761,
 -5.439230442047119,-5.432929039001465,-4.578754901885986,
  4.035382270812988];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p84=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p84.pdf", p84];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.201748,0.383397,0,0.745981,0,0.835956,0,0.412512,0,0.012981,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.175970,0.419488,0,0.480954,0,0.018040,0,0.214661,0,0.679286,0,0.382104,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.127756,0.436972,0,0.455688,0,0,0.145776,0,0.455497,0,0.421539,0.322981,0,0.693243,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.422880,0,0.577670,0,0,0.050519,0,0.320874,0,0.403793,0,0.390858,0.351353,0,0.726199,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.023323,0,0.629100,0,0.096049,0,0,0.330223,0,0.426586,0,0.487555,0,0.376285,0.441897,0,0.670120,0,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.355460,0,0.663939,0,0,0.141499,0,0.434003,0,0.545643,0,0.520213,0,0.236407,0.757881,0,0.379186,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.652779,0,0.634897,0,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0.177712,0,0.762184,0,0.098870,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.642152,0,0.646663,0,0,0.310196,0,0.363668,0,0.426209,0,0.168877,0.526134,0,0.301951,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.629748,0,0.668336,0,0.063796,0,0.147368,0,0.289376,0,0.540634,0,0.396582,0,0,0.082309,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.094995,0,0.687205,0,0.620824,0,0.422478,0,0.126613,0,0,0.043776,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["85: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[  8.762933731079102,-10.429329872131348,-10.428634643554688,
 -10.245749473571777,-10.319915771484375,-10.21726131439209 ,
 -10.427910804748535,-10.366446495056152, -9.567434310913086,
 -10.169110298156738];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p85=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p85.pdf", p85];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.074859,0,0.347559,0,0.546939,0,0.475072,0,0.041569,0,0,0.364751,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.030493,0,0.669302,0,0.515403,0,0.190002,0,0.208145,0,0.535679,0,0,0.121539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0.393540,0,0.565037,0,0,0.267428,0,0.314245,0,0.306168,0.388364,0,0.433652,0,0,0.190803,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.538029,0,0.173217,0,0,0.369637,0,0.330223,0,0.192273,0.473229,0,0.615872,0,0.191897,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.405460,0,0.510017,0,0,0.213068,0.011095,0,0.366122,0,0.471944,0,0.617514,0,0.036312,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.017809,0.490779,0,0.662321,0,0.566389,0,0.227081,0,0.308777,0,0.413007,0,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.172941,0,0.284256,0,0.449738,0.021320,0,0.124174,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.520428,0.290634,0,0.044622,0,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0.565047,0,0.479916,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0.666735,0,0.584476,0,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["86: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-11.314640045166016,-11.368893623352051,-11.368198394775391,
 -11.240475654602051, -7.040363311767578, -7.373636245727539,
 -11.367474555969238,-11.361172676086426,-10.506998062133789,
   9.638022422790527];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p86=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p86.pdf", p86];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0.195981,0,0.312427,0,0,0.017880,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.217767,0.183896,0,0.266079,0,0.188191,0,0.722424,0,0.126221,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.092440,0.413531,0,0,0.240874,0,0.456477,0,0.337225,0.451412,0,0.664811,0,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.015467,0.435755,0,0,0.098325,0.318756,0,0.360123,0,0.228804,0,0.008552,0,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.341206,0.641345,0,0.435178,0,0,0.349320,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0.139874,0,0.315997,0,0.371024,0,0,0.491782,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.076868,0.344674,0,0,0.404199,0.159434,0,0.010737,0,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.079417,0.545682,0,0,0.225882,0,0.363668,0.134575,0,0.012496,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0.391513,0,0.172258,0,0,0.402870,0,0.084005,0.367807,0,0,0.356425,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0.743034,0,0.299950,0,0.378667,0,0.304831,0,0,0.271427,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0.235211,0,0.363409,0,0.091566,0,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["87: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-4.090828895568848,-4.145083427429199,-4.144387245178223,
 -4.016664981842041,-4.03566837310791 ,-3.947983980178833,
 -4.14366340637207 ,-4.137362003326416, 3.246135711669922,
 -3.884863376617432];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p87=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p87.pdf", p87];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.155669,0.204966,0,0,0.075587,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0.268507,0,0.484876,0,0.497452,0,0.140151,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.260087,0.546865,0,0.534616,0,0.498425,0,0.572579,0,0,0.055450,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.185075,0.638696,0,0,0.146364,0,0.303793,0.478750,0,0.161157,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.312077,0.329383,0,0.408992,0,0,0.426586,0,0.487555,0.457048,0,0.191897,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.225277,0.577128,0,0.281683,0,0,0.506427,0,0.415311,0.577318,0,0,0.012707,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.109407,0,0.507419,0,0,0.404199,0,0.478801,0.022502,0,0.434575,0,0,0.186836,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0.121172,0,0.519216,0,0,0.363668,0,0.354640,0.417398,0,0.043782,0,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.080101,0,0.429483,0,0,0.379103,0.311925,0,0.236713,0,0,0.251457,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.064756,0.624746,0,0.550910,0,0.273671,0,0,0.186914,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.037572,0.234703,0,0.100927,0,0,0.110790,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["88: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 2.894076585769653,-4.50531005859375 ,-4.504614353179932,
 -4.37689208984375 ,-4.395895481109619,-4.403566360473633,
 -4.503890514373779,-4.497589111328125,-3.643414974212646,
 -4.245090484619141];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p88=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p88.pdf", p88];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.031472,0.656095,0,0.555946,0,0,0.057940,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0.244618,0,0.551841,0,0.482915,0,0.429804,0,0,0.287300,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.071874,0.524227,0,0,0.021763,0,0.045776,0.476856,0,0.314736,0,0,0.225058,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.358174,0,0.459043,0,0,0.263265,0,0.320874,0,0.236146,0.572868,0,0.296451,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0.077245,0,0.657531,0,0.103893,0,0,0.330223,0,0.426586,0,0.487555,0.098225,0,0.790917,0,0,0.030861,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0.256441,0,0.616880,0,0,0.314048,0,0.434003,0,0.545643,0,0.520213,0,0.063858,0.801999,0,0.159578,0,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0.258661,0,0.613328,0,0,0.321993,0,0.404199,0,0.478801,0,0.460831,0,0.233072,0.785713,0,0.304752,0,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0.209799,0,0.690780,0,0,0.206274,0,0.363668,0,0.449738,0,0.459073,0.131036,0,0.797049,0,0.019745,0,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.070252,0.596768,0,0.410855,0,0.012074,0,0,0.106702,0.304360,0,0.699524,0,0.310828,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.040246,0.264942,0,0.363655,0,0.523671,0,0.426812,0,0.172073,0,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 0;
nnOutput = 0;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["89: 0 " <> ToString[predicted] <> " 0 " <> warning];
correctResults=List[ 7.585813522338867,-9.197047233581543,-9.196352005004883,
 -9.068629264831543,-9.08763313293457 ,-9.095303535461426,
 -9.19562816619873 ,-9.189326286315918,-8.335151672363281,
 -8.936827659606934];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p89=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p89.pdf", p89];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.083433,0.258056,0,0,0.022485,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.138715,0.547919,0,0.243699,0,0,0.484901,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.260087,0.540002,0,0.333636,0,0,0.456477,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.263507,0.657324,0,0.548734,0,0,0.380264,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.550169,0,0.563610,0,0,0.434614,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.448350,0,0.447494,0,0,0.467272,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.321993,0.216389,0,0.511395,0,0,0.376517,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0.089273,0,0.540458,0,0,0.131622,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.142828,0.472709,0,0.011223,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.393208,0.355044,0,0.586616,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.050974,0,0.368696,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["90: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-5.181602478027344, 3.447564840316772,-0.893449902534485,
 -5.107438087463379,-5.126441478729248,-5.011308670043945,
 -5.234436511993408,-5.228135108947754,-4.373960971832275,
 -4.97563648223877 ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p90=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p90.pdf", p90];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0.182254,0,0.288448,0,0.226534,0,0.158727,0,0.285956,0,0.088003,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.072898,0,0.667167,0,0.401841,0,0.070170,0,0.277844,0,0.616622,0,0.170463,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.008149,0.561482,0,0,0.226665,0,0.434992,0,0.007458,0.554932,0,0.047491,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.302610,0.397278,0,0.294579,0,0,0.104207,0.568756,0,0.190515,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0.227422,0,0.658012,0,0.521453,0,0.233033,0,0,0.372363,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.340519,0.276781,0,0.447494,0,0,0.140801,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.171012,0.555605,0,0.511395,0,0.382306,0,0,0.343856,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.222945,0.505491,0,0.355940,0,0.013987,0,0.529163,0,0,0.240532,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.093826,0,0.580463,0,0,0.290868,0.153102,0,0.412203,0,0,0.257339,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.095048,0,0.612981,0,0.463655,0,0.570730,0,0.091518,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.008160,0.319017,0,0.278378,0,0.000974,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["91: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-4.802780151367188,-4.857034683227539,-4.856338500976562,
 -4.728616237640381,-4.74761962890625 ,-4.755290031433105,
 -4.85561466217041 ,-4.849313259124756, 4.053442001342773,
 -4.596814632415771];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p91=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p91.pdf", p91];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0.001524,0,0.299811,0,0,0.120688,0,0.207630,0,0.270524,0,0.202058,0,0.022867,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0.202646,0,0.724859,0,0,0.264205,0,0.440316,0,0.511202,0,0.255490,0.397994,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.606964,0,0.429106,0,0,0.426754,0,0.448233,0,0.434992,0,0.314321,0.547089,0,0.154353,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0.025732,0,0.871971,0,0,0.086924,0,0.403703,0,0.314245,0,0.320874,0,0.403793,0.481691,0,0.372922,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0.434495,0,0.813519,0,0,0.232665,0,0.369637,0,0.330223,0,0.426586,0,0.487555,0.245284,0,0.403662,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0.665226,0,0.583892,0,0,0.269394,0,0.314048,0,0.111454,0,0.457408,0,0.171194,0.574377,0,0.396116,0,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0.368449,0,0.703759,0,0.589799,0,0.615262,0,0.585997,0,0.381983,0,0.431326,0,0.643399,0,0.248459,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.216078,0,0.205825,0,0.449738,0,0.229661,0.640840,0,0.103912,0,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0,0.520428,0,0.211327,0.732857,0,0.180436,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.031031,0.874034,0,0.049546,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0.045166,0,0.465849,0,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["92: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-3.148941278457642,-3.203195333480835,-3.202499389648438,
 -3.074777126312256, 1.647122383117676,-3.10145115852356 ,
 -3.201775550842285,-3.195474147796631,-2.341300010681152,
 -2.942975521087646];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p92=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p92.pdf", p92];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.196175,0,0.120906,0.254669,0,0.044354,0,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.227931,0,0.063846,0.300562,0,0.472942,0,0.555838,0,0.793992,0,0.067398,0,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.247364,0.438933,0,0.352747,0,0,0.058521,0.043523,0,0.457873,0,0.122981,0,0,0.084208,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.309473,0.321788,0,0.636735,0,0.282067,0,0.406011,0,0,0.157524,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0.243306,0,0.561649,0,0.146758,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.286585,0,0.430828,0,0.408218,0,0,0.318760,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0.007419,0,0.578154,0,0,0.111154,0.473483,0,0,0.304641,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.254318,0.518236,0,0.189273,0,0,0.046797,0.437006,0,0,0.316022,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.213036,0.549091,0,0.137564,0,0.404082,0,0.009262,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.142207,0.616903,0,0.530322,0,0.287397,0,0,0.170247,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.050317,0.081762,0,0.195044,0,0,0.091183,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 8;
nnOutput = 8;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["93: 8 " <> ToString[predicted] <> " 8 " <> warning];
correctResults=List[-0.841055154800415,-0.895309209823608,-0.8946133852005  ,
 -0.766891002655029,-0.785894453525543,-0.793565034866333,
 -0.893889546394348,-0.88758796453476 , 0.091716811060905,
 -0.635089457035065];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p93=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p93.pdf", p93];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.037443,0.559705,0,0.780605,0,0.490260,0,0,0.039313,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.496427,0,0.647559,0,0.131252,0,0.340758,0,0.299412,0,0,0.367692,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0.220689,0,0.661459,0,0,0.213028,0,0.448233,0.092459,0,0.407248,0,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.022147,0,0.215355,0,0.403703,0,0.314245,0.051675,0,0.526599,0,0,0.286936,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.054037,0.419308,0,0,0.307658,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0,0.434003,0.252396,0,0.226846,0,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.212189,0.300703,0,0.489826,0,0,0.215733,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.107259,0.618236,0,0.624567,0,0.542418,0,0.391908,0,0.141821,0,0,0.158833,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.468336,0,0.581443,0,0.181681,0,0,0.068467,0.406321,0,0.724033,0,0.460828,0,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.229362,0,0.054158,0,0,0.441247,0,0.409662,0,0.194757,0.470112,0,0.706408,0,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["94: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-5.87169075012207 ,-7.037563323974609, 5.372771739959717,
 -1.815944194793701,-6.928148746490479,-3.437418222427368,
 -7.036143779754639,-7.029842376708984,-6.175668239593506,-6.77734375       ];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p94=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p94.pdf", p94];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.106962,0.052174,0,0.422613,0,0.631276,0,0.779094,0,0.378199,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.101612,0.484814,0,0.417527,0,0,0.072967,0,0.073137,0,0.200045,0.578306,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.248345,0,0.203224,0,0.421763,0,0.434992,0,0.456477,0,0.115656,0.572981,0,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.320874,0,0.403793,0.085613,0,0.263118,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.330223,0,0.345214,0,0.191477,0.540382,0,0,0.007122,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.280715,0.163056,0,0.434749,0,0.473904,0,0.565554,0,0.178469,0,0,0.036501,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.064868,0.121171,0,0.222125,0,0,0.039493,0.126101,0,0.236228,0,0,0.287974,0,0.040757,0,0.047209,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0.019981,0,0.598034,0,0.114310,0,0,0.270000,0.214763,0,0.342418,0,0,0.390445,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0.321707,0,0.541513,0,0.082062,0,0.438306,0,0.113054,0,0,0.453761,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0.438557,0,0.775387,0,0.381322,0,0,0.121333,0,0.443208,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 2;
nnOutput = 2;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["95: 2 " <> ToString[predicted] <> " 2 " <> warning];
correctResults=List[-4.328704833984375,-4.382959365844727, 2.718167304992676,
 -2.120382308959961,-4.273544311523438,-4.281214714050293,
 -4.381539344787598,-4.375237941741943,-3.521063804626465,
 -4.122739315032959];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p95=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p95.pdf", p95];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0.004689,0,0.750939,0,0.453210,0,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.164642,0.520491,0,0.567329,0,0,0.002193,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.406983,0.262327,0,0.275883,0,0,0.303966,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0.007649,0,0.367949,0,0,0.428046,0,0.421539,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.256644,0.567128,0,0,0.129697,0,0.403793,0,0.390858,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.327763,0.323500,0,0.373698,0,0.024394,0,0,0.032653,0,0.291971,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.209591,0.634972,0,0.538546,0,0.414161,0,0.425865,0,0.473397,0,0,0.165648,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0.068230,0,0.675066,0,0.325213,0,0,0.421938,0,0.341223,0.626732,0,0.039635,0,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.061181,0.652550,0,0.470646,0,0,0.020327,0.351712,0,0.380056,0,0,0.173539,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0.028502,0,0.478740,0,0.271729,0,0.156321,0,0,0.177927,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 6;
nnOutput = 6;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["96: 6 " <> ToString[predicted] <> " 6 " <> warning];
correctResults=List[-13.567550659179688,-13.621804237365723,-13.621109008789062,
 -13.493386268615723,-12.557075500488281, -7.812780380249023,
  11.957736015319824,-13.614083290100098,-12.759908676147461,
 -13.361584663391113];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p96=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p96.pdf", p96];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.103041,0,0.207630,0,0.270524,0,0.194215,0.177133,0,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0.099369,0,0.326971,0,0,0.440316,0,0.511202,0.026863,0,0.196034,0,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0.156557,0,0.314423,0,0,0.448233,0,0.434992,0.167052,0,0.072579,0,0,0.243686,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0.391507,0,0.218846,0,0,0.314245,0,0.320874,0.298168,0,0,0.015367,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.439884,0,0.165657,0,0,0.330223,0,0.426586,0.410484,0,0,0.113540,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0.390409,0,0.394776,0,0,0.143807,0,0.427015,0.442532,0,0,0.279544,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.148436,0.282909,0,0.336978,0,0.485905,0,0.497012,0,0,0.290915,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0,0.077189,0.276222,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.474201,0.058984,0,0.056321,0,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0,0.445169,0.280534,0,0.167008,0,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0.143131,0,0.053990,0,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 4;
nnOutput = 4;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["97: 4 " <> ToString[predicted] <> " 4 " <> warning];
correctResults=List[-9.333432197570801,-9.387685775756836,-5.57597827911377 ,
 -9.259267807006836, 6.602691173553467,-9.285942077636719,
 -9.386266708374023,-5.568953037261963,-8.525790214538574,
 -7.898544311523438];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p97=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p97.pdf", p97];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0.497721,0,0.461532,0,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.511202,0,0.464313,0.428387,0,0.262620,0,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.426754,0,0.448233,0,0.434992,0,0.156477,0.451991,0,0,0.144666,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.314375,0,0.403703,0,0.314245,0,0.140482,0.371697,0,0.006201,0,0,0.215313,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0,0.332665,0,0.369637,0,0.249831,0.429296,0,0.206562,0,0,0.376285,0,0.184573,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.156304,0,0.316453,0,0.361107,0.064036,0,0.426906,0,0,0.401586,0,0.361897,0,0.192119,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.153103,0,0.270985,0,0.162189,0.529135,0,0.096689,0,0,0.460831,0,0.352680,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.238632,0.406471,0,0.608881,0,0,0.212483,0,0.459073,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0.078140,0,0.589287,0,0.101289,0,0,0.520428,0,0.440738,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0.230342,0,0.422785,0,0,0.385365,0,0.409662,0,0.260443,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.104513,0,0.135348,0,0.119614,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0,0.009445,0,0.013344,0,0.011866,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 1;
nnOutput = 1;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["98: 1 " <> ToString[predicted] <> " 1 " <> warning];
correctResults=List[-5.706146240234375, 1.325274229049683,-4.539930820465088,
 -5.527139663696289,-3.421123027801514,-5.658656120300293,
 -5.758980274200439,-4.42806339263916 ,-4.463571071624756,
 -5.500180244445801];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p98=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p98.pdf", p98];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

rsys=MNISTReduced[0,-0.000000,0,-0.000000,0,0.000004,0,0.000039,0,0.000090,0,0.000332,0,0.000564,0,0.000532,0,0.000156,0,0.000141,0,0.000019,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000135,0,0.001062,0,0.004690,0,0.014606,0,0.026462,0,0.032849,0,0.027664,0,0.016708,0,0.006594,0,0.001757,0,0.000175,0,0.000016,0,0.000002,0,0.000055,0,0.002184,0,0.014162,0,0.049208,0,0.120688,0,0.207630,0,0.270524,0,0.248136,0,0.159142,0,0.073762,0,0.024274,0,0.004516,0,0.000304,0,0.000015,0,0.001085,0,0.013142,0,0.054217,0,0.155533,0,0.305382,0,0.440316,0,0.442575,0,0.036862,0,0.272594,0,0.194243,0,0.067896,0,0.015819,0,0.000977,0,0.000234,0,0.003641,0,0.024931,0,0.094997,0,0.262070,0,0.424793,0,0.197253,0.401283,0,0.535679,0,0.423559,0,0,0.124078,0,0.085189,0,0.017484,0,0.001330,0,0.000207,0,0.003246,0,0.023288,0,0.114304,0,0.287904,0.196297,0,0.677912,0,0.671283,0,0.169736,0,0.436593,0,0.487628,0,0,0.075762,0,0.010833,0,0.000623,0,0.000061,0,0.001383,0,0.023348,0,0.141383,0.158511,0,0.613696,0,0.135463,0,0,0.110900,0,0.078732,0.591362,0,0.232093,0,0,0.073998,0,0.010914,0,0.000064,0,-0.000000,0,0.000755,0,0.030852,0,0.145520,0.653155,0,0.554579,0,0.329722,0,0.377886,0,0.471944,0,0.383201,0,0,0.173492,0,0.081599,0,0.012928,0,0.000105,0,0.000005,0,0.001523,0,0.040374,0,0.148201,0.322152,0,0.489772,0,0.126193,0,0,0.075860,0.510737,0,0,0.236993,0,0.206443,0,0.076621,0,0.011384,0,0.000181,0,0.000037,0,0.003753,0,0.051588,0,0.163730,0,0.259220,0,0.310196,0,0.363668,0.173791,0,0.187006,0,0,0.355238,0,0.182363,0,0.056726,0,0.008753,0,0.000282,0,0.000004,0,0.004475,0,0.046921,0,0.164369,0,0.300291,0,0.402870,0,0.393809,0.416827,0,0,0.189758,0,0.264202,0,0.105839,0,0.028535,0,0.004528,0,0.000139,0,0.000002,0,0.001535,0,0.019286,0,0.090299,0,0.228482,0,0.371333,0.020518,0,0.430534,0,0,0.255541,0,0.112241,0,0.032807,0,0.007666,0,0.001179,0,0.000017,0,-0.000000,0,0.000089,0,0.002298,0,0.014789,0,0.053258,0,0.049611,0.759750,0,0.335288,0,0,0.069540,0,0.025328,0,0.006677,0,0.001103,0,0.000058,0,-0.000000,0,-0.000000,0,-0.000000,0,0.000128,0,0.001535,0,0.005103,0.038594,0,0.423911,0,0.001859,0,0,0.007025,0,0.002597,0,0.000876,0,0.000162,0,0.000003,0,-0.000000];
sol=SimulateRxnsys[rsys,tmax, MaxSteps->Automatic, AccuracyGoal->Automatic, Method->{"EquationSimplification"->"Residual"}];
results={(hL1N0Spos[tmax] - hL1N0Sneg[tmax])/.sol,(hL1N1Spos[tmax] - hL1N1Sneg[tmax])/.sol,(hL1N2Spos[tmax] - hL1N2Sneg[tmax])/.sol,(hL1N3Spos[tmax] - hL1N3Sneg[tmax])/.sol,(hL1N4Spos[tmax] - hL1N4Sneg[tmax])/.sol,(hL1N5Spos[tmax] - hL1N5Sneg[tmax])/.sol,(hL1N6Spos[tmax] - hL1N6Sneg[tmax])/.sol,(hL1N7Spos[tmax] - hL1N7Sneg[tmax])/.sol,(hL1N8Spos[tmax] - hL1N8Sneg[tmax])/.sol,(hL1N9Spos[tmax] - hL1N9Sneg[tmax])/.sol};
predicted = Position[results,Max[results]][[1]][[1]] - 1;
totalCount += 1;
warning = "";
correctOutput = 9;
nnOutput = 9;
If[predicted == correctOutput, correctCount+=1, warning = "*"];
If[predicted == nnOutput, matchingCount+=1, warning = "**"];
Print["99: 9 " <> ToString[predicted] <> " 9 " <> warning];
correctResults=List[-5.334856986999512,-5.389110565185547,-5.388414859771729,
 -5.260692596435547,-5.279695987701416,-5.28736686706543 ,
 -3.49205207824707 ,-5.381389617919922,-4.527215480804443,
  3.983842849731445];
plotter={(hL1N0Spos[t] - hL1N0Sneg[t])/.sol,(hL1N1Spos[t] - hL1N1Sneg[t])/.sol,(hL1N2Spos[t] - hL1N2Sneg[t])/.sol,(hL1N3Spos[t] - hL1N3Sneg[t])/.sol,(hL1N4Spos[t] - hL1N4Sneg[t])/.sol,(hL1N5Spos[t] - hL1N5Sneg[t])/.sol,(hL1N6Spos[t] - hL1N6Sneg[t])/.sol,(hL1N7Spos[t] - hL1N7Sneg[t])/.sol,(hL1N8Spos[t] - hL1N8Sneg[t])/.sol,(hL1N9Spos[t] - hL1N9Sneg[t])/.sol};
p99=Plot[plotter, {t, 0, tmax}, PlotLabels->{"y0","y1","y2","y3","y4","y5","y6","y7","y8","y9"}, PlotRange->All, AxesLabel->{"time","value"}];
Export["../results/MNISTReduced_p99.pdf", p99];

If[analyzeConvergenceTime, 
  outputConfidences = softmax[correctResults];
  correctOutputConfidence = outputConfidences[[correctOutput+1]];
  WriteString["MNISTReduced_convergence_times.csv", ToString[DecimalForm[correctOutputConfidence,{20,15}]] <> ","];
  times = AnalyzeConvergence[plotter, correctResults, correctOutput + 1, tmax];
  For[i=1, i <= Length[times], i = i+1,
    WriteString["MNISTReduced_convergence_times.csv", DecimalForm[times[[i]], {20, 5}]];
    If[i < Length[times], WriteString["MNISTReduced_convergence_times.csv", ","], WriteLine["MNISTReduced_convergence_times.csv", ""]];
  ];
];

Print["totalCount (number of predictions): " <> ToString[totalCount]];
Print["correctCount (number of correct predictions): " <> ToString[correctCount]];
Print["matchingCount (number of predictions matching NN output): " <> ToString[matchingCount]];
